// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_fc_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pool1_out5_dout,
        pool1_out5_empty_n,
        pool1_out5_read,
        out_stream_V_TDATA,
        out_stream_V_TVALID,
        out_stream_V_TREADY,
        grp_fu_5480_p_din0,
        grp_fu_5480_p_din1,
        grp_fu_5480_p_opcode,
        grp_fu_5480_p_dout0,
        grp_fu_5480_p_ce,
        grp_fu_5484_p_din0,
        grp_fu_5484_p_din1,
        grp_fu_5484_p_opcode,
        grp_fu_5484_p_dout0,
        grp_fu_5484_p_ce,
        grp_fu_5500_p_din0,
        grp_fu_5500_p_din1,
        grp_fu_5500_p_dout0,
        grp_fu_5500_p_ce,
        grp_fu_5504_p_din0,
        grp_fu_5504_p_din1,
        grp_fu_5504_p_dout0,
        grp_fu_5504_p_ce
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_state26 = 52'd33554432;
parameter    ap_ST_fsm_state27 = 52'd67108864;
parameter    ap_ST_fsm_state28 = 52'd134217728;
parameter    ap_ST_fsm_state29 = 52'd268435456;
parameter    ap_ST_fsm_state30 = 52'd536870912;
parameter    ap_ST_fsm_state31 = 52'd1073741824;
parameter    ap_ST_fsm_state32 = 52'd2147483648;
parameter    ap_ST_fsm_state33 = 52'd4294967296;
parameter    ap_ST_fsm_state34 = 52'd8589934592;
parameter    ap_ST_fsm_state35 = 52'd17179869184;
parameter    ap_ST_fsm_state36 = 52'd34359738368;
parameter    ap_ST_fsm_state37 = 52'd68719476736;
parameter    ap_ST_fsm_state38 = 52'd137438953472;
parameter    ap_ST_fsm_state39 = 52'd274877906944;
parameter    ap_ST_fsm_state40 = 52'd549755813888;
parameter    ap_ST_fsm_state41 = 52'd1099511627776;
parameter    ap_ST_fsm_state42 = 52'd2199023255552;
parameter    ap_ST_fsm_state43 = 52'd4398046511104;
parameter    ap_ST_fsm_state44 = 52'd8796093022208;
parameter    ap_ST_fsm_state45 = 52'd17592186044416;
parameter    ap_ST_fsm_state46 = 52'd35184372088832;
parameter    ap_ST_fsm_state47 = 52'd70368744177664;
parameter    ap_ST_fsm_state48 = 52'd140737488355328;
parameter    ap_ST_fsm_state49 = 52'd281474976710656;
parameter    ap_ST_fsm_state50 = 52'd562949953421312;
parameter    ap_ST_fsm_pp3_stage0 = 52'd1125899906842624;
parameter    ap_ST_fsm_state55 = 52'd2251799813685248;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] pool1_out5_dout;
input   pool1_out5_empty_n;
output   pool1_out5_read;
output  [31:0] out_stream_V_TDATA;
output   out_stream_V_TVALID;
input   out_stream_V_TREADY;
output  [31:0] grp_fu_5480_p_din0;
output  [31:0] grp_fu_5480_p_din1;
output  [1:0] grp_fu_5480_p_opcode;
input  [31:0] grp_fu_5480_p_dout0;
output   grp_fu_5480_p_ce;
output  [31:0] grp_fu_5484_p_din0;
output  [31:0] grp_fu_5484_p_din1;
output  [1:0] grp_fu_5484_p_opcode;
input  [31:0] grp_fu_5484_p_dout0;
output   grp_fu_5484_p_ce;
output  [31:0] grp_fu_5500_p_din0;
output  [31:0] grp_fu_5500_p_din1;
input  [31:0] grp_fu_5500_p_dout0;
output   grp_fu_5500_p_ce;
output  [31:0] grp_fu_5504_p_din0;
output  [31:0] grp_fu_5504_p_din1;
input  [31:0] grp_fu_5504_p_dout0;
output   grp_fu_5504_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pool1_out5_read;
reg out_stream_V_TVALID;

(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] fc_layer1_weights_0_address0;
reg    fc_layer1_weights_0_ce0;
wire   [31:0] fc_layer1_weights_0_q0;
reg   [10:0] fc_layer1_weights_1_address0;
reg    fc_layer1_weights_1_ce0;
wire   [31:0] fc_layer1_weights_1_q0;
reg   [10:0] fc_layer1_weights_2_address0;
reg    fc_layer1_weights_2_ce0;
wire   [31:0] fc_layer1_weights_2_q0;
reg   [10:0] fc_layer1_weights_3_address0;
reg    fc_layer1_weights_3_ce0;
wire   [31:0] fc_layer1_weights_3_q0;
reg   [10:0] fc_layer1_weights_4_address0;
reg    fc_layer1_weights_4_ce0;
wire   [31:0] fc_layer1_weights_4_q0;
reg   [10:0] fc_layer1_weights_5_address0;
reg    fc_layer1_weights_5_ce0;
wire   [31:0] fc_layer1_weights_5_q0;
reg   [10:0] fc_layer1_weights_6_address0;
reg    fc_layer1_weights_6_ce0;
wire   [31:0] fc_layer1_weights_6_q0;
reg   [10:0] fc_layer1_weights_7_address0;
reg    fc_layer1_weights_7_ce0;
wire   [31:0] fc_layer1_weights_7_q0;
reg   [10:0] fc_layer1_weights_8_address0;
reg    fc_layer1_weights_8_ce0;
wire   [31:0] fc_layer1_weights_8_q0;
reg   [10:0] fc_layer1_weights_9_address0;
reg    fc_layer1_weights_9_ce0;
wire   [31:0] fc_layer1_weights_9_q0;
wire   [3:0] fc_layer1_bias_address0;
reg    fc_layer1_bias_ce0;
wire   [31:0] fc_layer1_bias_q0;
reg    pool1_out5_blk_n;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    out_stream_V_TDATA_blk_n;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln33_reg_2348;
reg   [0:0] icmp_ln33_reg_2348_pp3_iter2_reg;
reg   [3:0] indvars_iv_reg_979;
reg   [31:0] reg_1017;
wire   [31:0] output_q1;
reg   [31:0] reg_1022;
wire   [31:0] output_q0;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state51_pp3_stage0_iter0;
wire    ap_block_state52_pp3_stage0_iter1;
wire    ap_block_state53_pp3_stage0_iter2;
reg    ap_block_state54_pp3_stage0_iter3;
reg    ap_block_state54_io;
reg    ap_block_pp3_stage0_11001;
reg   [31:0] reg_1028;
reg   [31:0] reg_1033;
reg   [31:0] reg_1039;
reg   [31:0] reg_1044;
reg   [31:0] reg_1049;
reg   [31:0] reg_1054;
reg   [31:0] reg_1059;
reg   [31:0] reg_1064;
reg   [31:0] reg_1069;
reg   [31:0] reg_1074;
wire   [31:0] grp_fu_1002_p2;
reg   [31:0] reg_1079;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire   [31:0] grp_fu_1007_p2;
reg   [31:0] reg_1084;
reg   [31:0] reg_1089;
reg   [31:0] reg_1094;
reg   [31:0] reg_1099;
reg   [31:0] reg_1103;
reg   [31:0] reg_1108;
reg   [31:0] reg_1113;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
reg   [31:0] reg_1118;
wire   [31:0] grp_fu_990_p2;
reg   [31:0] reg_1123;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] icmp_ln33_reg_2348_pp3_iter1_reg;
wire   [31:0] grp_fu_994_p2;
reg   [31:0] reg_1129;
reg   [31:0] reg_1134;
reg   [31:0] reg_1139;
reg   [31:0] reg_1144;
reg   [31:0] reg_1149;
reg   [31:0] reg_1154;
reg   [31:0] reg_1159;
reg   [31:0] reg_1164;
reg   [31:0] reg_1169;
wire   [3:0] empty_22_fu_1174_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] add_ln19_fu_1191_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [7:0] add_ln22_fu_1208_p2;
reg   [7:0] add_ln22_reg_1565;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln22_fu_1214_p2;
wire   [8:0] zext_ln22_3_fu_1234_p1;
reg   [8:0] zext_ln22_3_reg_1623;
wire   [31:0] bitcast_ln145_fu_1238_p1;
reg   [31:0] bitcast_ln145_reg_1628;
wire   [10:0] zext_ln22_1_fu_1264_p1;
reg   [10:0] zext_ln22_1_reg_1684;
wire   [9:0] zext_ln22_2_fu_1268_p1;
reg   [9:0] zext_ln22_2_reg_1691;
reg   [31:0] fc_layer1_weights_4_load_1_reg_1696;
reg   [31:0] fc_layer1_weights_5_load_1_reg_1701;
reg   [31:0] fc_layer1_weights_6_load_1_reg_1706;
reg   [31:0] fc_layer1_weights_7_load_1_reg_1711;
reg   [31:0] fc_layer1_weights_8_load_1_reg_1716;
reg   [31:0] fc_layer1_weights_9_load_1_reg_1721;
reg   [31:0] output_load_5_reg_1776;
reg   [31:0] output_load_6_reg_1781;
reg   [31:0] pool1_out5_read_2_reg_1786;
reg   [31:0] fc_layer1_weights_0_load_2_reg_1791;
reg   [31:0] fc_layer1_weights_1_load_2_reg_1796;
reg   [31:0] fc_layer1_weights_4_load_2_reg_1801;
reg   [31:0] fc_layer1_weights_5_load_2_reg_1806;
reg   [31:0] fc_layer1_weights_6_load_2_reg_1811;
reg   [31:0] fc_layer1_weights_7_load_2_reg_1816;
reg   [31:0] fc_layer1_weights_8_load_2_reg_1821;
reg   [31:0] fc_layer1_weights_9_load_2_reg_1826;
reg   [31:0] pool1_out5_read_3_reg_1881;
reg   [31:0] fc_layer1_weights_0_load_3_reg_1886;
reg   [31:0] fc_layer1_weights_1_load_3_reg_1891;
reg   [31:0] fc_layer1_weights_2_load_3_reg_1896;
reg   [31:0] fc_layer1_weights_3_load_3_reg_1901;
reg   [31:0] fc_layer1_weights_6_load_3_reg_1906;
reg   [31:0] fc_layer1_weights_7_load_3_reg_1911;
reg   [31:0] fc_layer1_weights_8_load_3_reg_1916;
reg   [31:0] fc_layer1_weights_9_load_3_reg_1921;
reg   [31:0] pool1_out5_read_4_reg_1976;
reg   [31:0] fc_layer1_weights_0_load_4_reg_1981;
reg   [31:0] fc_layer1_weights_1_load_4_reg_1986;
reg   [31:0] fc_layer1_weights_2_load_4_reg_1991;
reg   [31:0] fc_layer1_weights_3_load_4_reg_1996;
reg   [31:0] fc_layer1_weights_4_load_4_reg_2001;
reg   [31:0] fc_layer1_weights_5_load_4_reg_2006;
reg   [31:0] fc_layer1_weights_8_load_4_reg_2011;
reg   [31:0] fc_layer1_weights_9_load_4_reg_2016;
wire   [31:0] bitcast_ln145_1_fu_1353_p1;
reg   [31:0] bitcast_ln145_1_reg_2071;
reg   [31:0] fc_layer1_weights_0_load_5_reg_2077;
reg   [31:0] fc_layer1_weights_1_load_5_reg_2082;
reg   [31:0] fc_layer1_weights_2_load_5_reg_2087;
reg   [31:0] fc_layer1_weights_3_load_5_reg_2092;
reg   [31:0] fc_layer1_weights_4_load_5_reg_2097;
reg   [31:0] fc_layer1_weights_5_load_5_reg_2102;
reg   [31:0] fc_layer1_weights_6_load_5_reg_2107;
reg   [31:0] fc_layer1_weights_7_load_5_reg_2112;
reg   [31:0] pool1_out5_read_6_reg_2167;
reg   [31:0] fc_layer1_weights_2_load_6_reg_2172;
reg   [31:0] fc_layer1_weights_3_load_6_reg_2177;
reg   [31:0] fc_layer1_weights_4_load_6_reg_2182;
reg   [31:0] fc_layer1_weights_5_load_6_reg_2187;
reg   [31:0] fc_layer1_weights_6_load_6_reg_2192;
reg   [31:0] fc_layer1_weights_7_load_6_reg_2197;
reg   [31:0] fc_layer1_weights_8_load_6_reg_2202;
reg   [31:0] fc_layer1_weights_9_load_6_reg_2207;
reg   [31:0] pool1_out5_read_7_reg_2262;
reg   [31:0] fc_layer1_weights_0_load_7_reg_2267;
reg   [31:0] fc_layer1_weights_1_load_7_reg_2272;
reg   [31:0] fc_layer1_weights_4_load_7_reg_2277;
reg   [31:0] fc_layer1_weights_5_load_7_reg_2282;
reg   [31:0] fc_layer1_weights_6_load_7_reg_2287;
reg   [31:0] fc_layer1_weights_7_load_7_reg_2292;
reg   [31:0] fc_layer1_weights_8_load_7_reg_2297;
reg   [31:0] fc_layer1_weights_9_load_7_reg_2302;
wire   [31:0] bitcast_ln145_2_fu_1397_p1;
reg   [31:0] bitcast_ln145_2_reg_2307;
wire   [31:0] bitcast_ln145_3_fu_1402_p1;
reg   [31:0] bitcast_ln145_3_reg_2313;
wire   [31:0] bitcast_ln145_4_fu_1407_p1;
reg   [31:0] bitcast_ln145_4_reg_2319;
wire   [31:0] bitcast_ln145_5_fu_1412_p1;
reg   [31:0] bitcast_ln145_5_reg_2325;
wire   [31:0] bitcast_ln145_6_fu_1418_p1;
reg   [31:0] bitcast_ln145_6_reg_2331;
wire   [31:0] bitcast_ln145_7_fu_1423_p1;
reg   [31:0] bitcast_ln145_7_reg_2337;
wire   [3:0] add_ln33_fu_1428_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln33_fu_1434_p2;
wire    ap_CS_fsm_state50;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state51;
reg   [3:0] output_address0;
reg    output_ce0;
reg    output_we0;
reg   [31:0] output_d0;
reg   [3:0] output_address1;
reg    output_ce1;
reg    output_we1;
reg   [3:0] empty_reg_945;
wire   [0:0] exitcond201_fu_1180_p2;
reg   [3:0] indvars_iv17_reg_956;
wire   [0:0] icmp_ln19_fu_1197_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] indvars_iv14_reg_967;
wire    ap_CS_fsm_state49;
wire   [63:0] p_cast_fu_1186_p1;
wire   [63:0] indvars_iv17_cast_fu_1203_p1;
wire   [63:0] zext_ln22_fu_1220_p1;
wire   [63:0] zext_ln29_fu_1250_p1;
wire   [63:0] zext_ln29_1_fu_1278_p1;
wire   [63:0] zext_ln29_2_fu_1297_p1;
wire   [63:0] zext_ln29_3_fu_1320_p1;
wire   [63:0] zext_ln29_4_fu_1339_p1;
wire   [63:0] zext_ln29_5_fu_1364_p1;
wire   [63:0] zext_ln29_6_fu_1383_p1;
wire   [63:0] indvars_iv_cast_fu_1440_p1;
reg    ap_block_pp3_stage0_01001;
wire    ap_CS_fsm_state48;
reg   [31:0] grp_fu_990_p0;
reg   [31:0] grp_fu_990_p1;
reg   [31:0] grp_fu_994_p0;
reg   [31:0] grp_fu_994_p1;
reg   [31:0] grp_fu_1002_p0;
reg   [31:0] grp_fu_1002_p1;
reg   [31:0] grp_fu_1007_p0;
reg   [31:0] grp_fu_1007_p1;
wire   [8:0] empty_26_fu_1244_p2;
wire   [9:0] empty_27_fu_1272_p2;
wire   [9:0] empty_28_fu_1292_p2;
wire   [8:0] empty_29_fu_1311_p2;
wire  signed [9:0] sext_ln29_fu_1316_p1;
wire   [10:0] empty_30_fu_1334_p2;
wire   [10:0] empty_31_fu_1359_p2;
wire   [10:0] empty_32_fu_1378_p2;
wire   [31:0] bitcast_ln34_fu_1446_p1;
wire   [7:0] tmp_fu_1450_p4;
wire   [22:0] trunc_ln34_fu_1460_p1;
wire   [0:0] icmp_ln34_1_fu_1470_p2;
wire   [0:0] icmp_ln34_fu_1464_p2;
wire   [0:0] or_ln34_fu_1476_p2;
wire   [0:0] tmp_1_fu_1012_p2;
wire   [0:0] and_ln34_fu_1482_p2;
reg    grp_fu_990_ce;
wire    ap_CS_fsm_state55;
reg    grp_fu_994_ce;
reg    grp_fu_1002_ce;
reg    grp_fu_1007_ce;
reg    ap_block_pp3_stage0_00001;
reg   [51:0] ap_NS_fsm;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
end

cnn_fc_layer1_fc_layer1_weights_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_0_address0),
    .ce0(fc_layer1_weights_0_ce0),
    .q0(fc_layer1_weights_0_q0)
);

cnn_fc_layer1_fc_layer1_weights_1 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_1_address0),
    .ce0(fc_layer1_weights_1_ce0),
    .q0(fc_layer1_weights_1_q0)
);

cnn_fc_layer1_fc_layer1_weights_2 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_2_address0),
    .ce0(fc_layer1_weights_2_ce0),
    .q0(fc_layer1_weights_2_q0)
);

cnn_fc_layer1_fc_layer1_weights_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_3_address0),
    .ce0(fc_layer1_weights_3_ce0),
    .q0(fc_layer1_weights_3_q0)
);

cnn_fc_layer1_fc_layer1_weights_4 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_4_address0),
    .ce0(fc_layer1_weights_4_ce0),
    .q0(fc_layer1_weights_4_q0)
);

cnn_fc_layer1_fc_layer1_weights_5 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_5_address0),
    .ce0(fc_layer1_weights_5_ce0),
    .q0(fc_layer1_weights_5_q0)
);

cnn_fc_layer1_fc_layer1_weights_6 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_6_address0),
    .ce0(fc_layer1_weights_6_ce0),
    .q0(fc_layer1_weights_6_q0)
);

cnn_fc_layer1_fc_layer1_weights_7 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_7_address0),
    .ce0(fc_layer1_weights_7_ce0),
    .q0(fc_layer1_weights_7_q0)
);

cnn_fc_layer1_fc_layer1_weights_8 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_8_address0),
    .ce0(fc_layer1_weights_8_ce0),
    .q0(fc_layer1_weights_8_q0)
);

cnn_fc_layer1_fc_layer1_weights_9 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_9_address0),
    .ce0(fc_layer1_weights_9_ce0),
    .q0(fc_layer1_weights_9_q0)
);

cnn_fc_layer1_fc_layer1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc_layer1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_bias_address0),
    .ce0(fc_layer1_bias_ce0),
    .q0(fc_layer1_bias_q0)
);

cnn_fc_layer1_output #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_address0),
    .ce0(output_ce0),
    .we0(output_we0),
    .d0(output_d0),
    .q0(output_q0),
    .address1(output_address1),
    .ce1(output_ce1),
    .we1(output_we1),
    .d1(grp_fu_5484_p_dout0),
    .q1(output_q1)
);

cnn_fcmp_32ns_32ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_1_no_dsp_1_U20(
    .din0(reg_1123),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_1_fu_1012_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state51)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond201_fu_1180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_945 <= empty_22_fu_1174_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_945 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvars_iv14_reg_967 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        indvars_iv14_reg_967 <= add_ln22_reg_1565;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvars_iv17_reg_956 <= 4'd0;
    end else if (((icmp_ln19_fu_1197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        indvars_iv17_reg_956 <= add_ln19_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        indvars_iv_reg_979 <= 4'd0;
    end else if (((icmp_ln33_fu_1434_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvars_iv_reg_979 <= add_ln33_fu_1428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        reg_1022 <= output_q0;
    end else if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln33_reg_2348 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1022 <= output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((pool1_out5_empty_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            reg_1033 <= output_q1;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            reg_1033 <= output_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln22_reg_1565 <= add_ln22_fu_1208_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bitcast_ln145_1_reg_2071 <= bitcast_ln145_1_fu_1353_p1;
        fc_layer1_weights_0_load_5_reg_2077 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_5_reg_2082 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_5_reg_2087 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_5_reg_2092 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_5_reg_2097 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_5_reg_2102 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_5_reg_2107 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_5_reg_2112 <= fc_layer1_weights_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bitcast_ln145_2_reg_2307 <= bitcast_ln145_2_fu_1397_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bitcast_ln145_3_reg_2313 <= bitcast_ln145_3_fu_1402_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        bitcast_ln145_4_reg_2319 <= bitcast_ln145_4_fu_1407_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        bitcast_ln145_5_reg_2325 <= bitcast_ln145_5_fu_1412_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        bitcast_ln145_6_reg_2331 <= bitcast_ln145_6_fu_1418_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        bitcast_ln145_7_reg_2337 <= bitcast_ln145_7_fu_1423_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bitcast_ln145_reg_1628 <= bitcast_ln145_fu_1238_p1;
        zext_ln22_3_reg_1623[7 : 0] <= zext_ln22_3_fu_1234_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_0_load_2_reg_1791 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_2_reg_1796 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_4_load_2_reg_1801 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_2_reg_1806 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_2_reg_1811 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_2_reg_1816 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_2_reg_1821 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_2_reg_1826 <= fc_layer1_weights_9_q0;
        output_load_5_reg_1776 <= output_q0;
        output_load_6_reg_1781 <= output_q1;
        pool1_out5_read_2_reg_1786 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_0_load_3_reg_1886 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_3_reg_1891 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_3_reg_1896 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_3_reg_1901 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_6_load_3_reg_1906 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_3_reg_1911 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_3_reg_1916 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_3_reg_1921 <= fc_layer1_weights_9_q0;
        pool1_out5_read_3_reg_1881 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_0_load_4_reg_1981 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_4_reg_1986 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_4_reg_1991 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_4_reg_1996 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_4_reg_2001 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_4_reg_2006 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_8_load_4_reg_2011 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_4_reg_2016 <= fc_layer1_weights_9_q0;
        pool1_out5_read_4_reg_1976 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_layer1_weights_0_load_7_reg_2267 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_7_reg_2272 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_4_load_7_reg_2277 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_7_reg_2282 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_7_reg_2287 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_7_reg_2292 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_7_reg_2297 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_7_reg_2302 <= fc_layer1_weights_9_q0;
        pool1_out5_read_7_reg_2262 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_2_load_6_reg_2172 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_6_reg_2177 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_6_reg_2182 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_6_reg_2187 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_6_reg_2192 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_6_reg_2197 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_6_reg_2202 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_6_reg_2207 <= fc_layer1_weights_9_q0;
        pool1_out5_read_6_reg_2167 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_4_load_1_reg_1696 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_1_reg_1701 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_1_reg_1706 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_1_reg_1711 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_1_reg_1716 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_1_reg_1721 <= fc_layer1_weights_9_q0;
        zext_ln22_1_reg_1684[7 : 0] <= zext_ln22_1_fu_1264_p1[7 : 0];
        zext_ln22_2_reg_1691[7 : 0] <= zext_ln22_2_fu_1268_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln33_reg_2348 <= icmp_ln33_fu_1434_p2;
        icmp_ln33_reg_2348_pp3_iter1_reg <= icmp_ln33_reg_2348;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln33_reg_2348_pp3_iter2_reg <= icmp_ln33_reg_2348_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1017 <= fc_layer1_weights_0_q0;
        reg_1028 <= fc_layer1_weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1039 <= fc_layer1_weights_2_q0;
        reg_1044 <= fc_layer1_weights_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1049 <= fc_layer1_weights_4_q0;
        reg_1054 <= fc_layer1_weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1059 <= fc_layer1_weights_6_q0;
        reg_1064 <= fc_layer1_weights_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1069 <= fc_layer1_weights_8_q0;
        reg_1074 <= fc_layer1_weights_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1079 <= grp_fu_5500_p_dout0;
        reg_1084 <= grp_fu_5504_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1089 <= output_q0;
        reg_1094 <= output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1099 <= pool1_out5_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1103 <= fc_layer1_weights_2_q0;
        reg_1108 <= fc_layer1_weights_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        reg_1113 <= grp_fu_5500_p_dout0;
        reg_1118 <= grp_fu_5504_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln33_reg_2348_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_1123 <= grp_fu_5480_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_1129 <= grp_fu_5484_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        reg_1134 <= grp_fu_5480_p_dout0;
        reg_1139 <= grp_fu_5484_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        reg_1144 <= grp_fu_5480_p_dout0;
        reg_1149 <= grp_fu_5484_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        reg_1154 <= grp_fu_5480_p_dout0;
        reg_1159 <= grp_fu_5484_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        reg_1164 <= grp_fu_5480_p_dout0;
        reg_1169 <= grp_fu_5484_p_dout0;
    end
end

always @ (*) begin
    if ((icmp_ln33_fu_1434_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        fc_layer1_bias_ce0 = 1'b1;
    end else begin
        fc_layer1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_0_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_0_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_0_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_0_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_0_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_0_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_0_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_0_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_0_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_1_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_1_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_1_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_1_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_1_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_1_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_1_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_1_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_1_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_2_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_2_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_2_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_2_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_2_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_2_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_2_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_2_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_2_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_3_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_3_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_3_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_3_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_3_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_3_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_3_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_3_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_3_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_4_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_4_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_4_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_4_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_4_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_4_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_4_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_4_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_4_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_5_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_5_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_5_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_5_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_5_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_5_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_5_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_5_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_5_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_6_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_6_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_6_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_6_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_6_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_6_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_6_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_6_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_6_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_7_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_7_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_7_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_7_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_7_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_7_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_7_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_7_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_7_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_8_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_8_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_8_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_8_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_8_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_8_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_8_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_8_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_8_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_layer1_weights_9_address0 = zext_ln29_6_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc_layer1_weights_9_address0 = zext_ln29_5_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_9_address0 = zext_ln29_4_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_9_address0 = zext_ln29_3_fu_1320_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_9_address0 = zext_ln29_2_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_9_address0 = zext_ln29_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_9_address0 = zext_ln29_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_9_address0 = zext_ln22_fu_1220_p1;
    end else begin
        fc_layer1_weights_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        fc_layer1_weights_9_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state55) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1002_ce = 1'b0;
    end else begin
        grp_fu_1002_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_7_reg_2297;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_7_reg_2287;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_7_reg_2277;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_load_7_reg_2267;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_6_reg_2202;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_6_reg_2192;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_6_reg_2182;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1002_p0 = fc_layer1_weights_2_load_6_reg_2172;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_5_reg_2107;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_5_reg_2097;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_1002_p0 = fc_layer1_weights_2_load_5_reg_2087;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_load_5_reg_2077;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_4_reg_2011;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_4_reg_2001;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1002_p0 = fc_layer1_weights_2_load_4_reg_1991;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_load_4_reg_1981;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_3_reg_1916;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_3_reg_1906;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1002_p0 = fc_layer1_weights_2_load_3_reg_1896;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_load_3_reg_1886;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_2_reg_1821;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_2_reg_1811;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_2_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_load_2_reg_1791;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1002_p0 = fc_layer1_weights_8_load_1_reg_1716;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1002_p0 = fc_layer1_weights_6_load_1_reg_1706;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1002_p0 = fc_layer1_weights_4_load_1_reg_1696;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1002_p0 = reg_1103;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_1002_p0 = reg_1017;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1002_p0 = reg_1069;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1002_p0 = reg_1059;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_1002_p0 = reg_1049;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1002_p0 = reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1002_p0 = fc_layer1_weights_0_q0;
    end else begin
        grp_fu_1002_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1002_p1 = bitcast_ln145_7_reg_2337;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1002_p1 = bitcast_ln145_7_fu_1423_p1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1002_p1 = bitcast_ln145_6_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1002_p1 = bitcast_ln145_6_fu_1418_p1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_1002_p1 = bitcast_ln145_5_reg_2325;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1002_p1 = bitcast_ln145_5_fu_1412_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1002_p1 = bitcast_ln145_4_reg_2319;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1002_p1 = bitcast_ln145_4_fu_1407_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1002_p1 = bitcast_ln145_3_reg_2313;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1002_p1 = bitcast_ln145_3_fu_1402_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_1002_p1 = bitcast_ln145_2_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1002_p1 = bitcast_ln145_2_fu_1397_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1002_p1 = bitcast_ln145_1_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1002_p1 = bitcast_ln145_1_fu_1353_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1002_p1 = bitcast_ln145_reg_1628;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1002_p1 = bitcast_ln145_fu_1238_p1;
    end else begin
        grp_fu_1002_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state55) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1007_ce = 1'b0;
    end else begin
        grp_fu_1007_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_7_reg_2302;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_7_reg_2292;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_7_reg_2282;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_load_7_reg_2272;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_6_reg_2207;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_6_reg_2197;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_6_reg_2187;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1007_p0 = fc_layer1_weights_3_load_6_reg_2177;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_5_reg_2112;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_5_reg_2102;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_1007_p0 = fc_layer1_weights_3_load_5_reg_2092;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_load_5_reg_2082;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_4_reg_2016;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_4_reg_2006;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1007_p0 = fc_layer1_weights_3_load_4_reg_1996;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_load_4_reg_1986;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_3_reg_1921;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_3_reg_1911;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1007_p0 = fc_layer1_weights_3_load_3_reg_1901;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_load_3_reg_1891;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_2_reg_1826;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_2_reg_1816;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_2_reg_1806;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_load_2_reg_1796;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1007_p0 = fc_layer1_weights_9_load_1_reg_1721;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1007_p0 = fc_layer1_weights_7_load_1_reg_1711;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1007_p0 = fc_layer1_weights_5_load_1_reg_1701;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1007_p0 = reg_1108;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_1007_p0 = reg_1028;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1007_p0 = reg_1074;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1007_p0 = reg_1064;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_1007_p0 = reg_1054;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1007_p0 = reg_1044;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1007_p0 = fc_layer1_weights_1_q0;
    end else begin
        grp_fu_1007_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1007_p1 = bitcast_ln145_7_reg_2337;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1007_p1 = bitcast_ln145_7_fu_1423_p1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1007_p1 = bitcast_ln145_6_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1007_p1 = bitcast_ln145_6_fu_1418_p1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_1007_p1 = bitcast_ln145_5_reg_2325;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1007_p1 = bitcast_ln145_5_fu_1412_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1007_p1 = bitcast_ln145_4_reg_2319;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1007_p1 = bitcast_ln145_4_fu_1407_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1007_p1 = bitcast_ln145_3_reg_2313;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1007_p1 = bitcast_ln145_3_fu_1402_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_1007_p1 = bitcast_ln145_2_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1007_p1 = bitcast_ln145_2_fu_1397_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1007_p1 = bitcast_ln145_1_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1007_p1 = bitcast_ln145_1_fu_1353_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1007_p1 = bitcast_ln145_reg_1628;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1007_p1 = bitcast_ln145_fu_1238_p1;
    end else begin
        grp_fu_1007_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state55) | ((1'b1 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_990_ce = 1'b0;
    end else begin
        grp_fu_990_ce = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_990_p0 = output_q1;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_990_p0 = reg_1164;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_990_p0 = reg_1154;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_990_p0 = reg_1144;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_990_p0 = reg_1134;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_990_p0 = reg_1123;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_990_p0 = output_load_5_reg_1776;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_990_p0 = reg_1089;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_990_p0 = reg_1022;
    end else begin
        grp_fu_990_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_990_p1 = fc_layer1_bias_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_990_p1 = reg_1113;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_990_p1 = reg_1079;
    end else begin
        grp_fu_990_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_pp3_stage0) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state55) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_994_ce = 1'b0;
    end else begin
        grp_fu_994_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_994_p0 = reg_1169;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_994_p0 = reg_1159;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_994_p0 = reg_1149;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_994_p0 = reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_994_p0 = reg_1129;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_994_p0 = output_load_6_reg_1781;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_994_p0 = reg_1094;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_994_p0 = reg_1033;
    end else begin
        grp_fu_994_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_994_p1 = reg_1118;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_994_p1 = reg_1084;
    end else begin
        grp_fu_994_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        out_stream_V_TDATA_blk_n = out_stream_V_TREADY;
    end else begin
        out_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        out_stream_V_TVALID = 1'b1;
    end else begin
        out_stream_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        output_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state10))) begin
        output_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state9))) begin
        output_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state8))) begin
        output_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state7))) begin
        output_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_address0 = indvars_iv17_cast_fu_1203_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_address0 = p_cast_fu_1186_p1;
    end else begin
        output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        output_address1 = indvars_iv_cast_fu_1440_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        output_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state10))) begin
        output_address1 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state9))) begin
        output_address1 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state8))) begin
        output_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state7))) begin
        output_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_address1 = 64'd0;
    end else begin
        output_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        output_ce0 = 1'b1;
    end else begin
        output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        output_ce1 = 1'b1;
    end else begin
        output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46))) begin
        output_d0 = grp_fu_5480_p_dout0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        output_d0 = 32'd0;
    end else begin
        output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | ((icmp_ln19_fu_1197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((exitcond201_fu_1180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        output_we0 = 1'b1;
    end else begin
        output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46))) begin
        output_we1 = 1'b1;
    end else begin
        output_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        pool1_out5_blk_n = pool1_out5_empty_n;
    end else begin
        pool1_out5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        pool1_out5_read = 1'b1;
    end else begin
        pool1_out5_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond201_fu_1180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln19_fu_1197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln22_fu_1214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((pool1_out5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln33_fu_1434_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((icmp_ln33_fu_1434_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_1191_p2 = (indvars_iv17_reg_956 + 4'd1);

assign add_ln22_fu_1208_p2 = (indvars_iv14_reg_967 + 8'd1);

assign add_ln33_fu_1428_p2 = (indvars_iv_reg_979 + 4'd1);

assign and_ln34_fu_1482_p2 = (tmp_1_fu_1012_p2 & or_ln34_fu_1476_p2);

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_00001 = ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter3 == 1'b1) & ((1'b1 == ap_block_state54_io) | ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter3 == 1'b1) & ((1'b1 == ap_block_state54_io) | ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0))));
end

assign ap_block_state51_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state54_io = ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state54_pp3_stage0_iter3 = ((out_stream_V_TREADY == 1'b0) & (icmp_ln33_reg_2348_pp3_iter2_reg == 1'd0));
end

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign bitcast_ln145_1_fu_1353_p1 = reg_1099;

assign bitcast_ln145_2_fu_1397_p1 = pool1_out5_read_2_reg_1786;

assign bitcast_ln145_3_fu_1402_p1 = pool1_out5_read_3_reg_1881;

assign bitcast_ln145_4_fu_1407_p1 = pool1_out5_read_4_reg_1976;

assign bitcast_ln145_5_fu_1412_p1 = reg_1099;

assign bitcast_ln145_6_fu_1418_p1 = pool1_out5_read_6_reg_2167;

assign bitcast_ln145_7_fu_1423_p1 = pool1_out5_read_7_reg_2262;

assign bitcast_ln145_fu_1238_p1 = pool1_out5_dout;

assign bitcast_ln34_fu_1446_p1 = reg_1123;

assign empty_22_fu_1174_p2 = (empty_reg_945 + 4'd1);

assign empty_26_fu_1244_p2 = (zext_ln22_3_fu_1234_p1 + 9'd196);

assign empty_27_fu_1272_p2 = (zext_ln22_2_fu_1268_p1 + 10'd392);

assign empty_28_fu_1292_p2 = ($signed(zext_ln22_2_reg_1691) + $signed(10'd588));

assign empty_29_fu_1311_p2 = ($signed(zext_ln22_3_reg_1623) + $signed(9'd272));

assign empty_30_fu_1334_p2 = (zext_ln22_1_reg_1684 + 11'd980);

assign empty_31_fu_1359_p2 = ($signed(zext_ln22_1_reg_1684) + $signed(11'd1176));

assign empty_32_fu_1378_p2 = ($signed(zext_ln22_1_reg_1684) + $signed(11'd1372));

assign exitcond201_fu_1180_p2 = ((empty_reg_945 == 4'd10) ? 1'b1 : 1'b0);

assign fc_layer1_bias_address0 = indvars_iv_cast_fu_1440_p1;

assign grp_fu_1002_p2 = grp_fu_5500_p_dout0;

assign grp_fu_1007_p2 = grp_fu_5504_p_dout0;

assign grp_fu_5480_p_ce = grp_fu_990_ce;

assign grp_fu_5480_p_din0 = grp_fu_990_p0;

assign grp_fu_5480_p_din1 = grp_fu_990_p1;

assign grp_fu_5480_p_opcode = 2'd0;

assign grp_fu_5484_p_ce = grp_fu_994_ce;

assign grp_fu_5484_p_din0 = grp_fu_994_p0;

assign grp_fu_5484_p_din1 = grp_fu_994_p1;

assign grp_fu_5484_p_opcode = 2'd0;

assign grp_fu_5500_p_ce = grp_fu_1002_ce;

assign grp_fu_5500_p_din0 = grp_fu_1002_p0;

assign grp_fu_5500_p_din1 = grp_fu_1002_p1;

assign grp_fu_5504_p_ce = grp_fu_1007_ce;

assign grp_fu_5504_p_din0 = grp_fu_1007_p0;

assign grp_fu_5504_p_din1 = grp_fu_1007_p1;

assign grp_fu_990_p2 = grp_fu_5480_p_dout0;

assign grp_fu_994_p2 = grp_fu_5484_p_dout0;

assign icmp_ln19_fu_1197_p2 = ((indvars_iv17_reg_956 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_1214_p2 = ((indvars_iv14_reg_967 == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1434_p2 = ((indvars_iv_reg_979 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1470_p2 = ((trunc_ln34_fu_1460_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1464_p2 = ((tmp_fu_1450_p4 != 8'd255) ? 1'b1 : 1'b0);

assign indvars_iv17_cast_fu_1203_p1 = indvars_iv17_reg_956;

assign indvars_iv_cast_fu_1440_p1 = indvars_iv_reg_979;

assign or_ln34_fu_1476_p2 = (icmp_ln34_fu_1464_p2 | icmp_ln34_1_fu_1470_p2);

assign out_stream_V_TDATA = ((and_ln34_fu_1482_p2[0:0] == 1'b1) ? bitcast_ln34_fu_1446_p1 : 32'd0);

assign p_cast_fu_1186_p1 = empty_reg_945;

assign sext_ln29_fu_1316_p1 = $signed(empty_29_fu_1311_p2);

assign tmp_fu_1450_p4 = {{bitcast_ln34_fu_1446_p1[30:23]}};

assign trunc_ln34_fu_1460_p1 = bitcast_ln34_fu_1446_p1[22:0];

assign zext_ln22_1_fu_1264_p1 = indvars_iv14_reg_967;

assign zext_ln22_2_fu_1268_p1 = indvars_iv14_reg_967;

assign zext_ln22_3_fu_1234_p1 = indvars_iv14_reg_967;

assign zext_ln22_fu_1220_p1 = indvars_iv14_reg_967;

assign zext_ln29_1_fu_1278_p1 = empty_27_fu_1272_p2;

assign zext_ln29_2_fu_1297_p1 = empty_28_fu_1292_p2;

assign zext_ln29_3_fu_1320_p1 = $unsigned(sext_ln29_fu_1316_p1);

assign zext_ln29_4_fu_1339_p1 = empty_30_fu_1334_p2;

assign zext_ln29_5_fu_1364_p1 = empty_31_fu_1359_p2;

assign zext_ln29_6_fu_1383_p1 = empty_32_fu_1378_p2;

assign zext_ln29_fu_1250_p1 = empty_26_fu_1244_p2;

always @ (posedge ap_clk) begin
    zext_ln22_3_reg_1623[8] <= 1'b0;
    zext_ln22_1_reg_1684[10:8] <= 3'b000;
    zext_ln22_2_reg_1691[9:8] <= 2'b00;
end

endmodule //cnn_fc_layer1
