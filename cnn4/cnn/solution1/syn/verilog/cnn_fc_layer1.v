// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_fc_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fc1_out5_din,
        fc1_out5_full_n,
        fc1_out5_write,
        pool1_out4_dout,
        pool1_out4_empty_n,
        pool1_out4_read,
        grp_fu_326_p_din0,
        grp_fu_326_p_din1,
        grp_fu_326_p_opcode,
        grp_fu_326_p_dout0,
        grp_fu_326_p_ce,
        grp_fu_659_p_din0,
        grp_fu_659_p_din1,
        grp_fu_659_p_opcode,
        grp_fu_659_p_dout0,
        grp_fu_659_p_ce,
        grp_fu_334_p_din0,
        grp_fu_334_p_din1,
        grp_fu_334_p_dout0,
        grp_fu_334_p_ce,
        grp_fu_675_p_din0,
        grp_fu_675_p_din1,
        grp_fu_675_p_dout0,
        grp_fu_675_p_ce
);

parameter    ap_ST_fsm_state1 = 56'd1;
parameter    ap_ST_fsm_state2 = 56'd2;
parameter    ap_ST_fsm_state3 = 56'd4;
parameter    ap_ST_fsm_state4 = 56'd8;
parameter    ap_ST_fsm_state5 = 56'd16;
parameter    ap_ST_fsm_state6 = 56'd32;
parameter    ap_ST_fsm_state7 = 56'd64;
parameter    ap_ST_fsm_state8 = 56'd128;
parameter    ap_ST_fsm_state9 = 56'd256;
parameter    ap_ST_fsm_state10 = 56'd512;
parameter    ap_ST_fsm_state11 = 56'd1024;
parameter    ap_ST_fsm_state12 = 56'd2048;
parameter    ap_ST_fsm_state13 = 56'd4096;
parameter    ap_ST_fsm_state14 = 56'd8192;
parameter    ap_ST_fsm_state15 = 56'd16384;
parameter    ap_ST_fsm_state16 = 56'd32768;
parameter    ap_ST_fsm_state17 = 56'd65536;
parameter    ap_ST_fsm_state18 = 56'd131072;
parameter    ap_ST_fsm_state19 = 56'd262144;
parameter    ap_ST_fsm_state20 = 56'd524288;
parameter    ap_ST_fsm_state21 = 56'd1048576;
parameter    ap_ST_fsm_state22 = 56'd2097152;
parameter    ap_ST_fsm_state23 = 56'd4194304;
parameter    ap_ST_fsm_state24 = 56'd8388608;
parameter    ap_ST_fsm_state25 = 56'd16777216;
parameter    ap_ST_fsm_state26 = 56'd33554432;
parameter    ap_ST_fsm_state27 = 56'd67108864;
parameter    ap_ST_fsm_state28 = 56'd134217728;
parameter    ap_ST_fsm_state29 = 56'd268435456;
parameter    ap_ST_fsm_state30 = 56'd536870912;
parameter    ap_ST_fsm_state31 = 56'd1073741824;
parameter    ap_ST_fsm_state32 = 56'd2147483648;
parameter    ap_ST_fsm_state33 = 56'd4294967296;
parameter    ap_ST_fsm_state34 = 56'd8589934592;
parameter    ap_ST_fsm_state35 = 56'd17179869184;
parameter    ap_ST_fsm_state36 = 56'd34359738368;
parameter    ap_ST_fsm_state37 = 56'd68719476736;
parameter    ap_ST_fsm_state38 = 56'd137438953472;
parameter    ap_ST_fsm_state39 = 56'd274877906944;
parameter    ap_ST_fsm_state40 = 56'd549755813888;
parameter    ap_ST_fsm_state41 = 56'd1099511627776;
parameter    ap_ST_fsm_state42 = 56'd2199023255552;
parameter    ap_ST_fsm_state43 = 56'd4398046511104;
parameter    ap_ST_fsm_state44 = 56'd8796093022208;
parameter    ap_ST_fsm_state45 = 56'd17592186044416;
parameter    ap_ST_fsm_state46 = 56'd35184372088832;
parameter    ap_ST_fsm_state47 = 56'd70368744177664;
parameter    ap_ST_fsm_state48 = 56'd140737488355328;
parameter    ap_ST_fsm_state49 = 56'd281474976710656;
parameter    ap_ST_fsm_state50 = 56'd562949953421312;
parameter    ap_ST_fsm_state51 = 56'd1125899906842624;
parameter    ap_ST_fsm_state52 = 56'd2251799813685248;
parameter    ap_ST_fsm_state53 = 56'd4503599627370496;
parameter    ap_ST_fsm_state54 = 56'd9007199254740992;
parameter    ap_ST_fsm_state55 = 56'd18014398509481984;
parameter    ap_ST_fsm_state56 = 56'd36028797018963968;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] fc1_out5_din;
input   fc1_out5_full_n;
output   fc1_out5_write;
input  [31:0] pool1_out4_dout;
input   pool1_out4_empty_n;
output   pool1_out4_read;
output  [31:0] grp_fu_326_p_din0;
output  [31:0] grp_fu_326_p_din1;
output  [1:0] grp_fu_326_p_opcode;
input  [31:0] grp_fu_326_p_dout0;
output   grp_fu_326_p_ce;
output  [31:0] grp_fu_659_p_din0;
output  [31:0] grp_fu_659_p_din1;
output  [1:0] grp_fu_659_p_opcode;
input  [31:0] grp_fu_659_p_dout0;
output   grp_fu_659_p_ce;
output  [31:0] grp_fu_334_p_din0;
output  [31:0] grp_fu_334_p_din1;
input  [31:0] grp_fu_334_p_dout0;
output   grp_fu_334_p_ce;
output  [31:0] grp_fu_675_p_din0;
output  [31:0] grp_fu_675_p_din1;
input  [31:0] grp_fu_675_p_dout0;
output   grp_fu_675_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] fc1_out5_din;
reg fc1_out5_write;
reg pool1_out4_read;

(* fsm_encoding = "none" *) reg   [55:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] fc_layer1_weights_0_address0;
reg    fc_layer1_weights_0_ce0;
wire   [31:0] fc_layer1_weights_0_q0;
reg   [10:0] fc_layer1_weights_1_address0;
reg    fc_layer1_weights_1_ce0;
wire   [31:0] fc_layer1_weights_1_q0;
reg   [10:0] fc_layer1_weights_2_address0;
reg    fc_layer1_weights_2_ce0;
wire   [31:0] fc_layer1_weights_2_q0;
reg   [10:0] fc_layer1_weights_3_address0;
reg    fc_layer1_weights_3_ce0;
wire   [31:0] fc_layer1_weights_3_q0;
reg   [10:0] fc_layer1_weights_4_address0;
reg    fc_layer1_weights_4_ce0;
wire   [31:0] fc_layer1_weights_4_q0;
reg   [10:0] fc_layer1_weights_5_address0;
reg    fc_layer1_weights_5_ce0;
wire   [31:0] fc_layer1_weights_5_q0;
reg   [10:0] fc_layer1_weights_6_address0;
reg    fc_layer1_weights_6_ce0;
wire   [31:0] fc_layer1_weights_6_q0;
reg   [10:0] fc_layer1_weights_7_address0;
reg    fc_layer1_weights_7_ce0;
wire   [31:0] fc_layer1_weights_7_q0;
reg   [10:0] fc_layer1_weights_8_address0;
reg    fc_layer1_weights_8_ce0;
wire   [31:0] fc_layer1_weights_8_q0;
reg   [10:0] fc_layer1_weights_9_address0;
reg    fc_layer1_weights_9_ce0;
wire   [31:0] fc_layer1_weights_9_q0;
reg    fc1_out5_blk_n;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
reg    pool1_out4_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_983;
reg   [31:0] reg_988;
reg   [31:0] reg_993;
reg   [31:0] reg_998;
reg   [31:0] reg_1003;
reg   [31:0] reg_1008;
reg   [31:0] reg_1013;
reg   [31:0] reg_1018;
reg   [31:0] reg_1023;
reg   [31:0] reg_1028;
wire   [31:0] grp_fu_966_p2;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire   [31:0] grp_fu_972_p2;
reg   [31:0] reg_1043;
reg   [31:0] reg_1047;
reg   [31:0] reg_1052;
wire   [31:0] grp_fu_937_p2;
reg   [31:0] reg_1057;
wire    ap_CS_fsm_state46;
wire   [31:0] grp_fu_942_p2;
reg   [31:0] reg_1064;
reg   [31:0] reg_1071;
reg   [31:0] reg_1078;
reg   [31:0] reg_1085;
reg   [31:0] reg_1091;
reg   [31:0] reg_1098;
reg   [31:0] reg_1104;
reg   [31:0] reg_1110;
reg   [31:0] reg_1115;
wire   [7:0] add_ln213_fu_1120_p2;
reg   [7:0] add_ln213_reg_1850;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln213_fu_1126_p2;
wire   [8:0] zext_ln213_3_fu_1146_p1;
reg   [8:0] zext_ln213_3_reg_1908;
wire   [31:0] read_fu_1150_p1;
reg   [31:0] read_reg_1913;
wire   [10:0] zext_ln213_1_fu_1176_p1;
reg   [10:0] zext_ln213_1_reg_1969;
wire   [9:0] zext_ln213_2_fu_1180_p1;
reg   [9:0] zext_ln213_2_reg_1976;
reg   [31:0] fc_layer1_weights_4_load_1_reg_1981;
reg   [31:0] fc_layer1_weights_5_load_1_reg_1986;
reg   [31:0] fc_layer1_weights_6_load_1_reg_1991;
reg   [31:0] fc_layer1_weights_7_load_1_reg_1996;
reg   [31:0] fc_layer1_weights_8_load_1_reg_2001;
reg   [31:0] fc_layer1_weights_9_load_1_reg_2006;
reg   [31:0] pool1_out4_read_2_reg_2061;
reg   [31:0] fc_layer1_weights_0_load_2_reg_2066;
reg   [31:0] fc_layer1_weights_1_load_2_reg_2071;
reg   [31:0] fc_layer1_weights_4_load_2_reg_2076;
reg   [31:0] fc_layer1_weights_5_load_2_reg_2081;
reg   [31:0] fc_layer1_weights_6_load_2_reg_2086;
reg   [31:0] fc_layer1_weights_7_load_2_reg_2091;
reg   [31:0] fc_layer1_weights_8_load_2_reg_2096;
reg   [31:0] fc_layer1_weights_9_load_2_reg_2101;
reg   [31:0] pool1_out4_read_3_reg_2156;
reg   [31:0] fc_layer1_weights_0_load_3_reg_2161;
reg   [31:0] fc_layer1_weights_1_load_3_reg_2166;
reg   [31:0] fc_layer1_weights_2_load_3_reg_2171;
reg   [31:0] fc_layer1_weights_3_load_3_reg_2176;
reg   [31:0] fc_layer1_weights_6_load_3_reg_2181;
reg   [31:0] fc_layer1_weights_7_load_3_reg_2186;
reg   [31:0] fc_layer1_weights_8_load_3_reg_2191;
reg   [31:0] fc_layer1_weights_9_load_3_reg_2196;
reg   [31:0] pool1_out4_read_4_reg_2251;
reg   [31:0] fc_layer1_weights_0_load_4_reg_2256;
reg   [31:0] fc_layer1_weights_1_load_4_reg_2261;
reg   [31:0] fc_layer1_weights_2_load_4_reg_2266;
reg   [31:0] fc_layer1_weights_3_load_4_reg_2271;
reg   [31:0] fc_layer1_weights_4_load_4_reg_2276;
reg   [31:0] fc_layer1_weights_5_load_4_reg_2281;
reg   [31:0] fc_layer1_weights_8_load_4_reg_2286;
reg   [31:0] fc_layer1_weights_9_load_4_reg_2291;
wire   [31:0] read_266_fu_1265_p1;
reg   [31:0] read_266_reg_2346;
reg   [31:0] fc_layer1_weights_0_load_5_reg_2352;
reg   [31:0] fc_layer1_weights_1_load_5_reg_2357;
reg   [31:0] fc_layer1_weights_2_load_5_reg_2362;
reg   [31:0] fc_layer1_weights_3_load_5_reg_2367;
reg   [31:0] fc_layer1_weights_4_load_5_reg_2372;
reg   [31:0] fc_layer1_weights_5_load_5_reg_2377;
reg   [31:0] fc_layer1_weights_6_load_5_reg_2382;
reg   [31:0] fc_layer1_weights_7_load_5_reg_2387;
reg   [31:0] pool1_out4_read_6_reg_2442;
reg   [31:0] fc_layer1_weights_2_load_6_reg_2447;
reg   [31:0] fc_layer1_weights_3_load_6_reg_2452;
reg   [31:0] fc_layer1_weights_4_load_6_reg_2457;
reg   [31:0] fc_layer1_weights_5_load_6_reg_2462;
reg   [31:0] fc_layer1_weights_6_load_6_reg_2467;
reg   [31:0] fc_layer1_weights_7_load_6_reg_2472;
reg   [31:0] fc_layer1_weights_8_load_6_reg_2477;
reg   [31:0] fc_layer1_weights_9_load_6_reg_2482;
reg   [31:0] pool1_out4_read_7_reg_2537;
reg   [31:0] fc_layer1_weights_0_load_7_reg_2542;
reg   [31:0] fc_layer1_weights_1_load_7_reg_2547;
reg   [31:0] fc_layer1_weights_4_load_7_reg_2552;
reg   [31:0] fc_layer1_weights_5_load_7_reg_2557;
reg   [31:0] fc_layer1_weights_6_load_7_reg_2562;
reg   [31:0] fc_layer1_weights_7_load_7_reg_2567;
reg   [31:0] fc_layer1_weights_8_load_7_reg_2572;
reg   [31:0] fc_layer1_weights_9_load_7_reg_2577;
wire   [31:0] read_267_fu_1309_p1;
reg   [31:0] read_267_reg_2582;
wire   [31:0] read_268_fu_1314_p1;
reg   [31:0] read_268_reg_2588;
wire   [31:0] read_269_fu_1319_p1;
reg   [31:0] read_269_reg_2594;
wire   [31:0] read_270_fu_1324_p1;
reg   [31:0] read_270_reg_2600;
wire   [31:0] read_271_fu_1330_p1;
reg   [31:0] read_271_reg_2606;
wire   [31:0] read_272_fu_1335_p1;
reg   [31:0] read_272_reg_2612;
wire    ap_CS_fsm_state44;
reg   [7:0] j_reg_805;
reg   [31:0] output_9_reg_817;
reg   [31:0] output_8_reg_829;
reg   [31:0] output_7_reg_841;
reg   [31:0] output_6_reg_853;
reg   [31:0] output_5_reg_865;
reg   [31:0] output_4_reg_877;
reg   [31:0] output_3_reg_889;
reg   [31:0] output_2_reg_901;
reg   [31:0] output_1_reg_913;
reg   [31:0] output_reg_925;
wire   [63:0] zext_ln213_fu_1132_p1;
wire   [63:0] zext_ln220_fu_1162_p1;
wire   [63:0] zext_ln220_1_fu_1190_p1;
wire   [63:0] zext_ln220_2_fu_1209_p1;
wire   [63:0] zext_ln220_3_fu_1232_p1;
wire   [63:0] zext_ln220_4_fu_1251_p1;
wire   [63:0] zext_ln220_5_fu_1276_p1;
wire   [63:0] zext_ln220_6_fu_1295_p1;
wire   [31:0] select_ln174_fu_1382_p3;
wire   [31:0] select_ln174_1_fu_1433_p3;
wire   [31:0] select_ln174_2_fu_1484_p3;
wire   [31:0] select_ln174_3_fu_1535_p3;
wire   [31:0] select_ln174_4_fu_1586_p3;
wire   [31:0] select_ln174_5_fu_1637_p3;
wire   [31:0] select_ln174_6_fu_1688_p3;
wire   [31:0] select_ln174_7_fu_1739_p3;
wire   [31:0] select_ln174_8_fu_1790_p3;
wire   [31:0] select_ln174_9_fu_1841_p3;
reg   [31:0] grp_fu_937_p0;
reg   [31:0] grp_fu_937_p1;
wire    ap_CS_fsm_state45;
reg   [31:0] grp_fu_942_p0;
reg   [31:0] grp_fu_942_p1;
reg   [31:0] grp_fu_966_p0;
reg   [31:0] grp_fu_966_p1;
reg   [31:0] grp_fu_972_p0;
reg   [31:0] grp_fu_972_p1;
reg   [31:0] grp_fu_978_p0;
wire   [8:0] empty_85_fu_1156_p2;
wire   [9:0] empty_86_fu_1184_p2;
wire   [9:0] empty_87_fu_1204_p2;
wire   [8:0] empty_88_fu_1223_p2;
wire  signed [9:0] sext_ln220_fu_1228_p1;
wire   [10:0] empty_89_fu_1246_p2;
wire   [10:0] empty_90_fu_1271_p2;
wire   [10:0] empty_91_fu_1290_p2;
wire   [31:0] bitcast_ln34_fu_1340_p1;
wire   [7:0] tmp_fu_1344_p4;
wire   [22:0] trunc_ln34_fu_1354_p1;
wire   [0:0] icmp_ln34_1_fu_1364_p2;
wire   [0:0] icmp_ln34_fu_1358_p2;
wire   [0:0] or_ln34_fu_1370_p2;
wire   [0:0] grp_fu_978_p2;
wire   [0:0] and_ln34_fu_1376_p2;
wire   [31:0] bitcast_ln34_1_fu_1391_p1;
wire   [7:0] tmp_965_fu_1395_p4;
wire   [22:0] trunc_ln34_1_fu_1405_p1;
wire   [0:0] icmp_ln34_3_fu_1415_p2;
wire   [0:0] icmp_ln34_2_fu_1409_p2;
wire   [0:0] or_ln34_1_fu_1421_p2;
wire   [0:0] and_ln34_1_fu_1427_p2;
wire   [31:0] bitcast_ln34_2_fu_1442_p1;
wire   [7:0] tmp_967_fu_1446_p4;
wire   [22:0] trunc_ln34_2_fu_1456_p1;
wire   [0:0] icmp_ln34_5_fu_1466_p2;
wire   [0:0] icmp_ln34_4_fu_1460_p2;
wire   [0:0] or_ln34_2_fu_1472_p2;
wire   [0:0] and_ln34_2_fu_1478_p2;
wire   [31:0] bitcast_ln34_3_fu_1493_p1;
wire   [7:0] tmp_969_fu_1497_p4;
wire   [22:0] trunc_ln34_3_fu_1507_p1;
wire   [0:0] icmp_ln34_7_fu_1517_p2;
wire   [0:0] icmp_ln34_6_fu_1511_p2;
wire   [0:0] or_ln34_3_fu_1523_p2;
wire   [0:0] and_ln34_3_fu_1529_p2;
wire   [31:0] bitcast_ln34_4_fu_1544_p1;
wire   [7:0] tmp_971_fu_1548_p4;
wire   [22:0] trunc_ln34_4_fu_1558_p1;
wire   [0:0] icmp_ln34_9_fu_1568_p2;
wire   [0:0] icmp_ln34_8_fu_1562_p2;
wire   [0:0] or_ln34_4_fu_1574_p2;
wire   [0:0] and_ln34_4_fu_1580_p2;
wire   [31:0] bitcast_ln34_5_fu_1595_p1;
wire   [7:0] tmp_973_fu_1599_p4;
wire   [22:0] trunc_ln34_5_fu_1609_p1;
wire   [0:0] icmp_ln34_11_fu_1619_p2;
wire   [0:0] icmp_ln34_10_fu_1613_p2;
wire   [0:0] or_ln34_5_fu_1625_p2;
wire   [0:0] and_ln34_5_fu_1631_p2;
wire   [31:0] bitcast_ln34_6_fu_1646_p1;
wire   [7:0] tmp_975_fu_1650_p4;
wire   [22:0] trunc_ln34_6_fu_1660_p1;
wire   [0:0] icmp_ln34_13_fu_1670_p2;
wire   [0:0] icmp_ln34_12_fu_1664_p2;
wire   [0:0] or_ln34_6_fu_1676_p2;
wire   [0:0] and_ln34_6_fu_1682_p2;
wire   [31:0] bitcast_ln34_7_fu_1697_p1;
wire   [7:0] tmp_977_fu_1701_p4;
wire   [22:0] trunc_ln34_7_fu_1711_p1;
wire   [0:0] icmp_ln34_15_fu_1721_p2;
wire   [0:0] icmp_ln34_14_fu_1715_p2;
wire   [0:0] or_ln34_7_fu_1727_p2;
wire   [0:0] and_ln34_7_fu_1733_p2;
wire   [31:0] bitcast_ln34_8_fu_1748_p1;
wire   [7:0] tmp_979_fu_1752_p4;
wire   [22:0] trunc_ln34_8_fu_1762_p1;
wire   [0:0] icmp_ln34_17_fu_1772_p2;
wire   [0:0] icmp_ln34_16_fu_1766_p2;
wire   [0:0] or_ln34_8_fu_1778_p2;
wire   [0:0] and_ln34_8_fu_1784_p2;
wire   [31:0] bitcast_ln34_9_fu_1799_p1;
wire   [7:0] tmp_981_fu_1803_p4;
wire   [22:0] trunc_ln34_9_fu_1813_p1;
wire   [0:0] icmp_ln34_19_fu_1823_p2;
wire   [0:0] icmp_ln34_18_fu_1817_p2;
wire   [0:0] or_ln34_9_fu_1829_p2;
wire   [0:0] and_ln34_9_fu_1835_p2;
reg    grp_fu_937_ce;
reg    grp_fu_942_ce;
reg    grp_fu_966_ce;
reg    grp_fu_972_ce;
reg   [55:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 56'd1;
end

cnn_fc_layer1_fc_layer1_weights_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_0_address0),
    .ce0(fc_layer1_weights_0_ce0),
    .q0(fc_layer1_weights_0_q0)
);

cnn_fc_layer1_fc_layer1_weights_1 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_1_address0),
    .ce0(fc_layer1_weights_1_ce0),
    .q0(fc_layer1_weights_1_q0)
);

cnn_fc_layer1_fc_layer1_weights_2 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_2_address0),
    .ce0(fc_layer1_weights_2_ce0),
    .q0(fc_layer1_weights_2_q0)
);

cnn_fc_layer1_fc_layer1_weights_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_3_address0),
    .ce0(fc_layer1_weights_3_ce0),
    .q0(fc_layer1_weights_3_q0)
);

cnn_fc_layer1_fc_layer1_weights_4 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_4_address0),
    .ce0(fc_layer1_weights_4_ce0),
    .q0(fc_layer1_weights_4_q0)
);

cnn_fc_layer1_fc_layer1_weights_5 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_5_address0),
    .ce0(fc_layer1_weights_5_ce0),
    .q0(fc_layer1_weights_5_q0)
);

cnn_fc_layer1_fc_layer1_weights_6 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_6_address0),
    .ce0(fc_layer1_weights_6_ce0),
    .q0(fc_layer1_weights_6_q0)
);

cnn_fc_layer1_fc_layer1_weights_7 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_7_address0),
    .ce0(fc_layer1_weights_7_ce0),
    .q0(fc_layer1_weights_7_q0)
);

cnn_fc_layer1_fc_layer1_weights_8 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_8_address0),
    .ce0(fc_layer1_weights_8_ce0),
    .q0(fc_layer1_weights_8_q0)
);

cnn_fc_layer1_fc_layer1_weights_9 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
fc_layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_9_address0),
    .ce0(fc_layer1_weights_9_ce0),
    .q0(fc_layer1_weights_9_q0)
);

cnn_fcmp_32ns_32ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_1_no_dsp_1_U23(
    .din0(grp_fu_978_p0),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(grp_fu_978_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_reg_805 <= add_ln213_reg_1850;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_805 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_1_reg_913 <= reg_1064;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_1_reg_913 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_2_reg_901 <= reg_1071;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_2_reg_901 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_3_reg_889 <= reg_1078;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_3_reg_889 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_4_reg_877 <= reg_1085;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_4_reg_877 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_5_reg_865 <= reg_1091;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_5_reg_865 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_6_reg_853 <= reg_1098;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_6_reg_853 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_7_reg_841 <= reg_1104;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_7_reg_841 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_8_reg_829 <= grp_fu_326_p_dout0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_8_reg_829 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_9_reg_817 <= grp_fu_659_p_dout0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_9_reg_817 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        output_reg_925 <= reg_1057;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_reg_925 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln213_reg_1850 <= add_ln213_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_0_load_2_reg_2066 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_2_reg_2071 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_4_load_2_reg_2076 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_2_reg_2081 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_2_reg_2086 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_2_reg_2091 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_2_reg_2096 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_2_reg_2101 <= fc_layer1_weights_9_q0;
        pool1_out4_read_2_reg_2061 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_0_load_3_reg_2161 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_3_reg_2166 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_3_reg_2171 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_3_reg_2176 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_6_load_3_reg_2181 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_3_reg_2186 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_3_reg_2191 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_3_reg_2196 <= fc_layer1_weights_9_q0;
        pool1_out4_read_3_reg_2156 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_0_load_4_reg_2256 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_4_reg_2261 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_4_reg_2266 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_4_reg_2271 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_4_reg_2276 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_4_reg_2281 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_8_load_4_reg_2286 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_4_reg_2291 <= fc_layer1_weights_9_q0;
        pool1_out4_read_4_reg_2251 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_0_load_5_reg_2352 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_5_reg_2357 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_2_load_5_reg_2362 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_5_reg_2367 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_5_reg_2372 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_5_reg_2377 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_5_reg_2382 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_5_reg_2387 <= fc_layer1_weights_7_q0;
        read_266_reg_2346 <= read_266_fu_1265_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_0_load_7_reg_2542 <= fc_layer1_weights_0_q0;
        fc_layer1_weights_1_load_7_reg_2547 <= fc_layer1_weights_1_q0;
        fc_layer1_weights_4_load_7_reg_2552 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_7_reg_2557 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_7_reg_2562 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_7_reg_2567 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_7_reg_2572 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_7_reg_2577 <= fc_layer1_weights_9_q0;
        pool1_out4_read_7_reg_2537 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_2_load_6_reg_2447 <= fc_layer1_weights_2_q0;
        fc_layer1_weights_3_load_6_reg_2452 <= fc_layer1_weights_3_q0;
        fc_layer1_weights_4_load_6_reg_2457 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_6_reg_2462 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_6_reg_2467 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_6_reg_2472 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_6_reg_2477 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_6_reg_2482 <= fc_layer1_weights_9_q0;
        pool1_out4_read_6_reg_2442 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_4_load_1_reg_1981 <= fc_layer1_weights_4_q0;
        fc_layer1_weights_5_load_1_reg_1986 <= fc_layer1_weights_5_q0;
        fc_layer1_weights_6_load_1_reg_1991 <= fc_layer1_weights_6_q0;
        fc_layer1_weights_7_load_1_reg_1996 <= fc_layer1_weights_7_q0;
        fc_layer1_weights_8_load_1_reg_2001 <= fc_layer1_weights_8_q0;
        fc_layer1_weights_9_load_1_reg_2006 <= fc_layer1_weights_9_q0;
        zext_ln213_1_reg_1969[7 : 0] <= zext_ln213_1_fu_1176_p1[7 : 0];
        zext_ln213_2_reg_1976[7 : 0] <= zext_ln213_2_fu_1180_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        read_267_reg_2582 <= read_267_fu_1309_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        read_268_reg_2588 <= read_268_fu_1314_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        read_269_reg_2594 <= read_269_fu_1319_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        read_270_reg_2600 <= read_270_fu_1324_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        read_271_reg_2606 <= read_271_fu_1330_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        read_272_reg_2612 <= read_272_fu_1335_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        read_reg_1913 <= read_fu_1150_p1;
        zext_ln213_3_reg_1908[7 : 0] <= zext_ln213_3_fu_1146_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_1003 <= fc_layer1_weights_4_q0;
        reg_1008 <= fc_layer1_weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_1013 <= fc_layer1_weights_6_q0;
        reg_1018 <= fc_layer1_weights_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_1023 <= fc_layer1_weights_8_q0;
        reg_1028 <= fc_layer1_weights_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_1043 <= pool1_out4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_1047 <= fc_layer1_weights_2_q0;
        reg_1052 <= fc_layer1_weights_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_1057 <= grp_fu_326_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state50)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_1064 <= grp_fu_659_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state50)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_1071 <= grp_fu_326_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_1078 <= grp_fu_659_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1085 <= grp_fu_326_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1091 <= grp_fu_659_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1098 <= grp_fu_326_p_dout0;
        reg_1104 <= grp_fu_659_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        reg_1110 <= grp_fu_326_p_dout0;
        reg_1115 <= grp_fu_659_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_983 <= fc_layer1_weights_0_q0;
        reg_988 <= fc_layer1_weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_993 <= fc_layer1_weights_2_q0;
        reg_998 <= fc_layer1_weights_3_q0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47))) begin
        fc1_out5_blk_n = fc1_out5_full_n;
    end else begin
        fc1_out5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((fc1_out5_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state56)) begin
            fc1_out5_din = select_ln174_9_fu_1841_p3;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            fc1_out5_din = select_ln174_8_fu_1790_p3;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            fc1_out5_din = select_ln174_7_fu_1739_p3;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            fc1_out5_din = select_ln174_6_fu_1688_p3;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            fc1_out5_din = select_ln174_5_fu_1637_p3;
        end else if ((1'b1 == ap_CS_fsm_state51)) begin
            fc1_out5_din = select_ln174_4_fu_1586_p3;
        end else if ((1'b1 == ap_CS_fsm_state50)) begin
            fc1_out5_din = select_ln174_3_fu_1535_p3;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            fc1_out5_din = select_ln174_2_fu_1484_p3;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            fc1_out5_din = select_ln174_1_fu_1433_p3;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            fc1_out5_din = select_ln174_fu_1382_p3;
        end else begin
            fc1_out5_din = 'bx;
        end
    end else begin
        fc1_out5_din = 'bx;
    end
end

always @ (*) begin
    if ((((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state50)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47)))) begin
        fc1_out5_write = 1'b1;
    end else begin
        fc1_out5_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_0_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_0_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_0_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_0_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_0_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_0_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_0_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_0_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_0_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_1_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_1_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_1_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_1_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_1_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_1_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_1_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_1_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_1_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_2_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_2_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_2_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_2_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_2_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_2_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_2_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_2_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_2_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_3_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_3_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_3_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_3_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_3_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_3_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_3_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_3_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_3_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_4_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_4_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_4_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_4_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_4_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_4_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_4_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_4_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_4_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_5_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_5_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_5_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_5_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_5_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_5_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_5_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_5_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_5_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_6_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_6_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_6_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_6_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_6_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_6_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_6_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_6_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_6_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_7_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_7_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_7_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_7_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_7_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_7_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_7_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_7_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_7_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_8_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_8_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_8_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_8_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_8_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_8_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_8_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_8_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_8_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fc_layer1_weights_9_address0 = zext_ln220_6_fu_1295_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fc_layer1_weights_9_address0 = zext_ln220_5_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fc_layer1_weights_9_address0 = zext_ln220_4_fu_1251_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fc_layer1_weights_9_address0 = zext_ln220_3_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fc_layer1_weights_9_address0 = zext_ln220_2_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fc_layer1_weights_9_address0 = zext_ln220_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc_layer1_weights_9_address0 = zext_ln220_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fc_layer1_weights_9_address0 = zext_ln213_fu_1132_p1;
    end else begin
        fc_layer1_weights_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        fc_layer1_weights_9_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state50)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state49)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state48)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state47)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_937_ce = 1'b0;
    end else begin
        grp_fu_937_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_937_p0 = output_1_reg_913;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_937_p0 = reg_1110;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_937_p0 = reg_1098;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_937_p0 = reg_1085;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_937_p0 = reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_937_p0 = reg_1057;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_937_p0 = output_8_reg_829;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_937_p0 = output_6_reg_853;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_fu_937_p0 = output_4_reg_877;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_937_p0 = output_2_reg_901;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_937_p0 = output_reg_925;
    end else begin
        grp_fu_937_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_937_p1 = 32'd3168397374;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_937_p1 = 32'd3132588084;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_937_p1 = 32'd1044509203;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_937_p1 = 32'd3168504748;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_937_p1 = 32'd1020108420;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_937_p1 = 32'd1032979900;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_937_p1 = grp_fu_334_p_dout0;
    end else begin
        grp_fu_937_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state50)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state49)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state48)) | ((fc1_out5_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state47)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_942_ce = 1'b0;
    end else begin
        grp_fu_942_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_942_p0 = reg_1115;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_942_p0 = reg_1104;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_942_p0 = reg_1091;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_942_p0 = reg_1078;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_942_p0 = reg_1064;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_942_p0 = output_9_reg_817;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_942_p0 = output_7_reg_841;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_fu_942_p0 = output_5_reg_865;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_942_p0 = output_3_reg_889;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_942_p0 = output_1_reg_913;
    end else begin
        grp_fu_942_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_942_p1 = 32'd3167269945;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_942_p1 = 32'd3145271660;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_942_p1 = 32'd3174047941;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_942_p1 = 32'd1007263783;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_942_p1 = grp_fu_675_p_dout0;
    end else begin
        grp_fu_942_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_966_ce = 1'b0;
    end else begin
        grp_fu_966_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_7_reg_2572;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_7_reg_2562;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_7_reg_2552;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_load_7_reg_2542;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_6_reg_2477;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_6_reg_2467;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_6_reg_2457;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_966_p0 = fc_layer1_weights_2_load_6_reg_2447;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_5_reg_2382;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_5_reg_2372;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_966_p0 = fc_layer1_weights_2_load_5_reg_2362;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_load_5_reg_2352;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_4_reg_2286;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_4_reg_2276;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_966_p0 = fc_layer1_weights_2_load_4_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_load_4_reg_2256;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_3_reg_2191;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_3_reg_2181;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_966_p0 = fc_layer1_weights_2_load_3_reg_2171;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_load_3_reg_2161;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_2_reg_2096;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_2_reg_2086;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_2_reg_2076;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_load_2_reg_2066;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_966_p0 = fc_layer1_weights_8_load_1_reg_2001;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_966_p0 = fc_layer1_weights_6_load_1_reg_1991;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_966_p0 = fc_layer1_weights_4_load_1_reg_1981;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_966_p0 = reg_1047;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_966_p0 = reg_983;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_966_p0 = reg_1023;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_966_p0 = reg_1013;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_966_p0 = reg_1003;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_966_p0 = reg_993;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_966_p0 = fc_layer1_weights_0_q0;
    end else begin
        grp_fu_966_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_fu_966_p1 = read_272_reg_2612;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_966_p1 = read_272_fu_1335_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_966_p1 = read_271_reg_2606;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_966_p1 = read_271_fu_1330_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_966_p1 = read_270_reg_2600;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_966_p1 = read_270_fu_1324_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_966_p1 = read_269_reg_2594;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_966_p1 = read_269_fu_1319_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_966_p1 = read_268_reg_2588;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_966_p1 = read_268_fu_1314_p1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_966_p1 = read_267_reg_2582;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_966_p1 = read_267_fu_1309_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_966_p1 = read_266_reg_2346;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_966_p1 = read_266_fu_1265_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_966_p1 = read_reg_1913;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_966_p1 = read_fu_1150_p1;
    end else begin
        grp_fu_966_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_972_ce = 1'b0;
    end else begin
        grp_fu_972_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_7_reg_2577;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_7_reg_2567;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_7_reg_2557;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_load_7_reg_2547;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_6_reg_2482;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_6_reg_2472;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_6_reg_2462;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_972_p0 = fc_layer1_weights_3_load_6_reg_2452;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_5_reg_2387;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_5_reg_2377;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_972_p0 = fc_layer1_weights_3_load_5_reg_2367;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_load_5_reg_2357;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_4_reg_2291;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_4_reg_2281;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_972_p0 = fc_layer1_weights_3_load_4_reg_2271;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_load_4_reg_2261;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_3_reg_2196;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_3_reg_2186;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_972_p0 = fc_layer1_weights_3_load_3_reg_2176;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_load_3_reg_2166;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_2_reg_2101;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_2_reg_2091;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_2_reg_2081;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_load_2_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_972_p0 = fc_layer1_weights_9_load_1_reg_2006;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_972_p0 = fc_layer1_weights_7_load_1_reg_1996;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_972_p0 = fc_layer1_weights_5_load_1_reg_1986;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_972_p0 = reg_1052;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_972_p0 = reg_988;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_972_p0 = reg_1028;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_972_p0 = reg_1018;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_972_p0 = reg_1008;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_972_p0 = reg_998;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_972_p0 = fc_layer1_weights_1_q0;
    end else begin
        grp_fu_972_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_fu_972_p1 = read_272_reg_2612;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_972_p1 = read_272_fu_1335_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_972_p1 = read_271_reg_2606;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_972_p1 = read_271_fu_1330_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_972_p1 = read_270_reg_2600;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_972_p1 = read_270_fu_1324_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_972_p1 = read_269_reg_2594;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_972_p1 = read_269_fu_1319_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_972_p1 = read_268_reg_2588;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_972_p1 = read_268_fu_1314_p1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_972_p1 = read_267_reg_2582;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_972_p1 = read_267_fu_1309_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_972_p1 = read_266_reg_2346;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_972_p1 = read_266_fu_1265_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_972_p1 = read_reg_1913;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_972_p1 = read_fu_1150_p1;
    end else begin
        grp_fu_972_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_978_p0 = reg_1091;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_978_p0 = reg_1071;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_978_p0 = reg_1078;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_978_p0 = reg_1064;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_978_p0 = reg_1057;
    end else begin
        grp_fu_978_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pool1_out4_blk_n = pool1_out4_empty_n;
    end else begin
        pool1_out4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        pool1_out4_read = 1'b1;
    end else begin
        pool1_out4_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln213_fu_1126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((pool1_out4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((fc1_out5_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln213_fu_1120_p2 = (j_reg_805 + 8'd1);

assign and_ln34_1_fu_1427_p2 = (or_ln34_1_fu_1421_p2 & grp_fu_978_p2);

assign and_ln34_2_fu_1478_p2 = (or_ln34_2_fu_1472_p2 & grp_fu_978_p2);

assign and_ln34_3_fu_1529_p2 = (or_ln34_3_fu_1523_p2 & grp_fu_978_p2);

assign and_ln34_4_fu_1580_p2 = (or_ln34_4_fu_1574_p2 & grp_fu_978_p2);

assign and_ln34_5_fu_1631_p2 = (or_ln34_5_fu_1625_p2 & grp_fu_978_p2);

assign and_ln34_6_fu_1682_p2 = (or_ln34_6_fu_1676_p2 & grp_fu_978_p2);

assign and_ln34_7_fu_1733_p2 = (or_ln34_7_fu_1727_p2 & grp_fu_978_p2);

assign and_ln34_8_fu_1784_p2 = (or_ln34_8_fu_1778_p2 & grp_fu_978_p2);

assign and_ln34_9_fu_1835_p2 = (or_ln34_9_fu_1829_p2 & grp_fu_978_p2);

assign and_ln34_fu_1376_p2 = (or_ln34_fu_1370_p2 & grp_fu_978_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln34_1_fu_1391_p1 = reg_1057;

assign bitcast_ln34_2_fu_1442_p1 = reg_1057;

assign bitcast_ln34_3_fu_1493_p1 = reg_1064;

assign bitcast_ln34_4_fu_1544_p1 = reg_1057;

assign bitcast_ln34_5_fu_1595_p1 = reg_1078;

assign bitcast_ln34_6_fu_1646_p1 = reg_1071;

assign bitcast_ln34_7_fu_1697_p1 = reg_1064;

assign bitcast_ln34_8_fu_1748_p1 = reg_1057;

assign bitcast_ln34_9_fu_1799_p1 = reg_1091;

assign bitcast_ln34_fu_1340_p1 = reg_1057;

assign empty_85_fu_1156_p2 = (zext_ln213_3_fu_1146_p1 + 9'd196);

assign empty_86_fu_1184_p2 = (zext_ln213_2_fu_1180_p1 + 10'd392);

assign empty_87_fu_1204_p2 = ($signed(zext_ln213_2_reg_1976) + $signed(10'd588));

assign empty_88_fu_1223_p2 = ($signed(zext_ln213_3_reg_1908) + $signed(9'd272));

assign empty_89_fu_1246_p2 = (zext_ln213_1_reg_1969 + 11'd980);

assign empty_90_fu_1271_p2 = ($signed(zext_ln213_1_reg_1969) + $signed(11'd1176));

assign empty_91_fu_1290_p2 = ($signed(zext_ln213_1_reg_1969) + $signed(11'd1372));

assign grp_fu_326_p_ce = grp_fu_937_ce;

assign grp_fu_326_p_din0 = grp_fu_937_p0;

assign grp_fu_326_p_din1 = grp_fu_937_p1;

assign grp_fu_326_p_opcode = 2'd0;

assign grp_fu_334_p_ce = grp_fu_966_ce;

assign grp_fu_334_p_din0 = grp_fu_966_p0;

assign grp_fu_334_p_din1 = grp_fu_966_p1;

assign grp_fu_659_p_ce = grp_fu_942_ce;

assign grp_fu_659_p_din0 = grp_fu_942_p0;

assign grp_fu_659_p_din1 = grp_fu_942_p1;

assign grp_fu_659_p_opcode = 2'd0;

assign grp_fu_675_p_ce = grp_fu_972_ce;

assign grp_fu_675_p_din0 = grp_fu_972_p0;

assign grp_fu_675_p_din1 = grp_fu_972_p1;

assign grp_fu_937_p2 = grp_fu_326_p_dout0;

assign grp_fu_942_p2 = grp_fu_659_p_dout0;

assign grp_fu_966_p2 = grp_fu_334_p_dout0;

assign grp_fu_972_p2 = grp_fu_675_p_dout0;

assign icmp_ln213_fu_1126_p2 = ((j_reg_805 == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln34_10_fu_1613_p2 = ((tmp_973_fu_1599_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_11_fu_1619_p2 = ((trunc_ln34_5_fu_1609_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_12_fu_1664_p2 = ((tmp_975_fu_1650_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_13_fu_1670_p2 = ((trunc_ln34_6_fu_1660_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_14_fu_1715_p2 = ((tmp_977_fu_1701_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_15_fu_1721_p2 = ((trunc_ln34_7_fu_1711_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_16_fu_1766_p2 = ((tmp_979_fu_1752_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_17_fu_1772_p2 = ((trunc_ln34_8_fu_1762_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_18_fu_1817_p2 = ((tmp_981_fu_1803_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_19_fu_1823_p2 = ((trunc_ln34_9_fu_1813_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1364_p2 = ((trunc_ln34_fu_1354_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_1409_p2 = ((tmp_965_fu_1395_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_3_fu_1415_p2 = ((trunc_ln34_1_fu_1405_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_4_fu_1460_p2 = ((tmp_967_fu_1446_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_5_fu_1466_p2 = ((trunc_ln34_2_fu_1456_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_6_fu_1511_p2 = ((tmp_969_fu_1497_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_7_fu_1517_p2 = ((trunc_ln34_3_fu_1507_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_8_fu_1562_p2 = ((tmp_971_fu_1548_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_9_fu_1568_p2 = ((trunc_ln34_4_fu_1558_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1358_p2 = ((tmp_fu_1344_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln34_1_fu_1421_p2 = (icmp_ln34_3_fu_1415_p2 | icmp_ln34_2_fu_1409_p2);

assign or_ln34_2_fu_1472_p2 = (icmp_ln34_5_fu_1466_p2 | icmp_ln34_4_fu_1460_p2);

assign or_ln34_3_fu_1523_p2 = (icmp_ln34_7_fu_1517_p2 | icmp_ln34_6_fu_1511_p2);

assign or_ln34_4_fu_1574_p2 = (icmp_ln34_9_fu_1568_p2 | icmp_ln34_8_fu_1562_p2);

assign or_ln34_5_fu_1625_p2 = (icmp_ln34_11_fu_1619_p2 | icmp_ln34_10_fu_1613_p2);

assign or_ln34_6_fu_1676_p2 = (icmp_ln34_13_fu_1670_p2 | icmp_ln34_12_fu_1664_p2);

assign or_ln34_7_fu_1727_p2 = (icmp_ln34_15_fu_1721_p2 | icmp_ln34_14_fu_1715_p2);

assign or_ln34_8_fu_1778_p2 = (icmp_ln34_17_fu_1772_p2 | icmp_ln34_16_fu_1766_p2);

assign or_ln34_9_fu_1829_p2 = (icmp_ln34_19_fu_1823_p2 | icmp_ln34_18_fu_1817_p2);

assign or_ln34_fu_1370_p2 = (icmp_ln34_fu_1358_p2 | icmp_ln34_1_fu_1364_p2);

assign read_266_fu_1265_p1 = reg_1043;

assign read_267_fu_1309_p1 = pool1_out4_read_2_reg_2061;

assign read_268_fu_1314_p1 = pool1_out4_read_3_reg_2156;

assign read_269_fu_1319_p1 = pool1_out4_read_4_reg_2251;

assign read_270_fu_1324_p1 = reg_1043;

assign read_271_fu_1330_p1 = pool1_out4_read_6_reg_2442;

assign read_272_fu_1335_p1 = pool1_out4_read_7_reg_2537;

assign read_fu_1150_p1 = pool1_out4_dout;

assign select_ln174_1_fu_1433_p3 = ((and_ln34_1_fu_1427_p2[0:0] == 1'b1) ? bitcast_ln34_1_fu_1391_p1 : 32'd0);

assign select_ln174_2_fu_1484_p3 = ((and_ln34_2_fu_1478_p2[0:0] == 1'b1) ? bitcast_ln34_2_fu_1442_p1 : 32'd0);

assign select_ln174_3_fu_1535_p3 = ((and_ln34_3_fu_1529_p2[0:0] == 1'b1) ? bitcast_ln34_3_fu_1493_p1 : 32'd0);

assign select_ln174_4_fu_1586_p3 = ((and_ln34_4_fu_1580_p2[0:0] == 1'b1) ? bitcast_ln34_4_fu_1544_p1 : 32'd0);

assign select_ln174_5_fu_1637_p3 = ((and_ln34_5_fu_1631_p2[0:0] == 1'b1) ? bitcast_ln34_5_fu_1595_p1 : 32'd0);

assign select_ln174_6_fu_1688_p3 = ((and_ln34_6_fu_1682_p2[0:0] == 1'b1) ? bitcast_ln34_6_fu_1646_p1 : 32'd0);

assign select_ln174_7_fu_1739_p3 = ((and_ln34_7_fu_1733_p2[0:0] == 1'b1) ? bitcast_ln34_7_fu_1697_p1 : 32'd0);

assign select_ln174_8_fu_1790_p3 = ((and_ln34_8_fu_1784_p2[0:0] == 1'b1) ? bitcast_ln34_8_fu_1748_p1 : 32'd0);

assign select_ln174_9_fu_1841_p3 = ((and_ln34_9_fu_1835_p2[0:0] == 1'b1) ? bitcast_ln34_9_fu_1799_p1 : 32'd0);

assign select_ln174_fu_1382_p3 = ((and_ln34_fu_1376_p2[0:0] == 1'b1) ? bitcast_ln34_fu_1340_p1 : 32'd0);

assign sext_ln220_fu_1228_p1 = $signed(empty_88_fu_1223_p2);

assign tmp_965_fu_1395_p4 = {{bitcast_ln34_1_fu_1391_p1[30:23]}};

assign tmp_967_fu_1446_p4 = {{bitcast_ln34_2_fu_1442_p1[30:23]}};

assign tmp_969_fu_1497_p4 = {{bitcast_ln34_3_fu_1493_p1[30:23]}};

assign tmp_971_fu_1548_p4 = {{bitcast_ln34_4_fu_1544_p1[30:23]}};

assign tmp_973_fu_1599_p4 = {{bitcast_ln34_5_fu_1595_p1[30:23]}};

assign tmp_975_fu_1650_p4 = {{bitcast_ln34_6_fu_1646_p1[30:23]}};

assign tmp_977_fu_1701_p4 = {{bitcast_ln34_7_fu_1697_p1[30:23]}};

assign tmp_979_fu_1752_p4 = {{bitcast_ln34_8_fu_1748_p1[30:23]}};

assign tmp_981_fu_1803_p4 = {{bitcast_ln34_9_fu_1799_p1[30:23]}};

assign tmp_fu_1344_p4 = {{bitcast_ln34_fu_1340_p1[30:23]}};

assign trunc_ln34_1_fu_1405_p1 = bitcast_ln34_1_fu_1391_p1[22:0];

assign trunc_ln34_2_fu_1456_p1 = bitcast_ln34_2_fu_1442_p1[22:0];

assign trunc_ln34_3_fu_1507_p1 = bitcast_ln34_3_fu_1493_p1[22:0];

assign trunc_ln34_4_fu_1558_p1 = bitcast_ln34_4_fu_1544_p1[22:0];

assign trunc_ln34_5_fu_1609_p1 = bitcast_ln34_5_fu_1595_p1[22:0];

assign trunc_ln34_6_fu_1660_p1 = bitcast_ln34_6_fu_1646_p1[22:0];

assign trunc_ln34_7_fu_1711_p1 = bitcast_ln34_7_fu_1697_p1[22:0];

assign trunc_ln34_8_fu_1762_p1 = bitcast_ln34_8_fu_1748_p1[22:0];

assign trunc_ln34_9_fu_1813_p1 = bitcast_ln34_9_fu_1799_p1[22:0];

assign trunc_ln34_fu_1354_p1 = bitcast_ln34_fu_1340_p1[22:0];

assign zext_ln213_1_fu_1176_p1 = j_reg_805;

assign zext_ln213_2_fu_1180_p1 = j_reg_805;

assign zext_ln213_3_fu_1146_p1 = j_reg_805;

assign zext_ln213_fu_1132_p1 = j_reg_805;

assign zext_ln220_1_fu_1190_p1 = empty_86_fu_1184_p2;

assign zext_ln220_2_fu_1209_p1 = empty_87_fu_1204_p2;

assign zext_ln220_3_fu_1232_p1 = $unsigned(sext_ln220_fu_1228_p1);

assign zext_ln220_4_fu_1251_p1 = empty_89_fu_1246_p2;

assign zext_ln220_5_fu_1276_p1 = empty_90_fu_1271_p2;

assign zext_ln220_6_fu_1295_p1 = empty_91_fu_1290_p2;

assign zext_ln220_fu_1162_p1 = empty_85_fu_1156_p2;

always @ (posedge ap_clk) begin
    zext_ln213_3_reg_1908[8] <= 1'b0;
    zext_ln213_1_reg_1969[10:8] <= 3'b000;
    zext_ln213_2_reg_1976[9:8] <= 2'b00;
end

endmodule //cnn_fc_layer1
