// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="test_array_test_array,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.272200,HLS_SYN_LAT=619,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2072,HLS_SYN_LUT=2183,HLS_VERSION=2020_2}" *)

module test_array (
        ap_clk,
        ap_rst_n,
        in_V_TDATA,
        in_V_TVALID,
        in_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY,
        test_val2,
        test_val2_ap_vld,
        test_bias,
        test_bias_ap_vld
);

parameter    ap_ST_fsm_state1 = 66'd1;
parameter    ap_ST_fsm_state2 = 66'd2;
parameter    ap_ST_fsm_pp0_stage0 = 66'd4;
parameter    ap_ST_fsm_pp0_stage1 = 66'd8;
parameter    ap_ST_fsm_pp0_stage2 = 66'd16;
parameter    ap_ST_fsm_pp0_stage3 = 66'd32;
parameter    ap_ST_fsm_pp0_stage4 = 66'd64;
parameter    ap_ST_fsm_pp0_stage5 = 66'd128;
parameter    ap_ST_fsm_pp0_stage6 = 66'd256;
parameter    ap_ST_fsm_pp0_stage7 = 66'd512;
parameter    ap_ST_fsm_pp0_stage8 = 66'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 66'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 66'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 66'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 66'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 66'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 66'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 66'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 66'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 66'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 66'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 66'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 66'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 66'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 66'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 66'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 66'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 66'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 66'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 66'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 66'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 66'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 66'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 66'd8589934592;
parameter    ap_ST_fsm_pp0_stage32 = 66'd17179869184;
parameter    ap_ST_fsm_pp0_stage33 = 66'd34359738368;
parameter    ap_ST_fsm_pp0_stage34 = 66'd68719476736;
parameter    ap_ST_fsm_pp0_stage35 = 66'd137438953472;
parameter    ap_ST_fsm_pp0_stage36 = 66'd274877906944;
parameter    ap_ST_fsm_pp0_stage37 = 66'd549755813888;
parameter    ap_ST_fsm_pp0_stage38 = 66'd1099511627776;
parameter    ap_ST_fsm_pp0_stage39 = 66'd2199023255552;
parameter    ap_ST_fsm_pp0_stage40 = 66'd4398046511104;
parameter    ap_ST_fsm_pp0_stage41 = 66'd8796093022208;
parameter    ap_ST_fsm_pp0_stage42 = 66'd17592186044416;
parameter    ap_ST_fsm_pp0_stage43 = 66'd35184372088832;
parameter    ap_ST_fsm_pp0_stage44 = 66'd70368744177664;
parameter    ap_ST_fsm_pp0_stage45 = 66'd140737488355328;
parameter    ap_ST_fsm_pp0_stage46 = 66'd281474976710656;
parameter    ap_ST_fsm_pp0_stage47 = 66'd562949953421312;
parameter    ap_ST_fsm_pp0_stage48 = 66'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage49 = 66'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage50 = 66'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage51 = 66'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage52 = 66'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage53 = 66'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage54 = 66'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage55 = 66'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage56 = 66'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage57 = 66'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage58 = 66'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage59 = 66'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage60 = 66'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage61 = 66'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage62 = 66'd18446744073709551616;
parameter    ap_ST_fsm_state79 = 66'd36893488147419103232;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_V_TDATA;
input   in_V_TVALID;
output   in_V_TREADY;
output  [31:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;
output  [31:0] test_val2;
output   test_val2_ap_vld;
output  [31:0] test_bias;
output   test_bias_ap_vld;

reg test_val2_ap_vld;
reg test_bias_ap_vld;

 reg    ap_rst_n_inv;
wire   [2:0] bias_address0;
reg    bias_ce0;
wire   [31:0] bias_q0;
wire   [2:0] weight_0_0_0_address0;
reg    weight_0_0_0_ce0;
wire   [31:0] weight_0_0_0_q0;
reg   [31:0] sum;
wire   [2:0] weight_0_0_1_address0;
reg    weight_0_0_1_ce0;
wire   [31:0] weight_0_0_1_q0;
wire   [2:0] weight_0_0_2_address0;
reg    weight_0_0_2_ce0;
wire   [31:0] weight_0_0_2_q0;
wire   [2:0] weight_0_0_3_address0;
reg    weight_0_0_3_ce0;
wire   [31:0] weight_0_0_3_q0;
wire   [2:0] weight_0_1_0_address0;
reg    weight_0_1_0_ce0;
wire   [31:0] weight_0_1_0_q0;
wire   [2:0] weight_0_1_1_address0;
reg    weight_0_1_1_ce0;
wire   [31:0] weight_0_1_1_q0;
wire   [2:0] weight_0_1_2_address0;
reg    weight_0_1_2_ce0;
wire   [31:0] weight_0_1_2_q0;
wire   [2:0] weight_0_1_3_address0;
reg    weight_0_1_3_ce0;
wire   [31:0] weight_0_1_3_q0;
wire   [2:0] weight_0_2_0_address0;
reg    weight_0_2_0_ce0;
wire   [31:0] weight_0_2_0_q0;
wire   [2:0] weight_0_2_1_address0;
reg    weight_0_2_1_ce0;
wire   [31:0] weight_0_2_1_q0;
wire   [2:0] weight_0_2_2_address0;
reg    weight_0_2_2_ce0;
wire   [31:0] weight_0_2_2_q0;
wire   [2:0] weight_0_2_3_address0;
reg    weight_0_2_3_ce0;
wire   [31:0] weight_0_2_3_q0;
wire   [2:0] weight_0_3_0_address0;
reg    weight_0_3_0_ce0;
wire   [31:0] weight_0_3_0_q0;
wire   [2:0] weight_0_3_1_address0;
reg    weight_0_3_1_ce0;
wire   [31:0] weight_0_3_1_q0;
wire   [2:0] weight_0_3_2_address0;
reg    weight_0_3_2_ce0;
wire   [31:0] weight_0_3_2_q0;
wire   [2:0] weight_0_3_3_address0;
reg    weight_0_3_3_ce0;
wire   [31:0] weight_0_3_3_q0;
reg    in_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [65:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln90_fu_443_p2;
wire   [0:0] tmp_nbreadreq_fu_118_p3;
reg    out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage15;
reg   [0:0] icmp_ln97_reg_1336;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage36;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_pp0_stage39;
wire    ap_CS_fsm_pp0_stage40;
wire    ap_block_pp0_stage40;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_pp0_stage43;
wire    ap_CS_fsm_pp0_stage44;
wire    ap_block_pp0_stage44;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_pp0_stage47;
wire    ap_CS_fsm_pp0_stage48;
wire    ap_block_pp0_stage48;
wire    ap_CS_fsm_pp0_stage51;
wire    ap_block_pp0_stage51;
wire    ap_CS_fsm_pp0_stage52;
wire    ap_block_pp0_stage52;
wire    ap_CS_fsm_pp0_stage55;
wire    ap_block_pp0_stage55;
wire    ap_CS_fsm_pp0_stage56;
wire    ap_block_pp0_stage56;
wire    ap_CS_fsm_pp0_stage59;
wire    ap_block_pp0_stage59;
wire    ap_CS_fsm_pp0_stage60;
wire    ap_block_pp0_stage60;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln97_reg_1336_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [3:0] indvars_iv16_reg_385;
wire   [31:0] grp_fu_400_p2;
reg   [31:0] reg_410;
wire    ap_block_state7_pp0_stage4_iter0;
reg    ap_block_state70_pp0_stage4_iter1;
reg    ap_block_state70_io;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state11_pp0_stage8_iter0;
reg    ap_block_state74_pp0_stage8_iter1;
reg    ap_block_state74_io;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] reg_415;
wire    ap_block_state8_pp0_stage5_iter0;
reg    ap_block_state71_pp0_stage5_iter1;
reg    ap_block_state71_io;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state15_pp0_stage12_iter0;
reg    ap_block_state78_pp0_stage12_iter1;
reg    ap_block_state78_io;
reg    ap_block_pp0_stage12_11001;
reg   [31:0] reg_420;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_state72_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg    ap_block_state19_pp0_stage16_iter0;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage16_11001;
wire   [31:0] grp_fu_396_p2;
reg   [31:0] reg_425;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state24_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
reg    ap_block_state27_pp0_stage24_iter0;
reg    ap_block_state27_io;
reg    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state32_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
reg    ap_block_state35_pp0_stage32_iter0;
reg    ap_block_state35_io;
reg    ap_block_pp0_stage32_11001;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_state40_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_11001;
reg    ap_block_state43_pp0_stage40_iter0;
reg    ap_block_state43_io;
reg    ap_block_pp0_stage40_11001;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_state48_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_11001;
reg    ap_block_state51_pp0_stage48_iter0;
reg    ap_block_state51_io;
reg    ap_block_pp0_stage48_11001;
wire    ap_CS_fsm_pp0_stage53;
wire    ap_block_state56_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_11001;
reg    ap_block_state59_pp0_stage56_iter0;
reg    ap_block_state59_io;
reg    ap_block_pp0_stage56_11001;
wire    ap_CS_fsm_pp0_stage61;
wire    ap_block_state64_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_11001;
wire    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_state67_pp0_stage1_iter1;
reg    ap_block_state67_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_431;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state20_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg    ap_block_state23_pp0_stage20_iter0;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state28_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
reg    ap_block_state31_pp0_stage28_iter0;
reg    ap_block_state31_io;
reg    ap_block_pp0_stage28_11001;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state36_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_11001;
reg    ap_block_state39_pp0_stage36_iter0;
reg    ap_block_state39_io;
reg    ap_block_pp0_stage36_11001;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_state44_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_11001;
reg    ap_block_state47_pp0_stage44_iter0;
reg    ap_block_state47_io;
reg    ap_block_pp0_stage44_11001;
wire    ap_CS_fsm_pp0_stage49;
wire    ap_block_state52_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_11001;
reg    ap_block_state55_pp0_stage52_iter0;
reg    ap_block_state55_io;
reg    ap_block_pp0_stage52_11001;
wire    ap_CS_fsm_pp0_stage57;
wire    ap_block_state60_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_11001;
reg    ap_block_state63_pp0_stage60_iter0;
reg    ap_block_state63_io;
reg    ap_block_pp0_stage60_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state68_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state12_pp0_stage9_iter0;
reg    ap_block_state75_pp0_stage9_iter1;
reg    ap_block_state75_io;
reg    ap_block_pp0_stage9_11001;
wire   [6:0] add_ln90_fu_437_p2;
reg    ap_predicate_op99_read_state2;
reg    ap_block_state2;
wire   [3:0] add_ln97_fu_449_p2;
reg   [3:0] add_ln97_reg_1331;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state66_pp0_stage0_iter1;
reg    ap_block_state66_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln97_fu_455_p2;
reg   [31:0] bias_load_reg_1425;
reg   [31:0] bias_load_reg_1425_pp0_iter1_reg;
reg   [31:0] weight_0_0_0_load_reg_1430;
reg   [31:0] weight_0_0_1_load_reg_1435;
reg   [31:0] weight_0_0_2_load_reg_1440;
reg   [31:0] weight_0_0_3_load_reg_1445;
reg   [31:0] weight_0_1_0_load_reg_1450;
reg   [31:0] weight_0_1_1_load_reg_1455;
reg   [31:0] weight_0_1_2_load_reg_1460;
reg   [31:0] weight_0_1_3_load_reg_1465;
reg   [31:0] weight_0_2_0_load_reg_1470;
reg   [31:0] weight_0_2_1_load_reg_1475;
reg   [31:0] weight_0_2_2_load_reg_1480;
reg   [31:0] weight_0_2_3_load_reg_1485;
reg   [31:0] weight_0_3_0_load_reg_1490;
reg   [31:0] weight_0_3_1_load_reg_1495;
reg   [31:0] weight_0_3_2_load_reg_1500;
reg   [31:0] weight_0_3_3_load_reg_1505;
reg   [31:0] mul_0_3_reg_1515;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_state73_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] mul_1_1_reg_1520;
reg   [31:0] mul_1_2_reg_1525;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_state76_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] mul_1_3_reg_1530;
wire    ap_block_state14_pp0_stage11_iter0;
reg    ap_block_state77_pp0_stage11_iter1;
reg    ap_block_state77_io;
reg    ap_block_pp0_stage11_11001;
reg   [31:0] mul_2_1_reg_1535;
reg   [31:0] mul_2_2_reg_1540;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [31:0] select_ln174_fu_539_p3;
reg    ap_block_state18_pp0_stage15_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage15_11001;
reg   [31:0] mul_2_3_reg_1550;
reg   [31:0] mul_3_1_reg_1555;
reg   [31:0] mul_3_2_reg_1560;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state21_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire   [31:0] select_ln174_1_fu_590_p3;
reg    ap_block_state22_pp0_stage19_iter0;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage19_11001;
reg   [31:0] mul_3_3_reg_1570;
wire   [31:0] select_ln174_2_fu_641_p3;
reg    ap_block_state26_pp0_stage23_iter0;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage23_11001;
wire   [31:0] select_ln174_3_fu_692_p3;
reg    ap_block_state30_pp0_stage27_iter0;
reg    ap_block_state30_io;
reg    ap_block_pp0_stage27_11001;
wire   [31:0] select_ln174_4_fu_743_p3;
reg    ap_block_state34_pp0_stage31_iter0;
reg    ap_block_state34_io;
reg    ap_block_pp0_stage31_11001;
wire   [31:0] select_ln174_5_fu_794_p3;
reg    ap_block_state38_pp0_stage35_iter0;
reg    ap_block_state38_io;
reg    ap_block_pp0_stage35_11001;
wire   [31:0] select_ln174_6_fu_845_p3;
reg    ap_block_state42_pp0_stage39_iter0;
reg    ap_block_state42_io;
reg    ap_block_pp0_stage39_11001;
wire   [31:0] select_ln174_7_fu_896_p3;
reg    ap_block_state46_pp0_stage43_iter0;
reg    ap_block_state46_io;
reg    ap_block_pp0_stage43_11001;
wire   [31:0] select_ln174_8_fu_947_p3;
reg    ap_block_state50_pp0_stage47_iter0;
reg    ap_block_state50_io;
reg    ap_block_pp0_stage47_11001;
wire   [31:0] select_ln174_9_fu_998_p3;
reg    ap_block_state54_pp0_stage51_iter0;
reg    ap_block_state54_io;
reg    ap_block_pp0_stage51_11001;
wire   [31:0] select_ln174_10_fu_1049_p3;
reg    ap_block_state58_pp0_stage55_iter0;
reg    ap_block_state58_io;
reg    ap_block_pp0_stage55_11001;
wire   [31:0] select_ln174_11_fu_1100_p3;
reg    ap_block_state62_pp0_stage59_iter0;
reg    ap_block_state62_io;
reg    ap_block_pp0_stage59_11001;
wire   [31:0] select_ln174_12_fu_1151_p3;
wire   [31:0] select_ln174_13_fu_1202_p3;
wire   [31:0] select_ln174_14_fu_1259_p3;
wire   [31:0] select_ln174_15_fu_1310_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_state65_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_subdone;
wire    ap_CS_fsm_pp0_stage62;
reg    ap_block_pp0_stage12_subdone;
reg   [6:0] empty_reg_374;
wire    ap_CS_fsm_state1;
reg   [3:0] ap_phi_mux_indvars_iv16_phi_fu_389_p4;
wire   [63:0] indvars_iv16_cast_fu_461_p1;
reg   [31:0] ap_sig_allocacmp_sum_load;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage19_01001;
reg    ap_block_pp0_stage23_01001;
reg    ap_block_pp0_stage27_01001;
reg    ap_block_pp0_stage31_01001;
reg    ap_block_pp0_stage35_01001;
reg    ap_block_pp0_stage39_01001;
reg    ap_block_pp0_stage43_01001;
reg    ap_block_pp0_stage47_01001;
reg    ap_block_pp0_stage51_01001;
reg    ap_block_pp0_stage55_01001;
reg    ap_block_pp0_stage59_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage11_01001;
reg   [31:0] grp_fu_396_p0;
reg   [31:0] grp_fu_396_p1;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage33;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
wire    ap_block_pp0_stage37;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_pp0_stage38;
wire    ap_block_pp0_stage41;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_pp0_stage42;
wire    ap_block_pp0_stage45;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_pp0_stage46;
wire    ap_block_pp0_stage49;
wire    ap_CS_fsm_pp0_stage50;
wire    ap_block_pp0_stage50;
wire    ap_block_pp0_stage53;
wire    ap_CS_fsm_pp0_stage54;
wire    ap_block_pp0_stage54;
wire    ap_block_pp0_stage57;
wire    ap_CS_fsm_pp0_stage58;
wire    ap_block_pp0_stage58;
wire    ap_block_pp0_stage61;
wire    ap_block_pp0_stage62;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_400_p0;
wire    ap_block_pp0_stage7;
reg   [31:0] grp_fu_405_p0;
wire   [31:0] bitcast_ln34_fu_497_p1;
wire   [7:0] tmp_1_fu_501_p4;
wire   [22:0] trunc_ln34_fu_511_p1;
wire   [0:0] icmp_ln34_1_fu_521_p2;
wire   [0:0] icmp_ln34_fu_515_p2;
wire   [0:0] or_ln34_fu_527_p2;
wire   [0:0] grp_fu_405_p2;
wire   [0:0] and_ln34_fu_533_p2;
wire   [31:0] bitcast_ln34_1_fu_548_p1;
wire   [7:0] tmp_3_fu_552_p4;
wire   [22:0] trunc_ln34_1_fu_562_p1;
wire   [0:0] icmp_ln34_3_fu_572_p2;
wire   [0:0] icmp_ln34_2_fu_566_p2;
wire   [0:0] or_ln34_1_fu_578_p2;
wire   [0:0] and_ln34_1_fu_584_p2;
wire   [31:0] bitcast_ln34_2_fu_599_p1;
wire   [7:0] tmp_5_fu_603_p4;
wire   [22:0] trunc_ln34_2_fu_613_p1;
wire   [0:0] icmp_ln34_5_fu_623_p2;
wire   [0:0] icmp_ln34_4_fu_617_p2;
wire   [0:0] or_ln34_2_fu_629_p2;
wire   [0:0] and_ln34_2_fu_635_p2;
wire   [31:0] bitcast_ln34_3_fu_650_p1;
wire   [7:0] tmp_7_fu_654_p4;
wire   [22:0] trunc_ln34_3_fu_664_p1;
wire   [0:0] icmp_ln34_7_fu_674_p2;
wire   [0:0] icmp_ln34_6_fu_668_p2;
wire   [0:0] or_ln34_3_fu_680_p2;
wire   [0:0] and_ln34_3_fu_686_p2;
wire   [31:0] bitcast_ln34_4_fu_701_p1;
wire   [7:0] tmp_9_fu_705_p4;
wire   [22:0] trunc_ln34_4_fu_715_p1;
wire   [0:0] icmp_ln34_9_fu_725_p2;
wire   [0:0] icmp_ln34_8_fu_719_p2;
wire   [0:0] or_ln34_4_fu_731_p2;
wire   [0:0] and_ln34_4_fu_737_p2;
wire   [31:0] bitcast_ln34_5_fu_752_p1;
wire   [7:0] tmp_10_fu_756_p4;
wire   [22:0] trunc_ln34_5_fu_766_p1;
wire   [0:0] icmp_ln34_11_fu_776_p2;
wire   [0:0] icmp_ln34_10_fu_770_p2;
wire   [0:0] or_ln34_5_fu_782_p2;
wire   [0:0] and_ln34_5_fu_788_p2;
wire   [31:0] bitcast_ln34_6_fu_803_p1;
wire   [7:0] tmp_12_fu_807_p4;
wire   [22:0] trunc_ln34_6_fu_817_p1;
wire   [0:0] icmp_ln34_13_fu_827_p2;
wire   [0:0] icmp_ln34_12_fu_821_p2;
wire   [0:0] or_ln34_6_fu_833_p2;
wire   [0:0] and_ln34_6_fu_839_p2;
wire   [31:0] bitcast_ln34_7_fu_854_p1;
wire   [7:0] tmp_14_fu_858_p4;
wire   [22:0] trunc_ln34_7_fu_868_p1;
wire   [0:0] icmp_ln34_15_fu_878_p2;
wire   [0:0] icmp_ln34_14_fu_872_p2;
wire   [0:0] or_ln34_7_fu_884_p2;
wire   [0:0] and_ln34_7_fu_890_p2;
wire   [31:0] bitcast_ln34_8_fu_905_p1;
wire   [7:0] tmp_16_fu_909_p4;
wire   [22:0] trunc_ln34_8_fu_919_p1;
wire   [0:0] icmp_ln34_17_fu_929_p2;
wire   [0:0] icmp_ln34_16_fu_923_p2;
wire   [0:0] or_ln34_8_fu_935_p2;
wire   [0:0] and_ln34_8_fu_941_p2;
wire   [31:0] bitcast_ln34_9_fu_956_p1;
wire   [7:0] tmp_18_fu_960_p4;
wire   [22:0] trunc_ln34_9_fu_970_p1;
wire   [0:0] icmp_ln34_19_fu_980_p2;
wire   [0:0] icmp_ln34_18_fu_974_p2;
wire   [0:0] or_ln34_9_fu_986_p2;
wire   [0:0] and_ln34_9_fu_992_p2;
wire   [31:0] bitcast_ln34_10_fu_1007_p1;
wire   [7:0] tmp_20_fu_1011_p4;
wire   [22:0] trunc_ln34_10_fu_1021_p1;
wire   [0:0] icmp_ln34_21_fu_1031_p2;
wire   [0:0] icmp_ln34_20_fu_1025_p2;
wire   [0:0] or_ln34_10_fu_1037_p2;
wire   [0:0] and_ln34_10_fu_1043_p2;
wire   [31:0] bitcast_ln34_11_fu_1058_p1;
wire   [7:0] tmp_22_fu_1062_p4;
wire   [22:0] trunc_ln34_11_fu_1072_p1;
wire   [0:0] icmp_ln34_23_fu_1082_p2;
wire   [0:0] icmp_ln34_22_fu_1076_p2;
wire   [0:0] or_ln34_11_fu_1088_p2;
wire   [0:0] and_ln34_11_fu_1094_p2;
wire   [31:0] bitcast_ln34_12_fu_1109_p1;
wire   [7:0] tmp_24_fu_1113_p4;
wire   [22:0] trunc_ln34_12_fu_1123_p1;
wire   [0:0] icmp_ln34_25_fu_1133_p2;
wire   [0:0] icmp_ln34_24_fu_1127_p2;
wire   [0:0] or_ln34_12_fu_1139_p2;
wire   [0:0] and_ln34_12_fu_1145_p2;
wire   [31:0] bitcast_ln34_13_fu_1160_p1;
wire   [7:0] tmp_26_fu_1164_p4;
wire   [22:0] trunc_ln34_13_fu_1174_p1;
wire   [0:0] icmp_ln34_27_fu_1184_p2;
wire   [0:0] icmp_ln34_26_fu_1178_p2;
wire   [0:0] or_ln34_13_fu_1190_p2;
wire   [0:0] and_ln34_13_fu_1196_p2;
wire   [31:0] bitcast_ln34_14_fu_1217_p1;
wire   [7:0] tmp_28_fu_1221_p4;
wire   [22:0] trunc_ln34_14_fu_1231_p1;
wire   [0:0] icmp_ln34_29_fu_1241_p2;
wire   [0:0] icmp_ln34_28_fu_1235_p2;
wire   [0:0] or_ln34_14_fu_1247_p2;
wire   [0:0] and_ln34_14_fu_1253_p2;
wire   [31:0] bitcast_ln34_15_fu_1268_p1;
wire   [7:0] tmp_30_fu_1272_p4;
wire   [22:0] trunc_ln34_15_fu_1282_p1;
wire   [0:0] icmp_ln34_31_fu_1292_p2;
wire   [0:0] icmp_ln34_30_fu_1286_p2;
wire   [0:0] or_ln34_15_fu_1298_p2;
wire   [0:0] and_ln34_15_fu_1304_p2;
reg    grp_fu_396_ce;
wire    ap_block_state25_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_block_state29_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_block_state33_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_state37_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_block_state41_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_block_state45_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_11001;
wire    ap_block_state49_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_11001;
wire    ap_block_state53_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_11001;
wire    ap_block_state57_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_11001;
wire    ap_block_state61_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_11001;
wire    ap_block_pp0_stage62_11001;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state69_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg    grp_fu_400_ce;
reg    grp_fu_405_ce;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage18_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage26_00001;
wire    ap_block_pp0_stage30_00001;
wire    ap_block_pp0_stage34_00001;
wire    ap_block_pp0_stage38_00001;
wire    ap_block_pp0_stage42_00001;
wire    ap_block_pp0_stage46_00001;
wire    ap_block_pp0_stage50_00001;
wire    ap_block_pp0_stage54_00001;
wire    ap_block_pp0_stage58_00001;
wire    ap_block_pp0_stage62_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage10_00001;
reg   [65:0] ap_NS_fsm;
wire    ap_CS_fsm_state79;
wire    regslice_both_out_V_U_apdone_blk;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
reg    ap_block_pp0_stage31_subdone;
reg    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
reg    ap_block_pp0_stage35_subdone;
reg    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
reg    ap_block_pp0_stage39_subdone;
reg    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
reg    ap_block_pp0_stage43_subdone;
reg    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
reg    ap_block_pp0_stage47_subdone;
reg    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
reg    ap_block_pp0_stage51_subdone;
reg    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
reg    ap_block_pp0_stage55_subdone;
reg    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
reg    ap_block_pp0_stage59_subdone;
reg    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_V_U_apdone_blk;
wire   [31:0] in_V_TDATA_int_regslice;
wire    in_V_TVALID_int_regslice;
reg    in_V_TREADY_int_regslice;
wire    regslice_both_in_V_U_ack_in;
reg   [31:0] out_V_TDATA_int_regslice;
reg    out_V_TVALID_int_regslice;
wire    out_V_TREADY_int_regslice;
wire    regslice_both_out_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 sum = 32'd0;
#0 ap_CS_fsm = 66'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

test_array_bias #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_address0),
    .ce0(bias_ce0),
    .q0(bias_q0)
);

test_array_weight_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_0_0_address0),
    .ce0(weight_0_0_0_ce0),
    .q0(weight_0_0_0_q0)
);

test_array_weight_0_0_1 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_0_1_address0),
    .ce0(weight_0_0_1_ce0),
    .q0(weight_0_0_1_q0)
);

test_array_weight_0_0_2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_0_2_address0),
    .ce0(weight_0_0_2_ce0),
    .q0(weight_0_0_2_q0)
);

test_array_weight_0_0_3 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_0_3_address0),
    .ce0(weight_0_0_3_ce0),
    .q0(weight_0_0_3_q0)
);

test_array_weight_0_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_1_0_address0),
    .ce0(weight_0_1_0_ce0),
    .q0(weight_0_1_0_q0)
);

test_array_weight_0_1_1 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_1_1_address0),
    .ce0(weight_0_1_1_ce0),
    .q0(weight_0_1_1_q0)
);

test_array_weight_0_1_2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_1_2_address0),
    .ce0(weight_0_1_2_ce0),
    .q0(weight_0_1_2_q0)
);

test_array_weight_0_1_3 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_1_3_address0),
    .ce0(weight_0_1_3_ce0),
    .q0(weight_0_1_3_q0)
);

test_array_weight_0_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_2_0_address0),
    .ce0(weight_0_2_0_ce0),
    .q0(weight_0_2_0_q0)
);

test_array_weight_0_2_1 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_2_1_address0),
    .ce0(weight_0_2_1_ce0),
    .q0(weight_0_2_1_q0)
);

test_array_weight_0_2_2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_2_2_address0),
    .ce0(weight_0_2_2_ce0),
    .q0(weight_0_2_2_q0)
);

test_array_weight_0_2_3 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_2_3_address0),
    .ce0(weight_0_2_3_ce0),
    .q0(weight_0_2_3_q0)
);

test_array_weight_0_3_0 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_3_0_address0),
    .ce0(weight_0_3_0_ce0),
    .q0(weight_0_3_0_q0)
);

test_array_weight_0_3_1 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_3_1_address0),
    .ce0(weight_0_3_1_ce0),
    .q0(weight_0_3_1_q0)
);

test_array_weight_0_3_2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_3_2_address0),
    .ce0(weight_0_3_2_ce0),
    .q0(weight_0_3_2_q0)
);

test_array_weight_0_3_3 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
weight_0_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_0_3_3_address0),
    .ce0(weight_0_3_3_ce0),
    .q0(weight_0_3_3_q0)
);

test_array_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_396_p0),
    .din1(grp_fu_396_p1),
    .ce(grp_fu_396_ce),
    .dout(grp_fu_396_p2)
);

test_array_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_400_p0),
    .din1(32'd0),
    .ce(grp_fu_400_ce),
    .dout(grp_fu_400_p2)
);

test_array_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_405_p0),
    .din1(32'd0),
    .ce(grp_fu_405_ce),
    .opcode(5'd2),
    .dout(grp_fu_405_p2)
);

test_array_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_V_TDATA),
    .vld_in(in_V_TVALID),
    .ack_in(regslice_both_in_V_U_ack_in),
    .data_out(in_V_TDATA_int_regslice),
    .vld_out(in_V_TVALID_int_regslice),
    .ack_out(in_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_U_apdone_blk)
);

test_array_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_V_TDATA_int_regslice),
    .vld_in(out_V_TVALID_int_regslice),
    .ack_in(out_V_TREADY_int_regslice),
    .data_out(out_V_TDATA),
    .vld_out(regslice_both_out_V_U_vld_out),
    .ack_out(out_V_TREADY),
    .apdone_blk(regslice_both_out_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage62_subdone) & (1'b1 == ap_CS_fsm_pp0_stage62)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_374 <= 7'd0;
    end else if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_374 <= add_ln90_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvars_iv16_reg_385 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvars_iv16_reg_385 <= add_ln97_reg_1331;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln97_reg_1331 <= add_ln97_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias_load_reg_1425 <= bias_q0;
        weight_0_0_0_load_reg_1430 <= weight_0_0_0_q0;
        weight_0_0_1_load_reg_1435 <= weight_0_0_1_q0;
        weight_0_0_2_load_reg_1440 <= weight_0_0_2_q0;
        weight_0_0_3_load_reg_1445 <= weight_0_0_3_q0;
        weight_0_1_0_load_reg_1450 <= weight_0_1_0_q0;
        weight_0_1_1_load_reg_1455 <= weight_0_1_1_q0;
        weight_0_1_2_load_reg_1460 <= weight_0_1_2_q0;
        weight_0_1_3_load_reg_1465 <= weight_0_1_3_q0;
        weight_0_2_0_load_reg_1470 <= weight_0_2_0_q0;
        weight_0_2_1_load_reg_1475 <= weight_0_2_1_q0;
        weight_0_2_2_load_reg_1480 <= weight_0_2_2_q0;
        weight_0_2_3_load_reg_1485 <= weight_0_2_3_q0;
        weight_0_3_0_load_reg_1490 <= weight_0_3_0_q0;
        weight_0_3_1_load_reg_1495 <= weight_0_3_1_q0;
        weight_0_3_2_load_reg_1500 <= weight_0_3_2_q0;
        weight_0_3_3_load_reg_1505 <= weight_0_3_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias_load_reg_1425_pp0_iter1_reg <= bias_load_reg_1425;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln97_reg_1336 <= icmp_ln97_fu_455_p2;
        icmp_ln97_reg_1336_pp0_iter1_reg <= icmp_ln97_reg_1336;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_0_3_reg_1515 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_1_1_reg_1520 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_1_2_reg_1525 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_1_3_reg_1530 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_2_1_reg_1535 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul_2_2_reg_1540 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul_2_3_reg_1550 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul_3_1_reg_1555 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul_3_2_reg_1560 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul_3_3_reg_1570 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_410 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_415 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_420 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage61_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage61)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage56_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage56)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage53_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage53)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage48_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage45_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage40_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage37_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage32_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_425 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage57_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage57)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage52_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage52)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage49_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage49)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage44_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage41_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage36_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage33_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage60_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage60)))) begin
        reg_431 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sum <= grp_fu_396_p2;
    end
end

always @ (*) begin
    if ((icmp_ln97_fu_455_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvars_iv16_phi_fu_389_p4 = add_ln97_reg_1331;
    end else begin
        ap_phi_mux_indvars_iv16_phi_fu_389_p4 = indvars_iv16_reg_385;
    end
end

always @ (*) begin
    if (((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_sig_allocacmp_sum_load = grp_fu_396_p2;
    end else begin
        ap_sig_allocacmp_sum_load = sum;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage57_11001) & (1'b1 == ap_CS_fsm_pp0_stage57)) | ((1'b0 == ap_block_pp0_stage52_11001) & (1'b1 == ap_CS_fsm_pp0_stage52)) | ((1'b0 == ap_block_pp0_stage49_11001) & (1'b1 == ap_CS_fsm_pp0_stage49)) | ((1'b0 == ap_block_pp0_stage44_11001) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((1'b0 == ap_block_pp0_stage41_11001) & (1'b1 == ap_CS_fsm_pp0_stage41)) | ((1'b0 == ap_block_pp0_stage36_11001) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage33_11001) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage61_11001) & (1'b1 == ap_CS_fsm_pp0_stage61)) | ((1'b0 == ap_block_pp0_stage56_11001) & (1'b1 == ap_CS_fsm_pp0_stage56)) | ((1'b0 == ap_block_pp0_stage53_11001) & (1'b1 == ap_CS_fsm_pp0_stage53)) | ((1'b0 == ap_block_pp0_stage48_11001) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((1'b0 == ap_block_pp0_stage45_11001) & (1'b1 == ap_CS_fsm_pp0_stage45)) | ((1'b0 == ap_block_pp0_stage40_11001) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((1'b0 == ap_block_pp0_stage37_11001) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage32_11001) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage62_11001) & (1'b1 == ap_CS_fsm_pp0_stage62)) | ((1'b0 == ap_block_pp0_stage58_11001) & (1'b1 == ap_CS_fsm_pp0_stage58)) | ((1'b0 == ap_block_pp0_stage54_11001) & (1'b1 == ap_CS_fsm_pp0_stage54)) | ((1'b0 == ap_block_pp0_stage50_11001) & (1'b1 == ap_CS_fsm_pp0_stage50)) | ((1'b0 == ap_block_pp0_stage46_11001) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage42_11001) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage38_11001) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage34_11001) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage59_11001) & (1'b1 == ap_CS_fsm_pp0_stage59)) | ((1'b0 == ap_block_pp0_stage55_11001) & (1'b1 == ap_CS_fsm_pp0_stage55)) | ((1'b0 == ap_block_pp0_stage51_11001) & (1'b1 == ap_CS_fsm_pp0_stage51)) | ((1'b0 == ap_block_pp0_stage47_11001) & (1'b1 == ap_CS_fsm_pp0_stage47)) | ((1'b0 == ap_block_pp0_stage43_11001) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage35_11001) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage60_11001) & (1'b1 == ap_CS_fsm_pp0_stage60)))) begin
        grp_fu_396_ce = 1'b1;
    end else begin
        grp_fu_396_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage62)) | ((1'b0 == ap_block_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage61)) | ((1'b0 == ap_block_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage54)) | ((1'b0 == ap_block_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage53)) | ((1'b0 == ap_block_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45)) | ((1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_396_p0 = reg_431;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage58)) | ((1'b0 == ap_block_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage57)) | ((1'b0 == ap_block_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage50)) | ((1'b0 == ap_block_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage49)) | ((1'b0 == ap_block_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41)) | ((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_396_p0 = reg_425;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_396_p0 = ap_sig_allocacmp_sum_load;
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_396_p1 = bias_load_reg_1425_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_396_p1 = mul_3_3_reg_1570;
    end else if (((1'b0 == ap_block_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage61))) begin
        grp_fu_396_p1 = mul_3_2_reg_1560;
    end else if (((1'b0 == ap_block_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage57))) begin
        grp_fu_396_p1 = mul_3_1_reg_1555;
    end else if (((1'b0 == ap_block_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage49))) begin
        grp_fu_396_p1 = mul_2_3_reg_1550;
    end else if (((1'b0 == ap_block_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45))) begin
        grp_fu_396_p1 = mul_2_2_reg_1540;
    end else if (((1'b0 == ap_block_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41))) begin
        grp_fu_396_p1 = mul_2_1_reg_1535;
    end else if (((1'b0 == ap_block_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
        grp_fu_396_p1 = mul_1_3_reg_1530;
    end else if (((1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        grp_fu_396_p1 = mul_1_2_reg_1525;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_396_p1 = mul_1_1_reg_1520;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_396_p1 = mul_0_3_reg_1515;
    end else if ((((1'b0 == ap_block_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage53)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_396_p1 = reg_420;
    end else if ((((1'b0 == ap_block_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage62)) | ((1'b0 == ap_block_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage58)) | ((1'b0 == ap_block_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage54)) | ((1'b0 == ap_block_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage50)) | ((1'b0 == ap_block_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_396_p1 = bias_load_reg_1425;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37)))) begin
        grp_fu_396_p1 = reg_415;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        grp_fu_396_p1 = reg_410;
    end else begin
        grp_fu_396_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_400_ce = 1'b1;
    end else begin
        grp_fu_400_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_400_p0 = weight_0_3_3_load_reg_1505;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            grp_fu_400_p0 = weight_0_3_2_load_reg_1500;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            grp_fu_400_p0 = weight_0_3_1_load_reg_1495;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            grp_fu_400_p0 = weight_0_3_0_load_reg_1490;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_400_p0 = weight_0_2_3_load_reg_1485;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            grp_fu_400_p0 = weight_0_2_2_load_reg_1480;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_400_p0 = weight_0_2_1_load_reg_1475;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_400_p0 = weight_0_2_0_load_reg_1470;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_400_p0 = weight_0_1_3_load_reg_1465;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_400_p0 = weight_0_1_2_load_reg_1460;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_400_p0 = weight_0_1_1_load_reg_1455;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_400_p0 = weight_0_1_0_load_reg_1450;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_400_p0 = weight_0_0_3_load_reg_1445;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_400_p0 = weight_0_0_2_load_reg_1440;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_400_p0 = weight_0_0_1_load_reg_1435;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_400_p0 = weight_0_0_0_load_reg_1430;
        end else begin
            grp_fu_400_p0 = 'bx;
        end
    end else begin
        grp_fu_400_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage62_11001) & (1'b1 == ap_CS_fsm_pp0_stage62)) | ((1'b0 == ap_block_pp0_stage58_11001) & (1'b1 == ap_CS_fsm_pp0_stage58)) | ((1'b0 == ap_block_pp0_stage54_11001) & (1'b1 == ap_CS_fsm_pp0_stage54)) | ((1'b0 == ap_block_pp0_stage50_11001) & (1'b1 == ap_CS_fsm_pp0_stage50)) | ((1'b0 == ap_block_pp0_stage46_11001) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage42_11001) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage38_11001) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage34_11001) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage59_11001) & (1'b1 == ap_CS_fsm_pp0_stage59)) | ((1'b0 == ap_block_pp0_stage55_11001) & (1'b1 == ap_CS_fsm_pp0_stage55)) | ((1'b0 == ap_block_pp0_stage51_11001) & (1'b1 == ap_CS_fsm_pp0_stage51)) | ((1'b0 == ap_block_pp0_stage47_11001) & (1'b1 == ap_CS_fsm_pp0_stage47)) | ((1'b0 == ap_block_pp0_stage43_11001) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage35_11001) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_405_ce = 1'b1;
    end else begin
        grp_fu_405_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage58)) | ((1'b0 == ap_block_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage50)) | ((1'b0 == ap_block_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        grp_fu_405_p0 = reg_431;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage62)) | ((1'b0 == ap_block_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage54)) | ((1'b0 == ap_block_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        grp_fu_405_p0 = reg_425;
    end else begin
        grp_fu_405_p0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_118_p3 == 1'd1) & (icmp_ln90_fu_443_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_V_TDATA_blk_n = in_V_TVALID_int_regslice;
    end else begin
        in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (ap_predicate_op99_read_state2 == 1'b1))) begin
        in_V_TREADY_int_regslice = 1'b1;
    end else begin
        in_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage60)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage59)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage56)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage55)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage52)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage51)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        out_V_TDATA_blk_n = out_V_TREADY_int_regslice;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        out_V_TDATA_int_regslice = select_ln174_15_fu_1310_p3;
    end else if (((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        out_V_TDATA_int_regslice = select_ln174_14_fu_1259_p3;
    end else if (((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        out_V_TDATA_int_regslice = select_ln174_13_fu_1202_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_TDATA_int_regslice = select_ln174_12_fu_1151_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage59_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage59))) begin
        out_V_TDATA_int_regslice = select_ln174_11_fu_1100_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage55_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage55))) begin
        out_V_TDATA_int_regslice = select_ln174_10_fu_1049_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage51_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage51))) begin
        out_V_TDATA_int_regslice = select_ln174_9_fu_998_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage47_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47))) begin
        out_V_TDATA_int_regslice = select_ln174_8_fu_947_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage43_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43))) begin
        out_V_TDATA_int_regslice = select_ln174_7_fu_896_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage39_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39))) begin
        out_V_TDATA_int_regslice = select_ln174_6_fu_845_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage35_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35))) begin
        out_V_TDATA_int_regslice = select_ln174_5_fu_794_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage31_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        out_V_TDATA_int_regslice = select_ln174_4_fu_743_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage27_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        out_V_TDATA_int_regslice = select_ln174_3_fu_692_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage23_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        out_V_TDATA_int_regslice = select_ln174_2_fu_641_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage19_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        out_V_TDATA_int_regslice = select_ln174_1_fu_590_p3;
    end else if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage15_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        out_V_TDATA_int_regslice = select_ln174_fu_539_p3;
    end else begin
        out_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage59_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage59)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage55_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage55)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage51_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage51)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage47_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage43_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage39_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage35_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        out_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        test_bias_ap_vld = 1'b1;
    end else begin
        test_bias_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln97_reg_1336 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        test_val2_ap_vld = 1'b1;
    end else begin
        test_val2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_0_0_ce0 = 1'b1;
    end else begin
        weight_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_0_1_ce0 = 1'b1;
    end else begin
        weight_0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_0_2_ce0 = 1'b1;
    end else begin
        weight_0_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_0_3_ce0 = 1'b1;
    end else begin
        weight_0_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_1_0_ce0 = 1'b1;
    end else begin
        weight_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_1_1_ce0 = 1'b1;
    end else begin
        weight_0_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_1_2_ce0 = 1'b1;
    end else begin
        weight_0_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_1_3_ce0 = 1'b1;
    end else begin
        weight_0_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_2_0_ce0 = 1'b1;
    end else begin
        weight_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_2_1_ce0 = 1'b1;
    end else begin
        weight_0_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_2_2_ce0 = 1'b1;
    end else begin
        weight_0_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_2_3_ce0 = 1'b1;
    end else begin
        weight_0_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_3_0_ce0 = 1'b1;
    end else begin
        weight_0_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_3_1_ce0 = 1'b1;
    end else begin
        weight_0_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_3_2_ce0 = 1'b1;
    end else begin
        weight_0_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_0_3_3_ce0 = 1'b1;
    end else begin
        weight_0_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1)) & (icmp_ln90_fu_443_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln97_fu_455_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln97_fu_455_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln90_fu_437_p2 = (empty_reg_374 + 7'd1);

assign add_ln97_fu_449_p2 = (ap_phi_mux_indvars_iv16_phi_fu_389_p4 + 4'd1);

assign and_ln34_10_fu_1043_p2 = (or_ln34_10_fu_1037_p2 & grp_fu_405_p2);

assign and_ln34_11_fu_1094_p2 = (or_ln34_11_fu_1088_p2 & grp_fu_405_p2);

assign and_ln34_12_fu_1145_p2 = (or_ln34_12_fu_1139_p2 & grp_fu_405_p2);

assign and_ln34_13_fu_1196_p2 = (or_ln34_13_fu_1190_p2 & grp_fu_405_p2);

assign and_ln34_14_fu_1253_p2 = (or_ln34_14_fu_1247_p2 & grp_fu_405_p2);

assign and_ln34_15_fu_1304_p2 = (or_ln34_15_fu_1298_p2 & grp_fu_405_p2);

assign and_ln34_1_fu_584_p2 = (or_ln34_1_fu_578_p2 & grp_fu_405_p2);

assign and_ln34_2_fu_635_p2 = (or_ln34_2_fu_629_p2 & grp_fu_405_p2);

assign and_ln34_3_fu_686_p2 = (or_ln34_3_fu_680_p2 & grp_fu_405_p2);

assign and_ln34_4_fu_737_p2 = (or_ln34_4_fu_731_p2 & grp_fu_405_p2);

assign and_ln34_5_fu_788_p2 = (or_ln34_5_fu_782_p2 & grp_fu_405_p2);

assign and_ln34_6_fu_839_p2 = (or_ln34_6_fu_833_p2 & grp_fu_405_p2);

assign and_ln34_7_fu_890_p2 = (or_ln34_7_fu_884_p2 & grp_fu_405_p2);

assign and_ln34_8_fu_941_p2 = (or_ln34_8_fu_935_p2 & grp_fu_405_p2);

assign and_ln34_9_fu_992_p2 = (or_ln34_9_fu_986_p2 & grp_fu_405_p2);

assign and_ln34_fu_533_p2 = (or_ln34_fu_527_p2 & grp_fu_405_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp0_stage48 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp0_stage49 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage50 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp0_stage51 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp0_stage52 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp0_stage53 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp0_stage54 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage55 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp0_stage57 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp0_stage58 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp0_stage59 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage60 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp0_stage61 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp0_stage62 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd65];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state66_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state66_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state77_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state77_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state78_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state78_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state67_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state67_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state26_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state26_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state27_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state27_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage32_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state35_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage32_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state35_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage35_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage35_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage35_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage36_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state39_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage36_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state39_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage39_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage39_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state42_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage39_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state42_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage40_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state43_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage40_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state43_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage41 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage43_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage43_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage43_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage44 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage44_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state47_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage44_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state47_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage45 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage47_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage47_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state50_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage47_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state50_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage48_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state51_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage48_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state51_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage49 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state70_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state70_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage51_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage51_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state54_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage51_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state54_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage52 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage52_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state55_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage52_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state55_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage53 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage55_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage55_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage55_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage56 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage56_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage56_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage59_01001 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage59_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state62_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage59_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state62_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state71_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state71_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage60_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state63_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage60_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state63_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0))));
end

assign ap_block_pp0_stage61 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state74_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state74_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state75_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state75_io) | ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage15_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state19_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage16_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state2 = ((in_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op99_read_state2 == 1'b1));
end

assign ap_block_state20_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state22_pp0_stage19_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state23_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage20_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state24_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp0_stage23_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state27_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state27_pp0_stage24_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state28_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state30_pp0_stage27_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state31_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state31_pp0_stage28_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state32_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state34_pp0_stage31_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state35_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state35_pp0_stage32_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state36_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state38_pp0_stage35_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state39_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state39_pp0_stage36_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state42_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state42_pp0_stage39_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state43_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state43_pp0_stage40_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state44_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state46_pp0_stage43_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state47_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state47_pp0_stage44_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state48_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state50_pp0_stage47_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state51_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state51_pp0_stage48_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state52_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state54_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state54_pp0_stage51_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state55_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state55_pp0_stage52_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state56_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state58_pp0_stage55_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state59_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state59_pp0_stage56_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state62_pp0_stage59_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state63_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state63_pp0_stage60_iter0 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

assign ap_block_state64_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state66_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state66_pp0_stage0_iter1 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln97_reg_1336 == 1'd0));
end

always @ (*) begin
    ap_block_state67_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state67_pp0_stage1_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state68_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state70_pp0_stage4_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state71_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state71_pp0_stage5_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state72_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state74_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage8_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state75_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state75_pp0_stage9_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state76_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state77_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state77_pp0_stage11_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state78_io = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state78_pp0_stage12_iter1 = ((icmp_ln97_reg_1336_pp0_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op99_read_state2 = ((tmp_nbreadreq_fu_118_p3 == 1'd1) & (icmp_ln90_fu_443_p2 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias_address0 = indvars_iv16_cast_fu_461_p1;

assign bitcast_ln34_10_fu_1007_p1 = reg_425;

assign bitcast_ln34_11_fu_1058_p1 = reg_431;

assign bitcast_ln34_12_fu_1109_p1 = reg_425;

assign bitcast_ln34_13_fu_1160_p1 = reg_431;

assign bitcast_ln34_14_fu_1217_p1 = reg_425;

assign bitcast_ln34_15_fu_1268_p1 = reg_431;

assign bitcast_ln34_1_fu_548_p1 = reg_431;

assign bitcast_ln34_2_fu_599_p1 = reg_425;

assign bitcast_ln34_3_fu_650_p1 = reg_431;

assign bitcast_ln34_4_fu_701_p1 = reg_425;

assign bitcast_ln34_5_fu_752_p1 = reg_431;

assign bitcast_ln34_6_fu_803_p1 = reg_425;

assign bitcast_ln34_7_fu_854_p1 = reg_431;

assign bitcast_ln34_8_fu_905_p1 = reg_425;

assign bitcast_ln34_9_fu_956_p1 = reg_431;

assign bitcast_ln34_fu_497_p1 = reg_425;

assign icmp_ln34_10_fu_770_p2 = ((tmp_10_fu_756_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_11_fu_776_p2 = ((trunc_ln34_5_fu_766_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_12_fu_821_p2 = ((tmp_12_fu_807_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_13_fu_827_p2 = ((trunc_ln34_6_fu_817_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_14_fu_872_p2 = ((tmp_14_fu_858_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_15_fu_878_p2 = ((trunc_ln34_7_fu_868_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_16_fu_923_p2 = ((tmp_16_fu_909_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_17_fu_929_p2 = ((trunc_ln34_8_fu_919_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_18_fu_974_p2 = ((tmp_18_fu_960_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_19_fu_980_p2 = ((trunc_ln34_9_fu_970_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_521_p2 = ((trunc_ln34_fu_511_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_20_fu_1025_p2 = ((tmp_20_fu_1011_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_21_fu_1031_p2 = ((trunc_ln34_10_fu_1021_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_22_fu_1076_p2 = ((tmp_22_fu_1062_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_23_fu_1082_p2 = ((trunc_ln34_11_fu_1072_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_24_fu_1127_p2 = ((tmp_24_fu_1113_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_25_fu_1133_p2 = ((trunc_ln34_12_fu_1123_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_26_fu_1178_p2 = ((tmp_26_fu_1164_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_27_fu_1184_p2 = ((trunc_ln34_13_fu_1174_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_28_fu_1235_p2 = ((tmp_28_fu_1221_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_29_fu_1241_p2 = ((trunc_ln34_14_fu_1231_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_566_p2 = ((tmp_3_fu_552_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_30_fu_1286_p2 = ((tmp_30_fu_1272_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_31_fu_1292_p2 = ((trunc_ln34_15_fu_1282_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_3_fu_572_p2 = ((trunc_ln34_1_fu_562_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_4_fu_617_p2 = ((tmp_5_fu_603_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_5_fu_623_p2 = ((trunc_ln34_2_fu_613_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_6_fu_668_p2 = ((tmp_7_fu_654_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_7_fu_674_p2 = ((trunc_ln34_3_fu_664_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_8_fu_719_p2 = ((tmp_9_fu_705_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_9_fu_725_p2 = ((trunc_ln34_4_fu_715_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_515_p2 = ((tmp_1_fu_501_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_443_p2 = ((empty_reg_374 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_455_p2 = ((ap_phi_mux_indvars_iv16_phi_fu_389_p4 == 4'd8) ? 1'b1 : 1'b0);

assign in_V_TREADY = regslice_both_in_V_U_ack_in;

assign indvars_iv16_cast_fu_461_p1 = ap_phi_mux_indvars_iv16_phi_fu_389_p4;

assign or_ln34_10_fu_1037_p2 = (icmp_ln34_21_fu_1031_p2 | icmp_ln34_20_fu_1025_p2);

assign or_ln34_11_fu_1088_p2 = (icmp_ln34_23_fu_1082_p2 | icmp_ln34_22_fu_1076_p2);

assign or_ln34_12_fu_1139_p2 = (icmp_ln34_25_fu_1133_p2 | icmp_ln34_24_fu_1127_p2);

assign or_ln34_13_fu_1190_p2 = (icmp_ln34_27_fu_1184_p2 | icmp_ln34_26_fu_1178_p2);

assign or_ln34_14_fu_1247_p2 = (icmp_ln34_29_fu_1241_p2 | icmp_ln34_28_fu_1235_p2);

assign or_ln34_15_fu_1298_p2 = (icmp_ln34_31_fu_1292_p2 | icmp_ln34_30_fu_1286_p2);

assign or_ln34_1_fu_578_p2 = (icmp_ln34_3_fu_572_p2 | icmp_ln34_2_fu_566_p2);

assign or_ln34_2_fu_629_p2 = (icmp_ln34_5_fu_623_p2 | icmp_ln34_4_fu_617_p2);

assign or_ln34_3_fu_680_p2 = (icmp_ln34_7_fu_674_p2 | icmp_ln34_6_fu_668_p2);

assign or_ln34_4_fu_731_p2 = (icmp_ln34_9_fu_725_p2 | icmp_ln34_8_fu_719_p2);

assign or_ln34_5_fu_782_p2 = (icmp_ln34_11_fu_776_p2 | icmp_ln34_10_fu_770_p2);

assign or_ln34_6_fu_833_p2 = (icmp_ln34_13_fu_827_p2 | icmp_ln34_12_fu_821_p2);

assign or_ln34_7_fu_884_p2 = (icmp_ln34_15_fu_878_p2 | icmp_ln34_14_fu_872_p2);

assign or_ln34_8_fu_935_p2 = (icmp_ln34_17_fu_929_p2 | icmp_ln34_16_fu_923_p2);

assign or_ln34_9_fu_986_p2 = (icmp_ln34_19_fu_980_p2 | icmp_ln34_18_fu_974_p2);

assign or_ln34_fu_527_p2 = (icmp_ln34_fu_515_p2 | icmp_ln34_1_fu_521_p2);

assign out_V_TVALID = regslice_both_out_V_U_vld_out;

assign select_ln174_10_fu_1049_p3 = ((and_ln34_10_fu_1043_p2[0:0] == 1'b1) ? bitcast_ln34_10_fu_1007_p1 : 32'd0);

assign select_ln174_11_fu_1100_p3 = ((and_ln34_11_fu_1094_p2[0:0] == 1'b1) ? bitcast_ln34_11_fu_1058_p1 : 32'd0);

assign select_ln174_12_fu_1151_p3 = ((and_ln34_12_fu_1145_p2[0:0] == 1'b1) ? bitcast_ln34_12_fu_1109_p1 : 32'd0);

assign select_ln174_13_fu_1202_p3 = ((and_ln34_13_fu_1196_p2[0:0] == 1'b1) ? bitcast_ln34_13_fu_1160_p1 : 32'd0);

assign select_ln174_14_fu_1259_p3 = ((and_ln34_14_fu_1253_p2[0:0] == 1'b1) ? bitcast_ln34_14_fu_1217_p1 : 32'd0);

assign select_ln174_15_fu_1310_p3 = ((and_ln34_15_fu_1304_p2[0:0] == 1'b1) ? bitcast_ln34_15_fu_1268_p1 : 32'd0);

assign select_ln174_1_fu_590_p3 = ((and_ln34_1_fu_584_p2[0:0] == 1'b1) ? bitcast_ln34_1_fu_548_p1 : 32'd0);

assign select_ln174_2_fu_641_p3 = ((and_ln34_2_fu_635_p2[0:0] == 1'b1) ? bitcast_ln34_2_fu_599_p1 : 32'd0);

assign select_ln174_3_fu_692_p3 = ((and_ln34_3_fu_686_p2[0:0] == 1'b1) ? bitcast_ln34_3_fu_650_p1 : 32'd0);

assign select_ln174_4_fu_743_p3 = ((and_ln34_4_fu_737_p2[0:0] == 1'b1) ? bitcast_ln34_4_fu_701_p1 : 32'd0);

assign select_ln174_5_fu_794_p3 = ((and_ln34_5_fu_788_p2[0:0] == 1'b1) ? bitcast_ln34_5_fu_752_p1 : 32'd0);

assign select_ln174_6_fu_845_p3 = ((and_ln34_6_fu_839_p2[0:0] == 1'b1) ? bitcast_ln34_6_fu_803_p1 : 32'd0);

assign select_ln174_7_fu_896_p3 = ((and_ln34_7_fu_890_p2[0:0] == 1'b1) ? bitcast_ln34_7_fu_854_p1 : 32'd0);

assign select_ln174_8_fu_947_p3 = ((and_ln34_8_fu_941_p2[0:0] == 1'b1) ? bitcast_ln34_8_fu_905_p1 : 32'd0);

assign select_ln174_9_fu_998_p3 = ((and_ln34_9_fu_992_p2[0:0] == 1'b1) ? bitcast_ln34_9_fu_956_p1 : 32'd0);

assign select_ln174_fu_539_p3 = ((and_ln34_fu_533_p2[0:0] == 1'b1) ? bitcast_ln34_fu_497_p1 : 32'd0);

assign test_bias = bias_q0;

assign test_val2 = weight_0_3_3_q0;

assign tmp_10_fu_756_p4 = {{bitcast_ln34_5_fu_752_p1[30:23]}};

assign tmp_12_fu_807_p4 = {{bitcast_ln34_6_fu_803_p1[30:23]}};

assign tmp_14_fu_858_p4 = {{bitcast_ln34_7_fu_854_p1[30:23]}};

assign tmp_16_fu_909_p4 = {{bitcast_ln34_8_fu_905_p1[30:23]}};

assign tmp_18_fu_960_p4 = {{bitcast_ln34_9_fu_956_p1[30:23]}};

assign tmp_1_fu_501_p4 = {{bitcast_ln34_fu_497_p1[30:23]}};

assign tmp_20_fu_1011_p4 = {{bitcast_ln34_10_fu_1007_p1[30:23]}};

assign tmp_22_fu_1062_p4 = {{bitcast_ln34_11_fu_1058_p1[30:23]}};

assign tmp_24_fu_1113_p4 = {{bitcast_ln34_12_fu_1109_p1[30:23]}};

assign tmp_26_fu_1164_p4 = {{bitcast_ln34_13_fu_1160_p1[30:23]}};

assign tmp_28_fu_1221_p4 = {{bitcast_ln34_14_fu_1217_p1[30:23]}};

assign tmp_30_fu_1272_p4 = {{bitcast_ln34_15_fu_1268_p1[30:23]}};

assign tmp_3_fu_552_p4 = {{bitcast_ln34_1_fu_548_p1[30:23]}};

assign tmp_5_fu_603_p4 = {{bitcast_ln34_2_fu_599_p1[30:23]}};

assign tmp_7_fu_654_p4 = {{bitcast_ln34_3_fu_650_p1[30:23]}};

assign tmp_9_fu_705_p4 = {{bitcast_ln34_4_fu_701_p1[30:23]}};

assign tmp_nbreadreq_fu_118_p3 = in_V_TVALID_int_regslice;

assign trunc_ln34_10_fu_1021_p1 = bitcast_ln34_10_fu_1007_p1[22:0];

assign trunc_ln34_11_fu_1072_p1 = bitcast_ln34_11_fu_1058_p1[22:0];

assign trunc_ln34_12_fu_1123_p1 = bitcast_ln34_12_fu_1109_p1[22:0];

assign trunc_ln34_13_fu_1174_p1 = bitcast_ln34_13_fu_1160_p1[22:0];

assign trunc_ln34_14_fu_1231_p1 = bitcast_ln34_14_fu_1217_p1[22:0];

assign trunc_ln34_15_fu_1282_p1 = bitcast_ln34_15_fu_1268_p1[22:0];

assign trunc_ln34_1_fu_562_p1 = bitcast_ln34_1_fu_548_p1[22:0];

assign trunc_ln34_2_fu_613_p1 = bitcast_ln34_2_fu_599_p1[22:0];

assign trunc_ln34_3_fu_664_p1 = bitcast_ln34_3_fu_650_p1[22:0];

assign trunc_ln34_4_fu_715_p1 = bitcast_ln34_4_fu_701_p1[22:0];

assign trunc_ln34_5_fu_766_p1 = bitcast_ln34_5_fu_752_p1[22:0];

assign trunc_ln34_6_fu_817_p1 = bitcast_ln34_6_fu_803_p1[22:0];

assign trunc_ln34_7_fu_868_p1 = bitcast_ln34_7_fu_854_p1[22:0];

assign trunc_ln34_8_fu_919_p1 = bitcast_ln34_8_fu_905_p1[22:0];

assign trunc_ln34_9_fu_970_p1 = bitcast_ln34_9_fu_956_p1[22:0];

assign trunc_ln34_fu_511_p1 = bitcast_ln34_fu_497_p1[22:0];

assign weight_0_0_0_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_0_1_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_0_2_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_0_3_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_1_0_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_1_1_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_1_2_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_1_3_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_2_0_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_2_1_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_2_2_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_2_3_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_3_0_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_3_1_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_3_2_address0 = indvars_iv16_cast_fu_461_p1;

assign weight_0_3_3_address0 = indvars_iv16_cast_fu_461_p1;

endmodule //test_array
