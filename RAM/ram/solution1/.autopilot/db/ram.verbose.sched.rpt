

================================================================
== Vitis HLS Report for 'ram'
================================================================
* Date:           Wed Sep  8 09:54:52 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        ram
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.477 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      786|      789|  7.860 us|  7.890 us|  787|  790|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- input_hardcode   |      784|      784|         2|          1|          1|   784|       yes|
        |- output_hardcode  |      787|      787|         5|          1|          1|   784|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5
  * Pipeline-1: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 2
  Pipeline-0 : II = 1, D = 5, States = { 2 3 4 5 6 }
  Pipeline-1 : II = 1, D = 2, States = { 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 8 
2 --> 7 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 
7 --> 
8 --> 7 9 
9 --> 8 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_3"   --->   Operation 10 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_4, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %in_str_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %in_str_V"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %out_str_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %out_str_V"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %enable"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %enable, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i32P128A, i32 %in_str_V, i32 1" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:136]   --->   Operation 18 'nbreadreq' 'tmp' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln116 = br i1 %tmp, void, void" [ram.cpp:116]   --->   Operation 19 'br' 'br_ln116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %enable, i1 1" [ram.cpp:123]   --->   Operation 20 'write' 'write_ln123' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.42ns)   --->   "%br_ln103 = br void" [ram.cpp:103]   --->   Operation 21 'br' 'br_ln103' <Predicate = (!tmp)> <Delay = 0.42>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%write_ln118 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %enable, i1 0" [ram.cpp:118]   --->   Operation 22 'write' 'write_ln118' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%br_ln93 = br void" [ram.cpp:93]   --->   Operation 23 'br' 'br_ln93' <Predicate = (tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvars_iv11 = phi i10 %add_ln103, void %_ifconv11, i10 0, void" [ram.cpp:103]   --->   Operation 24 'phi' 'indvars_iv11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.78ns)   --->   "%add_ln103 = add i10 %indvars_iv11, i10 1" [ram.cpp:103]   --->   Operation 25 'add' 'add_ln103' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.91ns)   --->   "%icmp_ln103 = icmp_eq  i10 %indvars_iv11, i10 784" [ram.cpp:103]   --->   Operation 26 'icmp' 'icmp_ln103' <Predicate = true> <Delay = 0.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty_19 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 784, i64 784, i64 784"   --->   Operation 27 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln103 = br i1 %icmp_ln103, void %_ifconv11, void %_ZL14input_hardcodeRN3hls6streamI8ap_fixedILi32ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EELi0EEE.exit.loopexit" [ram.cpp:103]   --->   Operation 28 'br' 'br_ln103' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln103 = zext i10 %indvars_iv11" [ram.cpp:103]   --->   Operation 29 'zext' 'zext_ln103' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%image_input_addr = getelementptr i32 %image_input, i64 0, i64 %zext_ln103" [ram.cpp:106]   --->   Operation 30 'getelementptr' 'image_input_addr' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_2 : Operation 31 [2/2] (1.23ns)   --->   "%image_input_load = load i10 %image_input_addr" [ram.cpp:106]   --->   Operation 31 'load' 'image_input_load' <Predicate = (!icmp_ln103)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>

State 3 <SV = 2> <Delay = 3.54>
ST_3 : Operation 32 [1/2] (1.23ns)   --->   "%image_input_load = load i10 %image_input_addr" [ram.cpp:106]   --->   Operation 32 'load' 'image_input_load' <Predicate = (!icmp_ln103)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_3 : Operation 33 [2/2] (2.30ns)   --->   "%d = fpext i32 %image_input_load"   --->   Operation 33 'fpext' 'd' <Predicate = (!icmp_ln103)> <Delay = 2.30> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.43>
ST_4 : Operation 34 [1/2] (2.30ns)   --->   "%d = fpext i32 %image_input_load"   --->   Operation 34 'fpext' 'd' <Predicate = (!icmp_ln103)> <Delay = 2.30> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%ireg = bitcast i64 %d"   --->   Operation 35 'bitcast' 'ireg' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln555 = trunc i64 %ireg"   --->   Operation 36 'trunc' 'trunc_ln555' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%p_Result_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 37 'bitselect' 'p_Result_8' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%exp_tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %ireg, i32 52, i32 62"   --->   Operation 38 'partselect' 'exp_tmp' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg"   --->   Operation 39 'trunc' 'trunc_ln565' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.13ns)   --->   "%icmp_ln571 = icmp_eq  i63 %trunc_ln555, i63 0"   --->   Operation 40 'icmp' 'icmp_ln571' <Predicate = (!icmp_ln103)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.47>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln455 = zext i11 %exp_tmp"   --->   Operation 41 'zext' 'zext_ln455' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%p_Result_9 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln565"   --->   Operation 42 'bitconcatenate' 'p_Result_9' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln569 = zext i53 %p_Result_9"   --->   Operation 43 'zext' 'zext_ln569' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (1.10ns)   --->   "%man_V_1 = sub i54 0, i54 %zext_ln569"   --->   Operation 44 'sub' 'man_V_1' <Predicate = (!icmp_ln103 & p_Result_8)> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (0.40ns)   --->   "%man_V_2 = select i1 %p_Result_8, i54 %man_V_1, i54 %zext_ln569"   --->   Operation 45 'select' 'man_V_2' <Predicate = (!icmp_ln103)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.80ns)   --->   "%F2 = sub i12 1075, i12 %zext_ln455"   --->   Operation 46 'sub' 'F2' <Predicate = (!icmp_ln103)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.97ns)   --->   "%icmp_ln581 = icmp_sgt  i12 %F2, i12 24"   --->   Operation 47 'icmp' 'icmp_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.80ns)   --->   "%add_ln581 = add i12 %F2, i12 4072"   --->   Operation 48 'add' 'add_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (0.80ns)   --->   "%sub_ln581 = sub i12 24, i12 %F2"   --->   Operation 49 'sub' 'sub_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.37ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581"   --->   Operation 50 'select' 'sh_amt' <Predicate = (!icmp_ln103)> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln581 = sext i12 %sh_amt"   --->   Operation 51 'sext' 'sext_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.97ns)   --->   "%icmp_ln582 = icmp_eq  i12 %F2, i12 24"   --->   Operation 52 'icmp' 'icmp_ln582' <Predicate = (!icmp_ln103)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2"   --->   Operation 53 'trunc' 'trunc_ln583' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i7 @_ssdm_op_PartSelect.i7.i12.i32.i32, i12 %sh_amt, i32 5, i32 11"   --->   Operation 54 'partselect' 'tmp_7' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.81ns)   --->   "%icmp_ln603 = icmp_eq  i7 %tmp_7, i7 0"   --->   Operation 55 'icmp' 'icmp_ln603' <Predicate = (!icmp_ln103)> <Delay = 0.81> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%zext_ln586 = zext i32 %sext_ln581"   --->   Operation 56 'zext' 'zext_ln586' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%ashr_ln586 = ashr i54 %man_V_2, i54 %zext_ln586"   --->   Operation 57 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586"   --->   Operation 58 'trunc' 'trunc_ln586' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%bitcast_ln702 = bitcast i32 %image_input_load"   --->   Operation 59 'bitcast' 'bitcast_ln702' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln702, i32 31"   --->   Operation 60 'bitselect' 'tmp_8' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%select_ln588 = select i1 %tmp_8, i32 4294967295, i32 0"   --->   Operation 61 'select' 'select_ln588' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_3)   --->   "%shl_ln604 = shl i32 %trunc_ln583, i32 %sext_ln581"   --->   Operation 62 'shl' 'shl_ln604' <Predicate = (!icmp_ln103 & !icmp_ln571)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, i1 1"   --->   Operation 63 'xor' 'xor_ln571' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_2)   --->   "%and_ln582 = and i1 %icmp_ln582, i1 %xor_ln571"   --->   Operation 64 'and' 'and_ln582' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.28ns)   --->   "%or_ln582 = or i1 %icmp_ln571, i1 %icmp_ln582"   --->   Operation 65 'or' 'or_ln582' <Predicate = (!icmp_ln103)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, i1 1"   --->   Operation 66 'xor' 'xor_ln582' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, i1 %xor_ln582"   --->   Operation 67 'and' 'and_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.97ns)   --->   "%icmp_ln585 = icmp_ugt  i12 %sh_amt, i12 53"   --->   Operation 68 'icmp' 'icmp_ln585' <Predicate = (!icmp_ln103)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_1)   --->   "%and_ln585 = and i1 %and_ln581, i1 %icmp_ln585"   --->   Operation 69 'and' 'and_ln585' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node or_ln571)   --->   "%or_ln581 = or i1 %or_ln582, i1 %icmp_ln581"   --->   Operation 70 'or' 'or_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node or_ln571)   --->   "%xor_ln581 = xor i1 %or_ln581, i1 1"   --->   Operation 71 'xor' 'xor_ln581' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln571)   --->   "%and_ln603 = and i1 %icmp_ln603, i1 %xor_ln581"   --->   Operation 72 'and' 'and_ln603' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_3)   --->   "%select_ln571 = select i1 %icmp_ln571, i32 0, i32 %shl_ln604"   --->   Operation 73 'select' 'select_ln571' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln571 = or i1 %icmp_ln571, i1 %and_ln603"   --->   Operation 74 'or' 'or_ln571' <Predicate = (!icmp_ln103)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (1.50ns) (out node of the LUT)   --->   "%select_ln571_1 = select i1 %and_ln585, i32 %select_ln588, i32 %trunc_ln586"   --->   Operation 75 'select' 'select_ln571_1' <Predicate = (!icmp_ln103)> <Delay = 1.50> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln571_2 = select i1 %and_ln582, i32 %trunc_ln583, i32 0"   --->   Operation 76 'select' 'select_ln571_2' <Predicate = (!icmp_ln103)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (1.38ns) (out node of the LUT)   --->   "%select_ln571_3 = select i1 %or_ln571, i32 %select_ln571, i32 %select_ln571_1"   --->   Operation 77 'select' 'select_ln571_3' <Predicate = (!icmp_ln103)> <Delay = 1.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln571_4)   --->   "%or_ln571_1 = or i1 %or_ln571, i1 %and_ln581"   --->   Operation 78 'or' 'or_ln571_1' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln571_4 = select i1 %or_ln571_1, i32 %select_ln571_3, i32 %select_ln571_2"   --->   Operation 79 'select' 'select_ln571_4' <Predicate = (!icmp_ln103)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 80 [2/2] (0.00ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.axis.volatile.i32P128A, i32 %out_str_V, i32 %select_ln571_4" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 80 'write' 'write_ln174' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%specpipeline_ln106 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [ram.cpp:106]   --->   Operation 81 'specpipeline' 'specpipeline_ln106' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%specloopname_ln106 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [ram.cpp:106]   --->   Operation 82 'specloopname' 'specloopname_ln106' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_6 : Operation 83 [1/2] (0.00ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.axis.volatile.i32P128A, i32 %out_str_V, i32 %select_ln571_4" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 83 'write' 'write_ln174' <Predicate = (!icmp_ln103)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln103 = br void" [ram.cpp:103]   --->   Operation 84 'br' 'br_ln103' <Predicate = (!icmp_ln103)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZL14input_hardcodeRN3hls6streamI8ap_fixedILi32ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EELi0EEE.exit"   --->   Operation 85 'br' 'br_ln0' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZL14input_hardcodeRN3hls6streamI8ap_fixedILi32ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EELi0EEE.exit"   --->   Operation 86 'br' 'br_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%ret_ln127 = ret" [ram.cpp:127]   --->   Operation 87 'ret' 'ret_ln127' <Predicate = true> <Delay = 0.00>

State 8 <SV = 1> <Delay = 5.17>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%indvars_iv = phi i10 %add_ln93, void %_ifconv, i10 0, void" [ram.cpp:93]   --->   Operation 88 'phi' 'indvars_iv' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.78ns)   --->   "%add_ln93 = add i10 %indvars_iv, i10 1" [ram.cpp:93]   --->   Operation 89 'add' 'add_ln93' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 90 [1/1] (0.91ns)   --->   "%icmp_ln93 = icmp_eq  i10 %indvars_iv, i10 784" [ram.cpp:93]   --->   Operation 90 'icmp' 'icmp_ln93' <Predicate = true> <Delay = 0.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 784, i64 784, i64 784"   --->   Operation 91 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln93 = br i1 %icmp_ln93, void %_ifconv, void %_ZL14input_hardcodeRN3hls6streamI8ap_fixedILi32ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EELi0EEE.exit.loopexit16" [ram.cpp:93]   --->   Operation 92 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_V_3 = read i32 @_ssdm_op_Read.axis.volatile.i32P128A, i32 %in_str_V" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 93 'read' 'tmp_V_3' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_8 : Operation 94 [1/1] (0.99ns)   --->   "%icmp_ln935 = icmp_eq  i32 %tmp_V_3, i32 0"   --->   Operation 94 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln93)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%p_Result_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_V_3, i32 31"   --->   Operation 95 'bitselect' 'p_Result_4' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (1.01ns)   --->   "%tmp_V = sub i32 0, i32 %tmp_V_3"   --->   Operation 96 'sub' 'tmp_V' <Predicate = (!icmp_ln93)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 97 [1/1] (0.44ns)   --->   "%tmp_V_4 = select i1 %p_Result_4, i32 %tmp_V, i32 %tmp_V_3"   --->   Operation 97 'select' 'tmp_V_4' <Predicate = (!icmp_ln93)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%p_Result_5 = partselect i32 @_ssdm_op_PartSelect.i32.i32.i32.i32, i32 %tmp_V_4, i32 31, i32 0"   --->   Operation 98 'partselect' 'p_Result_5' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%l = cttz i32 @llvm.cttz.i32, i32 %p_Result_5, i1 1"   --->   Operation 99 'cttz' 'l' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (1.01ns)   --->   "%sub_ln944 = sub i32 32, i32 %l"   --->   Operation 100 'sub' 'sub_ln944' <Predicate = (!icmp_ln93)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (1.01ns)   --->   "%lsb_index = add i32 %sub_ln944, i32 4294967272"   --->   Operation 101 'add' 'lsb_index' <Predicate = (!icmp_ln93)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %lsb_index, i32 1, i32 31"   --->   Operation 102 'partselect' 'tmp_3' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.99ns)   --->   "%icmp_ln946 = icmp_sgt  i31 %tmp_3, i31 0"   --->   Operation 103 'icmp' 'icmp_ln946' <Predicate = (!icmp_ln93)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944"   --->   Operation 104 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.78ns)   --->   "%sub_ln947 = sub i6 57, i6 %trunc_ln947"   --->   Operation 105 'sub' 'sub_ln947' <Predicate = (!icmp_ln93)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln949)   --->   "%zext_ln947 = zext i6 %sub_ln947"   --->   Operation 106 'zext' 'zext_ln947' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln949)   --->   "%lshr_ln947 = lshr i32 4294967295, i32 %zext_ln947"   --->   Operation 107 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln949)   --->   "%shl_ln949 = shl i32 1, i32 %lsb_index"   --->   Operation 108 'shl' 'shl_ln949' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln949)   --->   "%or_ln949_1 = or i32 %lshr_ln947, i32 %shl_ln949"   --->   Operation 109 'or' 'or_ln949_1' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln949)   --->   "%and_ln949 = and i32 %tmp_V_4, i32 %or_ln949_1"   --->   Operation 110 'and' 'and_ln949' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (1.38ns) (out node of the LUT)   --->   "%icmp_ln949 = icmp_ne  i32 %and_ln949, i32 0"   --->   Operation 111 'icmp' 'icmp_ln949' <Predicate = (!icmp_ln93)> <Delay = 1.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node select_ln958)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %lsb_index, i32 31"   --->   Operation 112 'bitselect' 'tmp_4' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node select_ln958)   --->   "%xor_ln949 = xor i1 %tmp_4, i1 1"   --->   Operation 113 'xor' 'xor_ln949' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%p_Result_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_V_4, i32 %lsb_index"   --->   Operation 114 'bitselect' 'p_Result_6' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.99ns)   --->   "%icmp_ln958 = icmp_sgt  i32 %lsb_index, i32 0"   --->   Operation 115 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln93)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node select_ln958)   --->   "%select_ln946 = select i1 %icmp_ln946, i1 %icmp_ln949, i1 %p_Result_6"   --->   Operation 116 'select' 'select_ln946' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node select_ln958)   --->   "%and_ln949_1 = and i1 %p_Result_6, i1 %xor_ln949"   --->   Operation 117 'and' 'and_ln949_1' <Predicate = (!icmp_ln93)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln958 = select i1 %icmp_ln958, i1 %select_ln946, i1 %and_ln949_1"   --->   Operation 118 'select' 'select_ln958' <Predicate = (!icmp_ln93)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l"   --->   Operation 119 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln93)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 5.53>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i10 %indvars_iv" [ram.cpp:93]   --->   Operation 120 'zext' 'zext_ln93' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0]   --->   Operation 121 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0]   --->   Operation 122 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln957 = zext i32 %tmp_V_4"   --->   Operation 123 'zext' 'zext_ln957' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (1.01ns)   --->   "%add_ln958 = add i32 %sub_ln944, i32 4294967271"   --->   Operation 124 'add' 'add_ln958' <Predicate = (!icmp_ln93 & icmp_ln958 & !icmp_ln935)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%zext_ln958 = zext i32 %add_ln958"   --->   Operation 125 'zext' 'zext_ln958' <Predicate = (!icmp_ln93 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%lshr_ln958 = lshr i64 %zext_ln957, i64 %zext_ln958"   --->   Operation 126 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln93 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (1.01ns)   --->   "%sub_ln959 = sub i32 25, i32 %sub_ln944"   --->   Operation 127 'sub' 'sub_ln959' <Predicate = (!icmp_ln93 & !icmp_ln958 & !icmp_ln935)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%zext_ln959 = zext i32 %sub_ln959"   --->   Operation 128 'zext' 'zext_ln959' <Predicate = (!icmp_ln93 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%shl_ln959 = shl i64 %zext_ln957, i64 %zext_ln959"   --->   Operation 129 'shl' 'shl_ln959' <Predicate = (!icmp_ln93 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%m_2 = select i1 %icmp_ln958, i64 %lshr_ln958, i64 %shl_ln959"   --->   Operation 130 'select' 'm_2' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node m_3)   --->   "%zext_ln961 = zext i1 %select_ln958"   --->   Operation 131 'zext' 'zext_ln961' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (1.38ns) (out node of the LUT)   --->   "%m_3 = add i64 %m_2, i64 %zext_ln961"   --->   Operation 132 'add' 'm_3' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 1.38> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%m_4 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %m_3, i32 1, i32 63"   --->   Operation 133 'partselect' 'm_4' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln962 = zext i63 %m_4"   --->   Operation 134 'zext' 'zext_ln962' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %m_3, i32 25"   --->   Operation 135 'bitselect' 'p_Result_s' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (0.39ns)   --->   "%select_ln943 = select i1 %p_Result_s, i8 127, i8 126"   --->   Operation 136 'select' 'select_ln943' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 137 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 8, i8 %trunc_ln943"   --->   Operation 137 'sub' 'sub_ln964' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 138 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %sub_ln964, i8 %select_ln943"   --->   Operation 138 'add' 'add_ln964' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %p_Result_4, i8 %add_ln964"   --->   Operation 139 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%p_Result_7 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln962, i9 %tmp_2, i32 23, i32 31"   --->   Operation 140 'partset' 'p_Result_7' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "%LD = trunc i64 %p_Result_7"   --->   Operation 141 'trunc' 'LD' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "%bitcast_ln744 = bitcast i32 %LD"   --->   Operation 142 'bitcast' 'bitcast_ln744' <Predicate = (!icmp_ln93 & !icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 143 [1/1] (0.44ns)   --->   "%select_ln935 = select i1 %icmp_ln935, i32 0, i32 %bitcast_ln744"   --->   Operation 143 'select' 'select_ln935' <Predicate = (!icmp_ln93)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "%image_input_addr_1 = getelementptr i32 %image_input, i64 0, i64 %zext_ln93" [ram.cpp:97]   --->   Operation 144 'getelementptr' 'image_input_addr_1' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (1.23ns)   --->   "%store_ln97 = store i32 %select_ln935, i10 %image_input_addr_1" [ram.cpp:97]   --->   Operation 145 'store' 'store_ln97' <Predicate = (!icmp_ln93)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln93 = br void" [ram.cpp:93]   --->   Operation 146 'br' 'br_ln93' <Predicate = (!icmp_ln93)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvars_iv11', ram.cpp:103) with incoming values : ('add_ln103', ram.cpp:103) [20]  (0.427 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'phi' operation ('indvars_iv11', ram.cpp:103) with incoming values : ('add_ln103', ram.cpp:103) [20]  (0 ns)
	'getelementptr' operation ('image_input_addr', ram.cpp:106) [29]  (0 ns)
	'load' operation ('v', ram.cpp:106) on array 'image_input' [30]  (1.24 ns)

 <State 3>: 3.54ns
The critical path consists of the following:
	'load' operation ('v', ram.cpp:106) on array 'image_input' [30]  (1.24 ns)
	'fpext' operation ('d') [31]  (2.31 ns)

 <State 4>: 3.44ns
The critical path consists of the following:
	'fpext' operation ('d') [31]  (2.31 ns)
	'icmp' operation ('icmp_ln571') [42]  (1.13 ns)

 <State 5>: 6.48ns
The critical path consists of the following:
	'sub' operation ('F2') [43]  (0.809 ns)
	'icmp' operation ('icmp_ln581') [44]  (0.976 ns)
	'select' operation ('sh_amt') [47]  (0.375 ns)
	'icmp' operation ('icmp_ln585') [65]  (0.976 ns)
	'and' operation ('and_ln585') [66]  (0 ns)
	'select' operation ('select_ln571_1') [72]  (1.51 ns)
	'select' operation ('select_ln571_3') [74]  (1.39 ns)
	'select' operation ('select_ln571_4') [76]  (0.449 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 5.17ns
The critical path consists of the following:
	axis read on port 'in_str_V' (C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [94]  (0 ns)
	'sub' operation ('tmp.V') [97]  (1.02 ns)
	'select' operation ('tmp.V') [98]  (0.449 ns)
	'cttz' operation ('l') [100]  (0 ns)
	'sub' operation ('sub_ln944') [101]  (1.02 ns)
	'add' operation ('lsb_index') [102]  (1.02 ns)
	'shl' operation ('shl_ln949') [109]  (0 ns)
	'or' operation ('or_ln949_1') [110]  (0 ns)
	'and' operation ('and_ln949') [111]  (0 ns)
	'icmp' operation ('icmp_ln949') [112]  (1.39 ns)
	'select' operation ('select_ln946') [118]  (0 ns)
	'select' operation ('select_ln958') [126]  (0.287 ns)

 <State 9>: 5.53ns
The critical path consists of the following:
	'add' operation ('add_ln958') [119]  (1.02 ns)
	'lshr' operation ('lshr_ln958') [121]  (0 ns)
	'select' operation ('m') [127]  (0 ns)
	'add' operation ('m') [129]  (1.39 ns)
	'select' operation ('select_ln943') [133]  (0.393 ns)
	'add' operation ('add_ln964') [136]  (1.05 ns)
	'select' operation ('select_ln935') [141]  (0.449 ns)
	'store' operation ('store_ln97', ram.cpp:97) of variable 'select_ln935' on array 'image_input' [143]  (1.24 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
