// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn_cnn,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=21.898000,HLS_SYN_LAT=47670,HLS_SYN_TPT=none,HLS_SYN_MEM=42,HLS_SYN_DSP=0,HLS_SYN_FF=32703,HLS_SYN_LUT=55455,HLS_VERSION=2020_2}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        in_stream_V_TDATA,
        in_stream_V_TVALID,
        in_stream_V_TREADY,
        out_stream_V_TDATA,
        out_stream_V_TVALID,
        out_stream_V_TREADY
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_pp1_stage0 = 22'd512;
parameter    ap_ST_fsm_state13 = 22'd1024;
parameter    ap_ST_fsm_state14 = 22'd2048;
parameter    ap_ST_fsm_state15 = 22'd4096;
parameter    ap_ST_fsm_state16 = 22'd8192;
parameter    ap_ST_fsm_state17 = 22'd16384;
parameter    ap_ST_fsm_state18 = 22'd32768;
parameter    ap_ST_fsm_state19 = 22'd65536;
parameter    ap_ST_fsm_state20 = 22'd131072;
parameter    ap_ST_fsm_state21 = 22'd262144;
parameter    ap_ST_fsm_state22 = 22'd524288;
parameter    ap_ST_fsm_state23 = 22'd1048576;
parameter    ap_ST_fsm_state24 = 22'd2097152;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_V_TDATA;
input   in_stream_V_TVALID;
output   in_stream_V_TREADY;
output  [31:0] out_stream_V_TDATA;
output   out_stream_V_TVALID;
input   out_stream_V_TREADY;

 reg    ap_rst_n_inv;
reg   [4:0] fc_layer2_weights_address0;
reg    fc_layer2_weights_ce0;
wire   [31:0] fc_layer2_weights_q0;
reg    out_stream_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
reg   [1:0] i_reg_244;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln239_reg_582;
wire    ap_CS_fsm_state16;
wire   [31:0] fc1_out_dout;
wire    fc1_out_empty_n;
reg    fc1_out_read;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_334_p2;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] reg_356;
wire    ap_CS_fsm_state21;
wire   [7:0] empty_98_fu_362_p2;
wire    ap_CS_fsm_state8;
wire   [31:0] read_fu_379_p1;
reg   [31:0] read_reg_572;
wire    ap_CS_fsm_state9;
wire   [1:0] add_ln239_fu_383_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln239_fu_389_p2;
reg   [0:0] icmp_ln239_reg_582_pp1_iter1_reg;
wire   [63:0] i_cast_fu_395_p1;
reg   [63:0] i_cast_reg_586;
reg   [63:0] i_cast_reg_586_pp1_iter1_reg;
wire    ap_CS_fsm_state13;
wire   [31:0] output_q1;
wire    ap_CS_fsm_state14;
wire   [31:0] output_q0;
wire   [4:0] tmp_1_fu_406_p3;
reg   [4:0] tmp_1_reg_619;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln242_fu_400_p2;
wire   [31:0] read_273_fu_433_p1;
reg   [31:0] read_273_reg_634;
wire   [3:0] add_ln242_fu_438_p2;
wire    ap_CS_fsm_state19;
wire   [31:0] select_ln174_fu_486_p3;
wire   [31:0] select_ln174_17_fu_537_p3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] output_address0;
reg    output_ce0;
reg    output_we0;
reg   [31:0] output_d0;
wire   [7:0] output_address1;
reg    output_ce1;
wire    grp_pool_layer1_fu_287_ap_start;
wire    grp_pool_layer1_fu_287_ap_done;
wire    grp_pool_layer1_fu_287_ap_idle;
wire    grp_pool_layer1_fu_287_ap_ready;
wire   [31:0] grp_pool_layer1_fu_287_out_r_din;
wire    grp_pool_layer1_fu_287_out_r_write;
wire    grp_pool_layer1_fu_287_in_r_read;
wire    grp_conv_layer1_fu_293_ap_start;
wire    grp_conv_layer1_fu_293_ap_done;
wire    grp_conv_layer1_fu_293_ap_idle;
wire    grp_conv_layer1_fu_293_ap_ready;
wire   [31:0] grp_conv_layer1_fu_293_out_r_din;
wire    grp_conv_layer1_fu_293_out_r_write;
wire    grp_conv_layer1_fu_293_in_stream_V_TREADY;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_326_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_326_p_din1;
wire   [1:0] grp_conv_layer1_fu_293_grp_fu_326_p_opcode;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_326_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_326_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_659_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_659_p_din1;
wire   [1:0] grp_conv_layer1_fu_293_grp_fu_659_p_opcode;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_659_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_659_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_663_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_663_p_din1;
wire   [1:0] grp_conv_layer1_fu_293_grp_fu_663_p_opcode;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_663_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_663_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_667_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_667_p_din1;
wire   [1:0] grp_conv_layer1_fu_293_grp_fu_667_p_opcode;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_667_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_667_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_671_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_671_p_din1;
wire   [1:0] grp_conv_layer1_fu_293_grp_fu_671_p_opcode;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_671_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_671_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_334_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_334_p_din1;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_334_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_334_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_675_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_675_p_din1;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_675_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_675_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_679_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_679_p_din1;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_679_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_679_p_ce;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_683_p_din0;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_683_p_din1;
wire   [31:0] grp_conv_layer1_fu_293_grp_fu_683_p_dout0;
wire    grp_conv_layer1_fu_293_grp_fu_683_p_ce;
wire    grp_fc_layer1_fu_300_ap_start;
wire    grp_fc_layer1_fu_300_ap_done;
wire    grp_fc_layer1_fu_300_ap_idle;
wire    grp_fc_layer1_fu_300_ap_ready;
wire   [31:0] grp_fc_layer1_fu_300_fc1_out5_din;
wire    grp_fc_layer1_fu_300_fc1_out5_write;
wire    grp_fc_layer1_fu_300_pool1_out4_read;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_326_p_din0;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_326_p_din1;
wire   [1:0] grp_fc_layer1_fu_300_grp_fu_326_p_opcode;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_326_p_dout0;
wire    grp_fc_layer1_fu_300_grp_fu_326_p_ce;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_659_p_din0;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_659_p_din1;
wire   [1:0] grp_fc_layer1_fu_300_grp_fu_659_p_opcode;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_659_p_dout0;
wire    grp_fc_layer1_fu_300_grp_fu_659_p_ce;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_334_p_din0;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_334_p_din1;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_334_p_dout0;
wire    grp_fc_layer1_fu_300_grp_fu_334_p_ce;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_675_p_din0;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_675_p_din1;
wire   [31:0] grp_fc_layer1_fu_300_grp_fu_675_p_dout0;
wire    grp_fc_layer1_fu_300_grp_fu_675_p_ce;
reg   [7:0] empty_97_reg_233;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond94_fu_368_p2;
reg   [3:0] j_reg_255;
reg   [31:0] add_113_i_reg_267;
reg   [31:0] add12_i_reg_277;
reg    grp_pool_layer1_fu_287_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    pool1_out_full_n;
reg    pool1_out_write;
wire    ap_CS_fsm_state5;
wire   [31:0] conv1_out_dout;
wire    conv1_out_empty_n;
reg    conv1_out_read;
reg    grp_conv_layer1_fu_293_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    conv1_out_full_n;
reg    conv1_out_write;
wire    ap_CS_fsm_state3;
reg    grp_fc_layer1_fu_300_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    fc1_out_full_n;
reg    fc1_out_write;
wire   [31:0] pool1_out_dout;
wire    pool1_out_empty_n;
reg    pool1_out_read;
wire   [63:0] p_cast_fu_374_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln247_fu_414_p1;
wire   [63:0] tmp_2_fu_424_p3;
reg   [31:0] grp_fu_326_p0;
reg   [31:0] grp_fu_326_p1;
wire    ap_CS_fsm_state20;
reg   [31:0] grp_fu_334_p0;
reg   [31:0] grp_fu_334_p1;
wire   [4:0] or_ln247_fu_419_p2;
wire   [31:0] bitcast_ln34_fu_444_p1;
wire   [7:0] tmp_fu_448_p4;
wire   [22:0] trunc_ln34_fu_458_p1;
wire   [0:0] icmp_ln34_35_fu_468_p2;
wire   [0:0] icmp_ln34_fu_462_p2;
wire   [0:0] or_ln34_fu_474_p2;
wire   [0:0] grp_fu_341_p2;
wire   [0:0] and_ln34_fu_480_p2;
wire   [31:0] bitcast_ln34_17_fu_495_p1;
wire   [7:0] tmp_999_fu_499_p4;
wire   [22:0] trunc_ln34_17_fu_509_p1;
wire   [0:0] icmp_ln34_37_fu_519_p2;
wire   [0:0] icmp_ln34_36_fu_513_p2;
wire   [0:0] or_ln34_17_fu_525_p2;
wire   [0:0] and_ln34_17_fu_531_p2;
reg    grp_fu_326_ce;
reg    grp_fu_334_ce;
wire   [31:0] grp_fu_659_p2;
reg   [31:0] grp_fu_659_p0;
reg   [31:0] grp_fu_659_p1;
reg    grp_fu_659_ce;
wire   [31:0] grp_fu_663_p2;
wire   [31:0] grp_fu_663_p0;
wire   [31:0] grp_fu_663_p1;
reg    grp_fu_663_ce;
wire   [31:0] grp_fu_667_p2;
wire   [31:0] grp_fu_667_p0;
wire   [31:0] grp_fu_667_p1;
reg    grp_fu_667_ce;
wire   [31:0] grp_fu_671_p2;
wire   [31:0] grp_fu_671_p0;
wire   [31:0] grp_fu_671_p1;
reg    grp_fu_671_ce;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_675_p1;
reg    grp_fu_675_ce;
wire   [31:0] grp_fu_679_p2;
wire   [31:0] grp_fu_679_p0;
wire   [31:0] grp_fu_679_p1;
reg    grp_fu_679_ce;
wire   [31:0] grp_fu_683_p2;
wire   [31:0] grp_fu_683_p0;
wire   [31:0] grp_fu_683_p1;
reg    grp_fu_683_ce;
reg   [21:0] ap_NS_fsm;
wire    regslice_both_out_stream_V_U_apdone_blk;
reg    ap_block_state24;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in_stream_V_U_apdone_blk;
wire   [31:0] in_stream_V_TDATA_int_regslice;
wire    in_stream_V_TVALID_int_regslice;
reg    in_stream_V_TREADY_int_regslice;
wire    regslice_both_in_stream_V_U_ack_in;
reg   [31:0] out_stream_V_TDATA_int_regslice;
reg    out_stream_V_TVALID_int_regslice;
wire    out_stream_V_TREADY_int_regslice;
wire    regslice_both_out_stream_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 grp_pool_layer1_fu_287_ap_start_reg = 1'b0;
#0 grp_conv_layer1_fu_293_ap_start_reg = 1'b0;
#0 grp_fc_layer1_fu_300_ap_start_reg = 1'b0;
end

cnn_fc_layer2_weights #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
fc_layer2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_layer2_weights_address0),
    .ce0(fc_layer2_weights_ce0),
    .q0(fc_layer2_weights_q0)
);

cnn_output #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_address0),
    .ce0(output_ce0),
    .we0(output_we0),
    .d0(output_d0),
    .q0(output_q0),
    .address1(output_address1),
    .ce1(output_ce1),
    .q1(output_q1)
);

cnn_pool_layer1 grp_pool_layer1_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pool_layer1_fu_287_ap_start),
    .ap_done(grp_pool_layer1_fu_287_ap_done),
    .ap_idle(grp_pool_layer1_fu_287_ap_idle),
    .ap_ready(grp_pool_layer1_fu_287_ap_ready),
    .out_r_din(grp_pool_layer1_fu_287_out_r_din),
    .out_r_full_n(pool1_out_full_n),
    .out_r_write(grp_pool_layer1_fu_287_out_r_write),
    .in_r_dout(conv1_out_dout),
    .in_r_empty_n(conv1_out_empty_n),
    .in_r_read(grp_pool_layer1_fu_287_in_r_read)
);

cnn_conv_layer1 grp_conv_layer1_fu_293(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_layer1_fu_293_ap_start),
    .ap_done(grp_conv_layer1_fu_293_ap_done),
    .ap_idle(grp_conv_layer1_fu_293_ap_idle),
    .ap_ready(grp_conv_layer1_fu_293_ap_ready),
    .out_r_din(grp_conv_layer1_fu_293_out_r_din),
    .out_r_full_n(conv1_out_full_n),
    .out_r_write(grp_conv_layer1_fu_293_out_r_write),
    .in_stream_V_TDATA(in_stream_V_TDATA_int_regslice),
    .in_stream_V_TVALID(in_stream_V_TVALID_int_regslice),
    .in_stream_V_TREADY(grp_conv_layer1_fu_293_in_stream_V_TREADY),
    .grp_fu_326_p_din0(grp_conv_layer1_fu_293_grp_fu_326_p_din0),
    .grp_fu_326_p_din1(grp_conv_layer1_fu_293_grp_fu_326_p_din1),
    .grp_fu_326_p_opcode(grp_conv_layer1_fu_293_grp_fu_326_p_opcode),
    .grp_fu_326_p_dout0(grp_conv_layer1_fu_293_grp_fu_326_p_dout0),
    .grp_fu_326_p_ce(grp_conv_layer1_fu_293_grp_fu_326_p_ce),
    .grp_fu_659_p_din0(grp_conv_layer1_fu_293_grp_fu_659_p_din0),
    .grp_fu_659_p_din1(grp_conv_layer1_fu_293_grp_fu_659_p_din1),
    .grp_fu_659_p_opcode(grp_conv_layer1_fu_293_grp_fu_659_p_opcode),
    .grp_fu_659_p_dout0(grp_conv_layer1_fu_293_grp_fu_659_p_dout0),
    .grp_fu_659_p_ce(grp_conv_layer1_fu_293_grp_fu_659_p_ce),
    .grp_fu_663_p_din0(grp_conv_layer1_fu_293_grp_fu_663_p_din0),
    .grp_fu_663_p_din1(grp_conv_layer1_fu_293_grp_fu_663_p_din1),
    .grp_fu_663_p_opcode(grp_conv_layer1_fu_293_grp_fu_663_p_opcode),
    .grp_fu_663_p_dout0(grp_conv_layer1_fu_293_grp_fu_663_p_dout0),
    .grp_fu_663_p_ce(grp_conv_layer1_fu_293_grp_fu_663_p_ce),
    .grp_fu_667_p_din0(grp_conv_layer1_fu_293_grp_fu_667_p_din0),
    .grp_fu_667_p_din1(grp_conv_layer1_fu_293_grp_fu_667_p_din1),
    .grp_fu_667_p_opcode(grp_conv_layer1_fu_293_grp_fu_667_p_opcode),
    .grp_fu_667_p_dout0(grp_conv_layer1_fu_293_grp_fu_667_p_dout0),
    .grp_fu_667_p_ce(grp_conv_layer1_fu_293_grp_fu_667_p_ce),
    .grp_fu_671_p_din0(grp_conv_layer1_fu_293_grp_fu_671_p_din0),
    .grp_fu_671_p_din1(grp_conv_layer1_fu_293_grp_fu_671_p_din1),
    .grp_fu_671_p_opcode(grp_conv_layer1_fu_293_grp_fu_671_p_opcode),
    .grp_fu_671_p_dout0(grp_conv_layer1_fu_293_grp_fu_671_p_dout0),
    .grp_fu_671_p_ce(grp_conv_layer1_fu_293_grp_fu_671_p_ce),
    .grp_fu_334_p_din0(grp_conv_layer1_fu_293_grp_fu_334_p_din0),
    .grp_fu_334_p_din1(grp_conv_layer1_fu_293_grp_fu_334_p_din1),
    .grp_fu_334_p_dout0(grp_conv_layer1_fu_293_grp_fu_334_p_dout0),
    .grp_fu_334_p_ce(grp_conv_layer1_fu_293_grp_fu_334_p_ce),
    .grp_fu_675_p_din0(grp_conv_layer1_fu_293_grp_fu_675_p_din0),
    .grp_fu_675_p_din1(grp_conv_layer1_fu_293_grp_fu_675_p_din1),
    .grp_fu_675_p_dout0(grp_conv_layer1_fu_293_grp_fu_675_p_dout0),
    .grp_fu_675_p_ce(grp_conv_layer1_fu_293_grp_fu_675_p_ce),
    .grp_fu_679_p_din0(grp_conv_layer1_fu_293_grp_fu_679_p_din0),
    .grp_fu_679_p_din1(grp_conv_layer1_fu_293_grp_fu_679_p_din1),
    .grp_fu_679_p_dout0(grp_conv_layer1_fu_293_grp_fu_679_p_dout0),
    .grp_fu_679_p_ce(grp_conv_layer1_fu_293_grp_fu_679_p_ce),
    .grp_fu_683_p_din0(grp_conv_layer1_fu_293_grp_fu_683_p_din0),
    .grp_fu_683_p_din1(grp_conv_layer1_fu_293_grp_fu_683_p_din1),
    .grp_fu_683_p_dout0(grp_conv_layer1_fu_293_grp_fu_683_p_dout0),
    .grp_fu_683_p_ce(grp_conv_layer1_fu_293_grp_fu_683_p_ce)
);

cnn_fc_layer1 grp_fc_layer1_fu_300(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_layer1_fu_300_ap_start),
    .ap_done(grp_fc_layer1_fu_300_ap_done),
    .ap_idle(grp_fc_layer1_fu_300_ap_idle),
    .ap_ready(grp_fc_layer1_fu_300_ap_ready),
    .fc1_out5_din(grp_fc_layer1_fu_300_fc1_out5_din),
    .fc1_out5_full_n(fc1_out_full_n),
    .fc1_out5_write(grp_fc_layer1_fu_300_fc1_out5_write),
    .pool1_out4_dout(pool1_out_dout),
    .pool1_out4_empty_n(pool1_out_empty_n),
    .pool1_out4_read(grp_fc_layer1_fu_300_pool1_out4_read),
    .grp_fu_326_p_din0(grp_fc_layer1_fu_300_grp_fu_326_p_din0),
    .grp_fu_326_p_din1(grp_fc_layer1_fu_300_grp_fu_326_p_din1),
    .grp_fu_326_p_opcode(grp_fc_layer1_fu_300_grp_fu_326_p_opcode),
    .grp_fu_326_p_dout0(grp_fc_layer1_fu_300_grp_fu_326_p_dout0),
    .grp_fu_326_p_ce(grp_fc_layer1_fu_300_grp_fu_326_p_ce),
    .grp_fu_659_p_din0(grp_fc_layer1_fu_300_grp_fu_659_p_din0),
    .grp_fu_659_p_din1(grp_fc_layer1_fu_300_grp_fu_659_p_din1),
    .grp_fu_659_p_opcode(grp_fc_layer1_fu_300_grp_fu_659_p_opcode),
    .grp_fu_659_p_dout0(grp_fc_layer1_fu_300_grp_fu_659_p_dout0),
    .grp_fu_659_p_ce(grp_fc_layer1_fu_300_grp_fu_659_p_ce),
    .grp_fu_334_p_din0(grp_fc_layer1_fu_300_grp_fu_334_p_din0),
    .grp_fu_334_p_din1(grp_fc_layer1_fu_300_grp_fu_334_p_din1),
    .grp_fu_334_p_dout0(grp_fc_layer1_fu_300_grp_fu_334_p_dout0),
    .grp_fu_334_p_ce(grp_fc_layer1_fu_300_grp_fu_334_p_ce),
    .grp_fu_675_p_din0(grp_fc_layer1_fu_300_grp_fu_675_p_din0),
    .grp_fu_675_p_din1(grp_fc_layer1_fu_300_grp_fu_675_p_din1),
    .grp_fu_675_p_dout0(grp_fc_layer1_fu_300_grp_fu_675_p_dout0),
    .grp_fu_675_p_ce(grp_fc_layer1_fu_300_grp_fu_675_p_ce)
);

cnn_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_326_p0),
    .din1(grp_fu_326_p1),
    .ce(grp_fu_326_ce),
    .dout(grp_fu_326_p2)
);

cnn_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_334_p0),
    .din1(grp_fu_334_p1),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p2)
);

cnn_fcmp_32ns_32ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_1_no_dsp_1_U38(
    .din0(reg_356),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(grp_fu_341_p2)
);

cnn_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_659_p0),
    .din1(grp_fu_659_p1),
    .ce(grp_fu_659_ce),
    .dout(grp_fu_659_p2)
);

cnn_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_663_p0),
    .din1(grp_fu_663_p1),
    .ce(grp_fu_663_ce),
    .dout(grp_fu_663_p2)
);

cnn_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_667_p0),
    .din1(grp_fu_667_p1),
    .ce(grp_fu_667_ce),
    .dout(grp_fu_667_p2)
);

cnn_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_671_p0),
    .din1(grp_fu_671_p1),
    .ce(grp_fu_671_ce),
    .dout(grp_fu_671_p2)
);

cnn_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(grp_fu_675_ce),
    .dout(grp_fu_675_p2)
);

cnn_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_679_p0),
    .din1(grp_fu_679_p1),
    .ce(grp_fu_679_ce),
    .dout(grp_fu_679_p2)
);

cnn_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_683_p0),
    .din1(grp_fu_683_p1),
    .ce(grp_fu_683_ce),
    .dout(grp_fu_683_p2)
);

cnn_fifo_w32_d2_S conv1_out_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_conv_layer1_fu_293_out_r_din),
    .if_full_n(conv1_out_full_n),
    .if_write(conv1_out_write),
    .if_dout(conv1_out_dout),
    .if_empty_n(conv1_out_empty_n),
    .if_read(conv1_out_read)
);

cnn_fifo_w32_d2_S pool1_out_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pool_layer1_fu_287_out_r_din),
    .if_full_n(pool1_out_full_n),
    .if_write(pool1_out_write),
    .if_dout(pool1_out_dout),
    .if_empty_n(pool1_out_empty_n),
    .if_read(pool1_out_read)
);

cnn_fifo_w32_d2_S fc1_out_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fc_layer1_fu_300_fc1_out5_din),
    .if_full_n(fc1_out_full_n),
    .if_write(fc1_out_write),
    .if_dout(fc1_out_dout),
    .if_empty_n(fc1_out_empty_n),
    .if_read(fc1_out_read)
);

cnn_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_stream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_V_TDATA),
    .vld_in(in_stream_V_TVALID),
    .ack_in(regslice_both_in_stream_V_U_ack_in),
    .data_out(in_stream_V_TDATA_int_regslice),
    .vld_out(in_stream_V_TVALID_int_regslice),
    .ack_out(in_stream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_U_apdone_blk)
);

cnn_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_stream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_stream_V_TDATA_int_regslice),
    .vld_in(out_stream_V_TVALID_int_regslice),
    .ack_in(out_stream_V_TREADY_int_regslice),
    .data_out(out_stream_V_TDATA),
    .vld_out(regslice_both_out_stream_V_U_vld_out),
    .ack_out(out_stream_V_TREADY),
    .apdone_blk(regslice_both_out_stream_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state10))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_layer1_fu_293_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_conv_layer1_fu_293_ap_start_reg <= 1'b1;
        end else if ((grp_conv_layer1_fu_293_ap_ready == 1'b1)) begin
            grp_conv_layer1_fu_293_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_layer1_fu_300_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_fc_layer1_fu_300_ap_start_reg <= 1'b1;
        end else if ((grp_fc_layer1_fu_300_ap_ready == 1'b1)) begin
            grp_fc_layer1_fu_300_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pool_layer1_fu_287_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_pool_layer1_fu_287_ap_start_reg <= 1'b1;
        end else if ((grp_pool_layer1_fu_287_ap_ready == 1'b1)) begin
            grp_pool_layer1_fu_287_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add12_i_reg_277 <= output_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        add12_i_reg_277 <= reg_356;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_113_i_reg_267 <= output_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        add_113_i_reg_267 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond94_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        empty_97_reg_233 <= empty_98_fu_362_p2;
    end else if (((grp_fc_layer1_fu_300_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        empty_97_reg_233 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_reg_244 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln239_fu_389_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_reg_244 <= add_ln239_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_reg_255 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_reg_255 <= add_ln242_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln239_fu_389_p2 == 1'd0))) begin
        i_cast_reg_586[1 : 0] <= i_cast_fu_395_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_cast_reg_586_pp1_iter1_reg[1 : 0] <= i_cast_reg_586[1 : 0];
        icmp_ln239_reg_582 <= icmp_ln239_fu_389_p2;
        icmp_ln239_reg_582_pp1_iter1_reg <= icmp_ln239_reg_582;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        read_273_reg_634 <= read_273_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        read_reg_572 <= read_fu_379_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | ((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        reg_356 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln242_fu_400_p2 == 1'd0))) begin
        tmp_1_reg_619[4 : 1] <= tmp_1_fu_406_p3[4 : 1];
    end
end

always @ (*) begin
    if ((icmp_ln239_fu_389_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_out_read = grp_pool_layer1_fu_287_in_r_read;
    end else begin
        conv1_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_out_write = grp_conv_layer1_fu_293_out_r_write;
    end else begin
        conv1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        fc1_out_read = 1'b1;
    end else begin
        fc1_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fc1_out_write = grp_fc_layer1_fu_300_fc1_out5_write;
    end else begin
        fc1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_layer2_weights_address0 = tmp_2_fu_424_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fc_layer2_weights_address0 = zext_ln247_fu_414_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        fc_layer2_weights_address0 = i_cast_fu_395_p1;
    end else begin
        fc_layer2_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        fc_layer2_weights_ce0 = 1'b1;
    end else begin
        fc_layer2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_326_ce = grp_fc_layer1_fu_300_grp_fu_326_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_326_ce = grp_conv_layer1_fu_293_grp_fu_326_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        grp_fu_326_ce = 1'b1;
    end else begin
        grp_fu_326_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_326_p0 = grp_fc_layer1_fu_300_grp_fu_326_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_326_p0 = grp_conv_layer1_fu_293_grp_fu_326_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_326_p0 = add_113_i_reg_267;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_326_p0 = add12_i_reg_277;
    end else begin
        grp_fu_326_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_326_p1 = grp_fc_layer1_fu_300_grp_fu_326_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_326_p1 = grp_conv_layer1_fu_293_grp_fu_326_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_326_p1 = 32'd1051753605;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_326_p1 = 32'd1057337062;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_326_p1 = grp_fu_334_p2;
    end else begin
        grp_fu_326_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_334_ce = grp_fc_layer1_fu_300_grp_fu_334_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_334_ce = grp_conv_layer1_fu_293_grp_fu_334_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_334_p0 = grp_fc_layer1_fu_300_grp_fu_334_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_334_p0 = grp_conv_layer1_fu_293_grp_fu_334_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_fu_334_p0 = fc_layer2_weights_q0;
    end else begin
        grp_fu_334_p0 = fc_layer2_weights_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_334_p1 = grp_fc_layer1_fu_300_grp_fu_334_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_334_p1 = grp_conv_layer1_fu_293_grp_fu_334_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_334_p1 = read_273_reg_634;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_334_p1 = read_273_fu_433_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_334_p1 = read_reg_572;
    end else begin
        grp_fu_334_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_659_ce = grp_fc_layer1_fu_300_grp_fu_659_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_659_ce = grp_conv_layer1_fu_293_grp_fu_659_p_ce;
    end else begin
        grp_fu_659_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_659_p0 = grp_fc_layer1_fu_300_grp_fu_659_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_659_p0 = grp_conv_layer1_fu_293_grp_fu_659_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_659_p1 = grp_fc_layer1_fu_300_grp_fu_659_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_659_p1 = grp_conv_layer1_fu_293_grp_fu_659_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_663_ce = grp_conv_layer1_fu_293_grp_fu_663_p_ce;
    end else begin
        grp_fu_663_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_667_ce = grp_conv_layer1_fu_293_grp_fu_667_p_ce;
    end else begin
        grp_fu_667_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_671_ce = grp_conv_layer1_fu_293_grp_fu_671_p_ce;
    end else begin
        grp_fu_671_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_675_ce = grp_fc_layer1_fu_300_grp_fu_675_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_675_ce = grp_conv_layer1_fu_293_grp_fu_675_p_ce;
    end else begin
        grp_fu_675_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_675_p0 = grp_fc_layer1_fu_300_grp_fu_675_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_675_p0 = grp_conv_layer1_fu_293_grp_fu_675_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_675_p1 = grp_fc_layer1_fu_300_grp_fu_675_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_675_p1 = grp_conv_layer1_fu_293_grp_fu_675_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_679_ce = grp_conv_layer1_fu_293_grp_fu_679_p_ce;
    end else begin
        grp_fu_679_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_683_ce = grp_conv_layer1_fu_293_grp_fu_683_p_ce;
    end else begin
        grp_fu_683_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_stream_V_TREADY_int_regslice = grp_conv_layer1_fu_293_in_stream_V_TREADY;
    end else begin
        in_stream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        out_stream_V_TDATA_blk_n = out_stream_V_TREADY_int_regslice;
    end else begin
        out_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((out_stream_V_TREADY_int_regslice == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            out_stream_V_TDATA_int_regslice = select_ln174_17_fu_537_p3;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            out_stream_V_TDATA_int_regslice = select_ln174_fu_486_p3;
        end else begin
            out_stream_V_TDATA_int_regslice = 'bx;
        end
    end else begin
        out_stream_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        out_stream_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_stream_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        output_address0 = i_cast_reg_586_pp1_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_address0 = p_cast_fu_374_p1;
    end else begin
        output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        output_ce0 = 1'b1;
    end else begin
        output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_ce1 = 1'b1;
    end else begin
        output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        output_d0 = grp_fu_334_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_d0 = 32'd0;
    end else begin
        output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln239_reg_582_pp1_iter1_reg == 1'd0)) | ((exitcond94_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        output_we0 = 1'b1;
    end else begin
        output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        pool1_out_read = grp_fc_layer1_fu_300_pool1_out4_read;
    end else begin
        pool1_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        pool1_out_write = grp_pool_layer1_fu_287_out_r_write;
    end else begin
        pool1_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_conv_layer1_fu_293_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_pool_layer1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_fc_layer1_fu_300_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond94_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln239_fu_389_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln239_fu_389_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln242_fu_400_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((fc1_out_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((out_stream_V_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if ((~((out_stream_V_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln239_fu_383_p2 = (i_reg_244 + 2'd1);

assign add_ln242_fu_438_p2 = (j_reg_255 + 4'd1);

assign and_ln34_17_fu_531_p2 = (or_ln34_17_fu_525_p2 & grp_fu_341_p2);

assign and_ln34_fu_480_p2 = (or_ln34_fu_474_p2 & grp_fu_341_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24 = ((out_stream_V_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln34_17_fu_495_p1 = reg_356;

assign bitcast_ln34_fu_444_p1 = reg_356;

assign empty_98_fu_362_p2 = (empty_97_reg_233 + 8'd1);

assign exitcond94_fu_368_p2 = ((empty_97_reg_233 == 8'd200) ? 1'b1 : 1'b0);

assign grp_conv_layer1_fu_293_ap_start = grp_conv_layer1_fu_293_ap_start_reg;

assign grp_conv_layer1_fu_293_grp_fu_326_p_dout0 = grp_fu_326_p2;

assign grp_conv_layer1_fu_293_grp_fu_334_p_dout0 = grp_fu_334_p2;

assign grp_conv_layer1_fu_293_grp_fu_659_p_dout0 = grp_fu_659_p2;

assign grp_conv_layer1_fu_293_grp_fu_663_p_dout0 = grp_fu_663_p2;

assign grp_conv_layer1_fu_293_grp_fu_667_p_dout0 = grp_fu_667_p2;

assign grp_conv_layer1_fu_293_grp_fu_671_p_dout0 = grp_fu_671_p2;

assign grp_conv_layer1_fu_293_grp_fu_675_p_dout0 = grp_fu_675_p2;

assign grp_conv_layer1_fu_293_grp_fu_679_p_dout0 = grp_fu_679_p2;

assign grp_conv_layer1_fu_293_grp_fu_683_p_dout0 = grp_fu_683_p2;

assign grp_fc_layer1_fu_300_ap_start = grp_fc_layer1_fu_300_ap_start_reg;

assign grp_fc_layer1_fu_300_grp_fu_326_p_dout0 = grp_fu_326_p2;

assign grp_fc_layer1_fu_300_grp_fu_334_p_dout0 = grp_fu_334_p2;

assign grp_fc_layer1_fu_300_grp_fu_659_p_dout0 = grp_fu_659_p2;

assign grp_fc_layer1_fu_300_grp_fu_675_p_dout0 = grp_fu_675_p2;

assign grp_fu_663_p0 = grp_conv_layer1_fu_293_grp_fu_663_p_din0;

assign grp_fu_663_p1 = grp_conv_layer1_fu_293_grp_fu_663_p_din1;

assign grp_fu_667_p0 = grp_conv_layer1_fu_293_grp_fu_667_p_din0;

assign grp_fu_667_p1 = grp_conv_layer1_fu_293_grp_fu_667_p_din1;

assign grp_fu_671_p0 = grp_conv_layer1_fu_293_grp_fu_671_p_din0;

assign grp_fu_671_p1 = grp_conv_layer1_fu_293_grp_fu_671_p_din1;

assign grp_fu_679_p0 = grp_conv_layer1_fu_293_grp_fu_679_p_din0;

assign grp_fu_679_p1 = grp_conv_layer1_fu_293_grp_fu_679_p_din1;

assign grp_fu_683_p0 = grp_conv_layer1_fu_293_grp_fu_683_p_din0;

assign grp_fu_683_p1 = grp_conv_layer1_fu_293_grp_fu_683_p_din1;

assign grp_pool_layer1_fu_287_ap_start = grp_pool_layer1_fu_287_ap_start_reg;

assign i_cast_fu_395_p1 = i_reg_244;

assign icmp_ln239_fu_389_p2 = ((i_reg_244 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_400_p2 = ((j_reg_255 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln34_35_fu_468_p2 = ((trunc_ln34_fu_458_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_36_fu_513_p2 = ((tmp_999_fu_499_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_37_fu_519_p2 = ((trunc_ln34_17_fu_509_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_462_p2 = ((tmp_fu_448_p4 != 8'd255) ? 1'b1 : 1'b0);

assign in_stream_V_TREADY = regslice_both_in_stream_V_U_ack_in;

assign or_ln247_fu_419_p2 = (tmp_1_reg_619 | 5'd1);

assign or_ln34_17_fu_525_p2 = (icmp_ln34_37_fu_519_p2 | icmp_ln34_36_fu_513_p2);

assign or_ln34_fu_474_p2 = (icmp_ln34_fu_462_p2 | icmp_ln34_35_fu_468_p2);

assign out_stream_V_TVALID = regslice_both_out_stream_V_U_vld_out;

assign output_address1 = 64'd0;

assign p_cast_fu_374_p1 = empty_97_reg_233;

assign read_273_fu_433_p1 = fc1_out_dout;

assign read_fu_379_p1 = fc1_out_dout;

assign select_ln174_17_fu_537_p3 = ((and_ln34_17_fu_531_p2[0:0] == 1'b1) ? bitcast_ln34_17_fu_495_p1 : 32'd0);

assign select_ln174_fu_486_p3 = ((and_ln34_fu_480_p2[0:0] == 1'b1) ? bitcast_ln34_fu_444_p1 : 32'd0);

assign tmp_1_fu_406_p3 = {{j_reg_255}, {1'd0}};

assign tmp_2_fu_424_p3 = {{59'd0}, {or_ln247_fu_419_p2}};

assign tmp_999_fu_499_p4 = {{bitcast_ln34_17_fu_495_p1[30:23]}};

assign tmp_fu_448_p4 = {{bitcast_ln34_fu_444_p1[30:23]}};

assign trunc_ln34_17_fu_509_p1 = bitcast_ln34_17_fu_495_p1[22:0];

assign trunc_ln34_fu_458_p1 = bitcast_ln34_fu_444_p1[22:0];

assign zext_ln247_fu_414_p1 = tmp_1_fu_406_p3;

always @ (posedge ap_clk) begin
    i_cast_reg_586[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    i_cast_reg_586_pp1_iter1_reg[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_1_reg_619[0] <= 1'b0;
end

endmodule //cnn
